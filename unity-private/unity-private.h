/* unity-private.h generated by valac 0.9.7, the Vala compiler, do not modify */


#ifndef __UNITY_PRIVATE_H__
#define __UNITY_PRIVATE_H__

#include <glib.h>
#include <glib-object.h>
#include <float.h>
#include <math.h>
#include <X11/Xlib.h>
#include <X11/Xatom.h>
#include <X11/Xutil.h>
#include <X11/Xregion.h>
#include <stdlib.h>
#include <string.h>
#include <unique/unique.h>
#include <unity.h>
#include <gtk/gtk.h>
#include <dbus/dbus-glib-lowlevel.h>
#include <dbus/dbus-glib.h>
#include <clutter/clutter.h>
#include <gio/gio.h>
#include <clutk/clutk.h>
#include <libindicator/indicator-object.h>
#include <gee.h>
#include <libindicator/indicator.h>
#include <libindicator/indicator-service.h>
#include <libindicator/indicator-service-manager.h>
#include <cairo.h>
#include <dee.h>
#include <libdbusmenu-glib/client.h>
#include <libdbusmenu-glib/menuitem-proxy.h>
#include <libdbusmenu-glib/menuitem.h>
#include <libdbusmenu-glib/server.h>
#include <libbamf/libbamf.h>
#include <gdk-pixbuf/gdk-pixdata.h>
#include <clutter-gtk/clutter-gtk.h>

G_BEGIN_DECLS


#define UNITY_GESTURE_TYPE_DISPATCHER (unity_gesture_dispatcher_get_type ())
#define UNITY_GESTURE_DISPATCHER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_DISPATCHER, UnityGestureDispatcher))
#define UNITY_GESTURE_DISPATCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_DISPATCHER, UnityGestureDispatcherClass))
#define UNITY_GESTURE_IS_DISPATCHER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_DISPATCHER))
#define UNITY_GESTURE_IS_DISPATCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_DISPATCHER))
#define UNITY_GESTURE_DISPATCHER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_DISPATCHER, UnityGestureDispatcherClass))

typedef struct _UnityGestureDispatcher UnityGestureDispatcher;
typedef struct _UnityGestureDispatcherClass UnityGestureDispatcherClass;
typedef struct _UnityGestureDispatcherPrivate UnityGestureDispatcherPrivate;

#define UNITY_GESTURE_TYPE_XCB_DISPATCHER (unity_gesture_xcb_dispatcher_get_type ())
#define UNITY_GESTURE_XCB_DISPATCHER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_XCB_DISPATCHER, UnityGestureXCBDispatcher))
#define UNITY_GESTURE_XCB_DISPATCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_XCB_DISPATCHER, UnityGestureXCBDispatcherClass))
#define UNITY_GESTURE_IS_XCB_DISPATCHER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_XCB_DISPATCHER))
#define UNITY_GESTURE_IS_XCB_DISPATCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_XCB_DISPATCHER))
#define UNITY_GESTURE_XCB_DISPATCHER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_XCB_DISPATCHER, UnityGestureXCBDispatcherClass))

typedef struct _UnityGestureXCBDispatcher UnityGestureXCBDispatcher;
typedef struct _UnityGestureXCBDispatcherClass UnityGestureXCBDispatcherClass;
typedef struct _UnityGestureXCBDispatcherPrivate UnityGestureXCBDispatcherPrivate;

#define UNITY_GESTURE_TYPE_TYPE (unity_gesture_type_get_type ())

#define UNITY_GESTURE_TYPE_STATE (unity_gesture_state_get_type ())

#define UNITY_GESTURE_TYPE_EVENT (unity_gesture_event_get_type ())
#define UNITY_GESTURE_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_EVENT, UnityGestureEvent))
#define UNITY_GESTURE_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_EVENT, UnityGestureEventClass))
#define UNITY_GESTURE_IS_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_EVENT))
#define UNITY_GESTURE_IS_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_EVENT))
#define UNITY_GESTURE_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_EVENT, UnityGestureEventClass))

typedef struct _UnityGestureEvent UnityGestureEvent;
typedef struct _UnityGestureEventClass UnityGestureEventClass;
typedef struct _UnityGestureEventPrivate UnityGestureEventPrivate;

#define UNITY_GESTURE_TYPE_PAN_EVENT (unity_gesture_pan_event_get_type ())
#define UNITY_GESTURE_PAN_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_PAN_EVENT, UnityGesturePanEvent))
#define UNITY_GESTURE_PAN_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_PAN_EVENT, UnityGesturePanEventClass))
#define UNITY_GESTURE_IS_PAN_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_PAN_EVENT))
#define UNITY_GESTURE_IS_PAN_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_PAN_EVENT))
#define UNITY_GESTURE_PAN_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_PAN_EVENT, UnityGesturePanEventClass))

typedef struct _UnityGesturePanEvent UnityGesturePanEvent;
typedef struct _UnityGesturePanEventClass UnityGesturePanEventClass;

#define UNITY_GESTURE_TYPE_PINCH_EVENT (unity_gesture_pinch_event_get_type ())
#define UNITY_GESTURE_PINCH_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_PINCH_EVENT, UnityGesturePinchEvent))
#define UNITY_GESTURE_PINCH_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_PINCH_EVENT, UnityGesturePinchEventClass))
#define UNITY_GESTURE_IS_PINCH_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_PINCH_EVENT))
#define UNITY_GESTURE_IS_PINCH_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_PINCH_EVENT))
#define UNITY_GESTURE_PINCH_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_PINCH_EVENT, UnityGesturePinchEventClass))

typedef struct _UnityGesturePinchEvent UnityGesturePinchEvent;
typedef struct _UnityGesturePinchEventClass UnityGesturePinchEventClass;

#define UNITY_GESTURE_TYPE_TAP_EVENT (unity_gesture_tap_event_get_type ())
#define UNITY_GESTURE_TAP_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_GESTURE_TYPE_TAP_EVENT, UnityGestureTapEvent))
#define UNITY_GESTURE_TAP_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_GESTURE_TYPE_TAP_EVENT, UnityGestureTapEventClass))
#define UNITY_GESTURE_IS_TAP_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_GESTURE_TYPE_TAP_EVENT))
#define UNITY_GESTURE_IS_TAP_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_GESTURE_TYPE_TAP_EVENT))
#define UNITY_GESTURE_TAP_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_GESTURE_TYPE_TAP_EVENT, UnityGestureTapEventClass))

typedef struct _UnityGestureTapEvent UnityGestureTapEvent;
typedef struct _UnityGestureTapEventClass UnityGestureTapEventClass;
typedef struct _UnityGesturePanEventPrivate UnityGesturePanEventPrivate;
typedef struct _UnityGesturePinchEventPrivate UnityGesturePinchEventPrivate;
typedef struct _UnityGestureTapEventPrivate UnityGestureTapEventPrivate;

#define UNITY_TYPE_APPLICATION_COMMANDS (unity_application_commands_get_type ())

#define UNITY_TYPE_APPLICATION (unity_application_get_type ())
#define UNITY_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_APPLICATION, UnityApplication))
#define UNITY_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_APPLICATION, UnityApplicationClass))
#define UNITY_IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_APPLICATION))
#define UNITY_IS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_APPLICATION))
#define UNITY_APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_APPLICATION, UnityApplicationClass))

typedef struct _UnityApplication UnityApplication;
typedef struct _UnityApplicationClass UnityApplicationClass;
typedef struct _UnityApplicationPrivate UnityApplicationPrivate;

#define UNITY_PANEL_TYPE_BACKGROUND (unity_panel_background_get_type ())
#define UNITY_PANEL_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_BACKGROUND, UnityPanelBackground))
#define UNITY_PANEL_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_BACKGROUND, UnityPanelBackgroundClass))
#define UNITY_PANEL_IS_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_BACKGROUND))
#define UNITY_PANEL_IS_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_BACKGROUND))
#define UNITY_PANEL_BACKGROUND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_BACKGROUND, UnityPanelBackgroundClass))

typedef struct _UnityPanelBackground UnityPanelBackground;
typedef struct _UnityPanelBackgroundClass UnityPanelBackgroundClass;
typedef struct _UnityPanelBackgroundPrivate UnityPanelBackgroundPrivate;

#define UNITY_PANEL_TYPE_HOME_BUTTON (unity_panel_home_button_get_type ())
#define UNITY_PANEL_HOME_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_HOME_BUTTON, UnityPanelHomeButton))
#define UNITY_PANEL_HOME_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_HOME_BUTTON, UnityPanelHomeButtonClass))
#define UNITY_PANEL_IS_HOME_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_HOME_BUTTON))
#define UNITY_PANEL_IS_HOME_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_HOME_BUTTON))
#define UNITY_PANEL_HOME_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_HOME_BUTTON, UnityPanelHomeButtonClass))

typedef struct _UnityPanelHomeButton UnityPanelHomeButton;
typedef struct _UnityPanelHomeButtonClass UnityPanelHomeButtonClass;
typedef struct _UnityPanelHomeButtonPrivate UnityPanelHomeButtonPrivate;

#define UNITY_PANEL_TYPE_INDICATOR_BACKGROUND (unity_panel_indicator_background_get_type ())
#define UNITY_PANEL_INDICATOR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_INDICATOR_BACKGROUND, UnityPanelIndicatorBackground))
#define UNITY_PANEL_INDICATOR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_INDICATOR_BACKGROUND, UnityPanelIndicatorBackgroundClass))
#define UNITY_PANEL_IS_INDICATOR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_INDICATOR_BACKGROUND))
#define UNITY_PANEL_IS_INDICATOR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_INDICATOR_BACKGROUND))
#define UNITY_PANEL_INDICATOR_BACKGROUND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_INDICATOR_BACKGROUND, UnityPanelIndicatorBackgroundClass))

typedef struct _UnityPanelIndicatorBackground UnityPanelIndicatorBackground;
typedef struct _UnityPanelIndicatorBackgroundClass UnityPanelIndicatorBackgroundClass;
typedef struct _UnityPanelIndicatorBackgroundPrivate UnityPanelIndicatorBackgroundPrivate;

#define UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR (unity_panel_indicators_indicator_bar_get_type ())
#define UNITY_PANEL_INDICATORS_INDICATOR_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR, UnityPanelIndicatorsIndicatorBar))
#define UNITY_PANEL_INDICATORS_INDICATOR_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR, UnityPanelIndicatorsIndicatorBarClass))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR))
#define UNITY_PANEL_INDICATORS_INDICATOR_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_BAR, UnityPanelIndicatorsIndicatorBarClass))

typedef struct _UnityPanelIndicatorsIndicatorBar UnityPanelIndicatorsIndicatorBar;
typedef struct _UnityPanelIndicatorsIndicatorBarClass UnityPanelIndicatorsIndicatorBarClass;
typedef struct _UnityPanelIndicatorsIndicatorBarPrivate UnityPanelIndicatorsIndicatorBarPrivate;

#define UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW (unity_panel_indicators_indicator_object_view_get_type ())
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW, UnityPanelIndicatorsIndicatorObjectView))
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW, UnityPanelIndicatorsIndicatorObjectViewClass))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_OBJECT_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_OBJECT_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW))
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_VIEW, UnityPanelIndicatorsIndicatorObjectViewClass))

typedef struct _UnityPanelIndicatorsIndicatorObjectView UnityPanelIndicatorsIndicatorObjectView;
typedef struct _UnityPanelIndicatorsIndicatorObjectViewClass UnityPanelIndicatorsIndicatorObjectViewClass;

#define UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL (unity_panel_indicators_indicators_model_get_type ())
#define UNITY_PANEL_INDICATORS_INDICATORS_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL, UnityPanelIndicatorsIndicatorsModel))
#define UNITY_PANEL_INDICATORS_INDICATORS_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL, UnityPanelIndicatorsIndicatorsModelClass))
#define UNITY_PANEL_INDICATORS_IS_INDICATORS_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL))
#define UNITY_PANEL_INDICATORS_IS_INDICATORS_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL))
#define UNITY_PANEL_INDICATORS_INDICATORS_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_MODEL, UnityPanelIndicatorsIndicatorsModelClass))

typedef struct _UnityPanelIndicatorsIndicatorsModel UnityPanelIndicatorsIndicatorsModel;
typedef struct _UnityPanelIndicatorsIndicatorsModelClass UnityPanelIndicatorsIndicatorsModelClass;
typedef struct _UnityPanelIndicatorsIndicatorsModelPrivate UnityPanelIndicatorsIndicatorsModelPrivate;

#define UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL (unity_panel_indicators_indicators_file_model_get_type ())
#define UNITY_PANEL_INDICATORS_INDICATORS_FILE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL, UnityPanelIndicatorsIndicatorsFileModel))
#define UNITY_PANEL_INDICATORS_INDICATORS_FILE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL, UnityPanelIndicatorsIndicatorsFileModelClass))
#define UNITY_PANEL_INDICATORS_IS_INDICATORS_FILE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL))
#define UNITY_PANEL_INDICATORS_IS_INDICATORS_FILE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL))
#define UNITY_PANEL_INDICATORS_INDICATORS_FILE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATORS_FILE_MODEL, UnityPanelIndicatorsIndicatorsFileModelClass))

typedef struct _UnityPanelIndicatorsIndicatorsFileModel UnityPanelIndicatorsIndicatorsFileModel;
typedef struct _UnityPanelIndicatorsIndicatorsFileModelClass UnityPanelIndicatorsIndicatorsFileModelClass;
typedef struct _UnityPanelIndicatorsIndicatorsFileModelPrivate UnityPanelIndicatorsIndicatorsFileModelPrivate;

#define UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW (unity_panel_indicators_indicator_object_entry_view_get_type ())
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_ENTRY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW, UnityPanelIndicatorsIndicatorObjectEntryView))
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_ENTRY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW, UnityPanelIndicatorsIndicatorObjectEntryViewClass))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_OBJECT_ENTRY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW))
#define UNITY_PANEL_INDICATORS_IS_INDICATOR_OBJECT_ENTRY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW))
#define UNITY_PANEL_INDICATORS_INDICATOR_OBJECT_ENTRY_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_INDICATOR_OBJECT_ENTRY_VIEW, UnityPanelIndicatorsIndicatorObjectEntryViewClass))

typedef struct _UnityPanelIndicatorsIndicatorObjectEntryView UnityPanelIndicatorsIndicatorObjectEntryView;
typedef struct _UnityPanelIndicatorsIndicatorObjectEntryViewClass UnityPanelIndicatorsIndicatorObjectEntryViewClass;
typedef struct _UnityPanelIndicatorsIndicatorObjectEntryViewPrivate UnityPanelIndicatorsIndicatorObjectEntryViewPrivate;
typedef struct _UnityPanelIndicatorsIndicatorObjectViewPrivate UnityPanelIndicatorsIndicatorObjectViewPrivate;

#define TYPE_MENU_MANAGER (menu_manager_get_type ())
#define MENU_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MENU_MANAGER, MenuManager))
#define MENU_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_MENU_MANAGER, MenuManagerClass))
#define IS_MENU_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MENU_MANAGER))
#define IS_MENU_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_MENU_MANAGER))
#define MENU_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MENU_MANAGER, MenuManagerClass))

typedef struct _MenuManager MenuManager;
typedef struct _MenuManagerClass MenuManagerClass;
typedef struct _MenuManagerPrivate MenuManagerPrivate;

#define UNITY_PANEL_INDICATORS_TYPE_MENU_BAR (unity_panel_indicators_menu_bar_get_type ())
#define UNITY_PANEL_INDICATORS_MENU_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_INDICATORS_TYPE_MENU_BAR, UnityPanelIndicatorsMenuBar))
#define UNITY_PANEL_INDICATORS_MENU_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_INDICATORS_TYPE_MENU_BAR, UnityPanelIndicatorsMenuBarClass))
#define UNITY_PANEL_INDICATORS_IS_MENU_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_INDICATORS_TYPE_MENU_BAR))
#define UNITY_PANEL_INDICATORS_IS_MENU_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_INDICATORS_TYPE_MENU_BAR))
#define UNITY_PANEL_INDICATORS_MENU_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_INDICATORS_TYPE_MENU_BAR, UnityPanelIndicatorsMenuBarClass))

typedef struct _UnityPanelIndicatorsMenuBar UnityPanelIndicatorsMenuBar;
typedef struct _UnityPanelIndicatorsMenuBarClass UnityPanelIndicatorsMenuBarClass;
typedef struct _UnityPanelIndicatorsMenuBarPrivate UnityPanelIndicatorsMenuBarPrivate;

#define UNITY_PANEL_TYPE_SYSTEM_TRAY (unity_panel_system_tray_get_type ())
#define UNITY_PANEL_SYSTEM_TRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_SYSTEM_TRAY, UnityPanelSystemTray))
#define UNITY_PANEL_SYSTEM_TRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_SYSTEM_TRAY, UnityPanelSystemTrayClass))
#define UNITY_PANEL_IS_SYSTEM_TRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_SYSTEM_TRAY))
#define UNITY_PANEL_IS_SYSTEM_TRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_SYSTEM_TRAY))
#define UNITY_PANEL_SYSTEM_TRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_SYSTEM_TRAY, UnityPanelSystemTrayClass))

typedef struct _UnityPanelSystemTray UnityPanelSystemTray;
typedef struct _UnityPanelSystemTrayClass UnityPanelSystemTrayClass;
typedef struct _UnityPanelSystemTrayPrivate UnityPanelSystemTrayPrivate;

#define UNITY_PANEL_TYPE_VIEW (unity_panel_view_get_type ())
#define UNITY_PANEL_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_VIEW, UnityPanelView))
#define UNITY_PANEL_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_VIEW, UnityPanelViewClass))
#define UNITY_PANEL_IS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_VIEW))
#define UNITY_PANEL_IS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_VIEW))
#define UNITY_PANEL_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_VIEW, UnityPanelViewClass))

typedef struct _UnityPanelView UnityPanelView;
typedef struct _UnityPanelViewClass UnityPanelViewClass;
typedef struct _UnityPanelViewPrivate UnityPanelViewPrivate;

#define UNITY_PANEL_TYPE_WINDOW_BUTTONS (unity_panel_window_buttons_get_type ())
#define UNITY_PANEL_WINDOW_BUTTONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTONS, UnityPanelWindowButtons))
#define UNITY_PANEL_WINDOW_BUTTONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_WINDOW_BUTTONS, UnityPanelWindowButtonsClass))
#define UNITY_PANEL_IS_WINDOW_BUTTONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTONS))
#define UNITY_PANEL_IS_WINDOW_BUTTONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_WINDOW_BUTTONS))
#define UNITY_PANEL_WINDOW_BUTTONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTONS, UnityPanelWindowButtonsClass))

typedef struct _UnityPanelWindowButtons UnityPanelWindowButtons;
typedef struct _UnityPanelWindowButtonsClass UnityPanelWindowButtonsClass;
typedef struct _UnityPanelWindowButtonsPrivate UnityPanelWindowButtonsPrivate;

#define UNITY_PANEL_TYPE_WINDOW_BUTTON (unity_panel_window_button_get_type ())
#define UNITY_PANEL_WINDOW_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTON, UnityPanelWindowButton))
#define UNITY_PANEL_WINDOW_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PANEL_TYPE_WINDOW_BUTTON, UnityPanelWindowButtonClass))
#define UNITY_PANEL_IS_WINDOW_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTON))
#define UNITY_PANEL_IS_WINDOW_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PANEL_TYPE_WINDOW_BUTTON))
#define UNITY_PANEL_WINDOW_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PANEL_TYPE_WINDOW_BUTTON, UnityPanelWindowButtonClass))

typedef struct _UnityPanelWindowButton UnityPanelWindowButton;
typedef struct _UnityPanelWindowButtonClass UnityPanelWindowButtonClass;
typedef struct _UnityPanelWindowButtonPrivate UnityPanelWindowButtonPrivate;

#define UNITY_PLACES_TYPE_BUTTON (unity_places_button_get_type ())
#define UNITY_PLACES_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_BUTTON, UnityPlacesButton))
#define UNITY_PLACES_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_BUTTON, UnityPlacesButtonClass))
#define UNITY_PLACES_IS_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_BUTTON))
#define UNITY_PLACES_IS_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_BUTTON))
#define UNITY_PLACES_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_BUTTON, UnityPlacesButtonClass))

typedef struct _UnityPlacesButton UnityPlacesButton;
typedef struct _UnityPlacesButtonClass UnityPlacesButtonClass;
typedef struct _UnityPlacesButtonPrivate UnityPlacesButtonPrivate;

#define UNITY_PLACES_BUTTON_TYPE_NORMAL_STATE (unity_places_button_normal_state_get_type ())

#define UNITY_PLACES_BUTTON_TYPE_PRELIGHT_STATE (unity_places_button_prelight_state_get_type ())

#define UNITY_PLACES_TYPE_CONTROLLER (unity_places_controller_get_type ())
#define UNITY_PLACES_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_CONTROLLER, UnityPlacesController))
#define UNITY_PLACES_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_CONTROLLER, UnityPlacesControllerClass))
#define UNITY_PLACES_IS_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_CONTROLLER))
#define UNITY_PLACES_IS_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_CONTROLLER))
#define UNITY_PLACES_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_CONTROLLER, UnityPlacesControllerClass))

typedef struct _UnityPlacesController UnityPlacesController;
typedef struct _UnityPlacesControllerClass UnityPlacesControllerClass;
typedef struct _UnityPlacesControllerPrivate UnityPlacesControllerPrivate;

#define UNITY_PLACES_TYPE_VIEW (unity_places_view_get_type ())
#define UNITY_PLACES_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_VIEW, UnityPlacesView))
#define UNITY_PLACES_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_VIEW, UnityPlacesViewClass))
#define UNITY_PLACES_IS_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_VIEW))
#define UNITY_PLACES_IS_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_VIEW))
#define UNITY_PLACES_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_VIEW, UnityPlacesViewClass))

typedef struct _UnityPlacesView UnityPlacesView;
typedef struct _UnityPlacesViewClass UnityPlacesViewClass;

#define UNITY_PLACES_TYPE_PLACE_MODEL (unity_places_place_model_get_type ())
#define UNITY_PLACES_PLACE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_MODEL, UnityPlacesPlaceModel))
#define UNITY_PLACES_PLACE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_MODEL, UnityPlacesPlaceModelClass))
#define UNITY_PLACES_IS_PLACE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_MODEL))
#define UNITY_PLACES_IS_PLACE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_MODEL))
#define UNITY_PLACES_PLACE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_MODEL, UnityPlacesPlaceModelClass))

typedef struct _UnityPlacesPlaceModel UnityPlacesPlaceModel;
typedef struct _UnityPlacesPlaceModelClass UnityPlacesPlaceModelClass;

#define UNITY_PLACES_TYPE_VOLUME_CONTROLLER (unity_places_volume_controller_get_type ())
#define UNITY_PLACES_VOLUME_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_VOLUME_CONTROLLER, UnityPlacesVolumeController))
#define UNITY_PLACES_VOLUME_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_VOLUME_CONTROLLER, UnityPlacesVolumeControllerClass))
#define UNITY_PLACES_IS_VOLUME_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_VOLUME_CONTROLLER))
#define UNITY_PLACES_IS_VOLUME_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_VOLUME_CONTROLLER))
#define UNITY_PLACES_VOLUME_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_VOLUME_CONTROLLER, UnityPlacesVolumeControllerClass))

typedef struct _UnityPlacesVolumeController UnityPlacesVolumeController;
typedef struct _UnityPlacesVolumeControllerClass UnityPlacesVolumeControllerClass;

#define UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP (unity_places_default_renderer_group_get_type ())
#define UNITY_PLACES_DEFAULT_RENDERER_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP, UnityPlacesDefaultRendererGroup))
#define UNITY_PLACES_DEFAULT_RENDERER_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP, UnityPlacesDefaultRendererGroupClass))
#define UNITY_PLACES_IS_DEFAULT_RENDERER_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP))
#define UNITY_PLACES_IS_DEFAULT_RENDERER_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP))
#define UNITY_PLACES_DEFAULT_RENDERER_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER_GROUP, UnityPlacesDefaultRendererGroupClass))

typedef struct _UnityPlacesDefaultRendererGroup UnityPlacesDefaultRendererGroup;
typedef struct _UnityPlacesDefaultRendererGroupClass UnityPlacesDefaultRendererGroupClass;
typedef struct _UnityPlacesDefaultRendererGroupPrivate UnityPlacesDefaultRendererGroupPrivate;

#define UNITY_PLACES_TYPE_EXPANDER (unity_places_expander_get_type ())
#define UNITY_PLACES_EXPANDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_EXPANDER, UnityPlacesExpander))
#define UNITY_PLACES_EXPANDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_EXPANDER, UnityPlacesExpanderClass))
#define UNITY_PLACES_IS_EXPANDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_EXPANDER))
#define UNITY_PLACES_IS_EXPANDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_EXPANDER))
#define UNITY_PLACES_EXPANDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_EXPANDER, UnityPlacesExpanderClass))

typedef struct _UnityPlacesExpander UnityPlacesExpander;
typedef struct _UnityPlacesExpanderClass UnityPlacesExpanderClass;
typedef struct _UnityPlacesExpanderPrivate UnityPlacesExpanderPrivate;

#define UNITY_PLACES_EXPANDER_TYPE_STATE (unity_places_expander_state_get_type ())

#define UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON (unity_places_more_results_button_get_type ())
#define UNITY_PLACES_MORE_RESULTS_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON, UnityPlacesMoreResultsButton))
#define UNITY_PLACES_MORE_RESULTS_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON, UnityPlacesMoreResultsButtonClass))
#define UNITY_PLACES_IS_MORE_RESULTS_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON))
#define UNITY_PLACES_IS_MORE_RESULTS_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON))
#define UNITY_PLACES_MORE_RESULTS_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_MORE_RESULTS_BUTTON, UnityPlacesMoreResultsButtonClass))

typedef struct _UnityPlacesMoreResultsButton UnityPlacesMoreResultsButton;
typedef struct _UnityPlacesMoreResultsButtonClass UnityPlacesMoreResultsButtonClass;
typedef struct _UnityPlacesMoreResultsButtonPrivate UnityPlacesMoreResultsButtonPrivate;

#define UNITY_PLACES_TYPE_TILE (unity_places_tile_get_type ())
#define UNITY_PLACES_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_TILE, UnityPlacesTile))
#define UNITY_PLACES_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_TILE, UnityPlacesTileClass))
#define UNITY_PLACES_IS_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_TILE))
#define UNITY_PLACES_IS_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_TILE))
#define UNITY_PLACES_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_TILE, UnityPlacesTileClass))

typedef struct _UnityPlacesTile UnityPlacesTile;
typedef struct _UnityPlacesTileClass UnityPlacesTileClass;
typedef struct _UnityPlacesTilePrivate UnityPlacesTilePrivate;

#define UNITY_PLACES_TYPE_FILE_INFO_TILE (unity_places_file_info_tile_get_type ())
#define UNITY_PLACES_FILE_INFO_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_FILE_INFO_TILE, UnityPlacesFileInfoTile))
#define UNITY_PLACES_FILE_INFO_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_FILE_INFO_TILE, UnityPlacesFileInfoTileClass))
#define UNITY_PLACES_IS_FILE_INFO_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_FILE_INFO_TILE))
#define UNITY_PLACES_IS_FILE_INFO_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_FILE_INFO_TILE))
#define UNITY_PLACES_FILE_INFO_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_FILE_INFO_TILE, UnityPlacesFileInfoTileClass))

typedef struct _UnityPlacesFileInfoTile UnityPlacesFileInfoTile;
typedef struct _UnityPlacesFileInfoTileClass UnityPlacesFileInfoTileClass;
typedef struct _UnityPlacesFileInfoTilePrivate UnityPlacesFileInfoTilePrivate;

#define UNITY_PLACES_TYPE_SHOWCASE_TILE (unity_places_showcase_tile_get_type ())
#define UNITY_PLACES_SHOWCASE_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_SHOWCASE_TILE, UnityPlacesShowcaseTile))
#define UNITY_PLACES_SHOWCASE_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_SHOWCASE_TILE, UnityPlacesShowcaseTileClass))
#define UNITY_PLACES_IS_SHOWCASE_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_SHOWCASE_TILE))
#define UNITY_PLACES_IS_SHOWCASE_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_SHOWCASE_TILE))
#define UNITY_PLACES_SHOWCASE_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_SHOWCASE_TILE, UnityPlacesShowcaseTileClass))

typedef struct _UnityPlacesShowcaseTile UnityPlacesShowcaseTile;
typedef struct _UnityPlacesShowcaseTileClass UnityPlacesShowcaseTileClass;
typedef struct _UnityPlacesShowcaseTilePrivate UnityPlacesShowcaseTilePrivate;

#define UNITY_PLACES_TYPE_DEFAULT_TILE (unity_places_default_tile_get_type ())
#define UNITY_PLACES_DEFAULT_TILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_DEFAULT_TILE, UnityPlacesDefaultTile))
#define UNITY_PLACES_DEFAULT_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_DEFAULT_TILE, UnityPlacesDefaultTileClass))
#define UNITY_PLACES_IS_DEFAULT_TILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_DEFAULT_TILE))
#define UNITY_PLACES_IS_DEFAULT_TILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_DEFAULT_TILE))
#define UNITY_PLACES_DEFAULT_TILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_DEFAULT_TILE, UnityPlacesDefaultTileClass))

typedef struct _UnityPlacesDefaultTile UnityPlacesDefaultTile;
typedef struct _UnityPlacesDefaultTileClass UnityPlacesDefaultTileClass;
typedef struct _UnityPlacesDefaultTilePrivate UnityPlacesDefaultTilePrivate;

#define UNITY_PLACES_TYPE_DEFAULT_RENDERER (unity_places_default_renderer_get_type ())
#define UNITY_PLACES_DEFAULT_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER, UnityPlacesDefaultRenderer))
#define UNITY_PLACES_DEFAULT_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_DEFAULT_RENDERER, UnityPlacesDefaultRendererClass))
#define UNITY_PLACES_IS_DEFAULT_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER))
#define UNITY_PLACES_IS_DEFAULT_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_DEFAULT_RENDERER))
#define UNITY_PLACES_DEFAULT_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_DEFAULT_RENDERER, UnityPlacesDefaultRendererClass))

typedef struct _UnityPlacesDefaultRenderer UnityPlacesDefaultRenderer;
typedef struct _UnityPlacesDefaultRendererClass UnityPlacesDefaultRendererClass;
typedef struct _UnityPlacesDefaultRendererPrivate UnityPlacesDefaultRendererPrivate;

#define UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP (unity_places_empty_search_group_get_type ())
#define UNITY_PLACES_EMPTY_SEARCH_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP, UnityPlacesEmptySearchGroup))
#define UNITY_PLACES_EMPTY_SEARCH_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP, UnityPlacesEmptySearchGroupClass))
#define UNITY_PLACES_IS_EMPTY_SEARCH_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP))
#define UNITY_PLACES_IS_EMPTY_SEARCH_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP))
#define UNITY_PLACES_EMPTY_SEARCH_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_EMPTY_SEARCH_GROUP, UnityPlacesEmptySearchGroupClass))

typedef struct _UnityPlacesEmptySearchGroup UnityPlacesEmptySearchGroup;
typedef struct _UnityPlacesEmptySearchGroupClass UnityPlacesEmptySearchGroupClass;
typedef struct _UnityPlacesEmptySearchGroupPrivate UnityPlacesEmptySearchGroupPrivate;

#define UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP (unity_places_empty_section_group_get_type ())
#define UNITY_PLACES_EMPTY_SECTION_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP, UnityPlacesEmptySectionGroup))
#define UNITY_PLACES_EMPTY_SECTION_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP, UnityPlacesEmptySectionGroupClass))
#define UNITY_PLACES_IS_EMPTY_SECTION_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP))
#define UNITY_PLACES_IS_EMPTY_SECTION_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP))
#define UNITY_PLACES_EMPTY_SECTION_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_EMPTY_SECTION_GROUP, UnityPlacesEmptySectionGroupClass))

typedef struct _UnityPlacesEmptySectionGroup UnityPlacesEmptySectionGroup;
typedef struct _UnityPlacesEmptySectionGroupClass UnityPlacesEmptySectionGroupClass;
typedef struct _UnityPlacesEmptySectionGroupPrivate UnityPlacesEmptySectionGroupPrivate;

#define UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER (unity_places_folder_browser_renderer_get_type ())
#define UNITY_PLACES_FOLDER_BROWSER_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER, UnityPlacesFolderBrowserRenderer))
#define UNITY_PLACES_FOLDER_BROWSER_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER, UnityPlacesFolderBrowserRendererClass))
#define UNITY_PLACES_IS_FOLDER_BROWSER_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER))
#define UNITY_PLACES_IS_FOLDER_BROWSER_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER))
#define UNITY_PLACES_FOLDER_BROWSER_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_FOLDER_BROWSER_RENDERER, UnityPlacesFolderBrowserRendererClass))

typedef struct _UnityPlacesFolderBrowserRenderer UnityPlacesFolderBrowserRenderer;
typedef struct _UnityPlacesFolderBrowserRendererClass UnityPlacesFolderBrowserRendererClass;
typedef struct _UnityPlacesFolderBrowserRendererPrivate UnityPlacesFolderBrowserRendererPrivate;

#define UNITY_PLACES_TYPE_PLACE_BAR (unity_places_place_bar_get_type ())
#define UNITY_PLACES_PLACE_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_BAR, UnityPlacesPlaceBar))
#define UNITY_PLACES_PLACE_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_BAR, UnityPlacesPlaceBarClass))
#define UNITY_PLACES_IS_PLACE_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_BAR))
#define UNITY_PLACES_IS_PLACE_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_BAR))
#define UNITY_PLACES_PLACE_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_BAR, UnityPlacesPlaceBarClass))

typedef struct _UnityPlacesPlaceBar UnityPlacesPlaceBar;
typedef struct _UnityPlacesPlaceBarClass UnityPlacesPlaceBarClass;
typedef struct _UnityPlacesPlaceBarPrivate UnityPlacesPlaceBarPrivate;

#define UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND (unity_places_place_bar_background_get_type ())
#define UNITY_PLACES_PLACE_BAR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND, UnityPlacesPlaceBarBackground))
#define UNITY_PLACES_PLACE_BAR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND, UnityPlacesPlaceBarBackgroundClass))
#define UNITY_PLACES_IS_PLACE_BAR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND))
#define UNITY_PLACES_IS_PLACE_BAR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND))
#define UNITY_PLACES_PLACE_BAR_BACKGROUND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_BAR_BACKGROUND, UnityPlacesPlaceBarBackgroundClass))

typedef struct _UnityPlacesPlaceBarBackground UnityPlacesPlaceBarBackground;
typedef struct _UnityPlacesPlaceBarBackgroundClass UnityPlacesPlaceBarBackgroundClass;
typedef struct _UnityPlacesPlaceBarBackgroundPrivate UnityPlacesPlaceBarBackgroundPrivate;

#define UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER (unity_launcher_scroller_child_controller_get_type ())
#define UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER, UnityLauncherScrollerChildController))
#define UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER, UnityLauncherScrollerChildControllerClass))
#define UNITY_LAUNCHER_IS_SCROLLER_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER))
#define UNITY_LAUNCHER_IS_SCROLLER_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER))
#define UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER, UnityLauncherScrollerChildControllerClass))

typedef struct _UnityLauncherScrollerChildController UnityLauncherScrollerChildController;
typedef struct _UnityLauncherScrollerChildControllerClass UnityLauncherScrollerChildControllerClass;
typedef struct _UnityLauncherScrollerChildControllerPrivate UnityLauncherScrollerChildControllerPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER (unity_launcher_quicklist_controller_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER, UnityLauncherQuicklistController))
#define UNITY_LAUNCHER_QUICKLIST_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER, UnityLauncherQuicklistControllerClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER))
#define UNITY_LAUNCHER_IS_QUICKLIST_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER))
#define UNITY_LAUNCHER_QUICKLIST_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER, UnityLauncherQuicklistControllerClass))

typedef struct _UnityLauncherQuicklistController UnityLauncherQuicklistController;
typedef struct _UnityLauncherQuicklistControllerClass UnityLauncherQuicklistControllerClass;

#define UNITY_LAUNCHER_TYPE_SCROLLER_CHILD_CONTROLLER_MENU_STATE (unity_launcher_scroller_child_controller_menu_state_get_type ())

#define UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER (unity_places_place_entry_scroller_child_controller_get_type ())
#define UNITY_PLACES_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER, UnityPlacesPlaceEntryScrollerChildController))
#define UNITY_PLACES_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER, UnityPlacesPlaceEntryScrollerChildControllerClass))
#define UNITY_PLACES_IS_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER))
#define UNITY_PLACES_IS_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER))
#define UNITY_PLACES_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_SCROLLER_CHILD_CONTROLLER, UnityPlacesPlaceEntryScrollerChildControllerClass))

typedef struct _UnityPlacesPlaceEntryScrollerChildController UnityPlacesPlaceEntryScrollerChildController;
typedef struct _UnityPlacesPlaceEntryScrollerChildControllerClass UnityPlacesPlaceEntryScrollerChildControllerClass;
typedef struct _UnityPlacesPlaceEntryScrollerChildControllerPrivate UnityPlacesPlaceEntryScrollerChildControllerPrivate;

#define UNITY_PLACES_TYPE_PLACE_ENTRY (unity_places_place_entry_get_type ())
#define UNITY_PLACES_PLACE_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY, UnityPlacesPlaceEntry))
#define UNITY_PLACES_IS_PLACE_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY))
#define UNITY_PLACES_PLACE_ENTRY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY, UnityPlacesPlaceEntryIface))

typedef struct _UnityPlacesPlaceEntry UnityPlacesPlaceEntry;
typedef struct _UnityPlacesPlaceEntryIface UnityPlacesPlaceEntryIface;

#define UNITY_PLACES_TYPE_PLACE (unity_places_place_get_type ())
#define UNITY_PLACES_PLACE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE, UnityPlacesPlace))
#define UNITY_PLACES_PLACE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE, UnityPlacesPlaceClass))
#define UNITY_PLACES_IS_PLACE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE))
#define UNITY_PLACES_IS_PLACE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE))
#define UNITY_PLACES_PLACE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE, UnityPlacesPlaceClass))

typedef struct _UnityPlacesPlace UnityPlacesPlace;
typedef struct _UnityPlacesPlaceClass UnityPlacesPlaceClass;

#define UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW (unity_places_place_entry_view_get_type ())
#define UNITY_PLACES_PLACE_ENTRY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW, UnityPlacesPlaceEntryView))
#define UNITY_PLACES_PLACE_ENTRY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW, UnityPlacesPlaceEntryViewClass))
#define UNITY_PLACES_IS_PLACE_ENTRY_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW))
#define UNITY_PLACES_IS_PLACE_ENTRY_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW))
#define UNITY_PLACES_PLACE_ENTRY_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_VIEW, UnityPlacesPlaceEntryViewClass))

typedef struct _UnityPlacesPlaceEntryView UnityPlacesPlaceEntryView;
typedef struct _UnityPlacesPlaceEntryViewClass UnityPlacesPlaceEntryViewClass;
typedef struct _UnityPlacesPlaceEntryViewPrivate UnityPlacesPlaceEntryViewPrivate;

#define UNITY_PLACES_TYPE_PLACE_ENTRY_REMOTE (unity_places_place_entry_remote_get_type ())
#define UNITY_PLACES_PLACE_ENTRY_REMOTE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_REMOTE, UnityPlacesPlaceEntryRemote))
#define UNITY_PLACES_IS_PLACE_ENTRY_REMOTE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_REMOTE))
#define UNITY_PLACES_PLACE_ENTRY_REMOTE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_REMOTE, UnityPlacesPlaceEntryRemoteIface))

typedef struct _UnityPlacesPlaceEntryRemote UnityPlacesPlaceEntryRemote;
typedef struct _UnityPlacesPlaceEntryRemoteIface UnityPlacesPlaceEntryRemoteIface;

#define UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS (unity_places_place_entry_dbus_get_type ())
#define UNITY_PLACES_PLACE_ENTRY_DBUS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS, UnityPlacesPlaceEntryDbus))
#define UNITY_PLACES_PLACE_ENTRY_DBUS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS, UnityPlacesPlaceEntryDbusClass))
#define UNITY_PLACES_IS_PLACE_ENTRY_DBUS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS))
#define UNITY_PLACES_IS_PLACE_ENTRY_DBUS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS))
#define UNITY_PLACES_PLACE_ENTRY_DBUS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_ENTRY_DBUS, UnityPlacesPlaceEntryDbusClass))

typedef struct _UnityPlacesPlaceEntryDbus UnityPlacesPlaceEntryDbus;
typedef struct _UnityPlacesPlaceEntryDbusClass UnityPlacesPlaceEntryDbusClass;
typedef struct _UnityPlacesPlaceEntryDbusPrivate UnityPlacesPlaceEntryDbusPrivate;

#define UNITY_PLACES_PLACE_ENTRY_DBUS_TYPE_RENDERER_INFO (unity_places_place_entry_dbus_renderer_info_get_type ())
typedef struct _UnityPlacesPlaceEntryDbusRendererInfo UnityPlacesPlaceEntryDbusRendererInfo;

#define UNITY_PLACES_PLACE_ENTRY_DBUS_TYPE_PLACE_ENTRY_INFO (unity_places_place_entry_dbus_place_entry_info_get_type ())
typedef struct _UnityPlacesPlaceEntryDbusPlaceEntryInfo UnityPlacesPlaceEntryDbusPlaceEntryInfo;

#define UNITY_PLACES_TYPE_PLACE_HOME_ENTRY (unity_places_place_home_entry_get_type ())
#define UNITY_PLACES_PLACE_HOME_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_HOME_ENTRY, UnityPlacesPlaceHomeEntry))
#define UNITY_PLACES_PLACE_HOME_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_HOME_ENTRY, UnityPlacesPlaceHomeEntryClass))
#define UNITY_PLACES_IS_PLACE_HOME_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_HOME_ENTRY))
#define UNITY_PLACES_IS_PLACE_HOME_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_HOME_ENTRY))
#define UNITY_PLACES_PLACE_HOME_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_HOME_ENTRY, UnityPlacesPlaceHomeEntryClass))

typedef struct _UnityPlacesPlaceHomeEntry UnityPlacesPlaceHomeEntry;
typedef struct _UnityPlacesPlaceHomeEntryClass UnityPlacesPlaceHomeEntryClass;
typedef struct _UnityPlacesPlaceHomeEntryPrivate UnityPlacesPlaceHomeEntryPrivate;

#define UNITY_PLACES_TYPE_HOME_RENDERER (unity_places_home_renderer_get_type ())
#define UNITY_PLACES_HOME_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_HOME_RENDERER, UnityPlacesHomeRenderer))
#define UNITY_PLACES_HOME_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_HOME_RENDERER, UnityPlacesHomeRendererClass))
#define UNITY_PLACES_IS_HOME_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_HOME_RENDERER))
#define UNITY_PLACES_IS_HOME_RENDERER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_HOME_RENDERER))
#define UNITY_PLACES_HOME_RENDERER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_HOME_RENDERER, UnityPlacesHomeRendererClass))

typedef struct _UnityPlacesHomeRenderer UnityPlacesHomeRenderer;
typedef struct _UnityPlacesHomeRendererClass UnityPlacesHomeRendererClass;
typedef struct _UnityPlacesHomeRendererPrivate UnityPlacesHomeRendererPrivate;

#define UNITY_PLACES_TYPE_HOME_BUTTON (unity_places_home_button_get_type ())
#define UNITY_PLACES_HOME_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_HOME_BUTTON, UnityPlacesHomeButton))
#define UNITY_PLACES_HOME_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_HOME_BUTTON, UnityPlacesHomeButtonClass))
#define UNITY_PLACES_IS_HOME_BUTTON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_HOME_BUTTON))
#define UNITY_PLACES_IS_HOME_BUTTON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_HOME_BUTTON))
#define UNITY_PLACES_HOME_BUTTON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_HOME_BUTTON, UnityPlacesHomeButtonClass))

typedef struct _UnityPlacesHomeButton UnityPlacesHomeButton;
typedef struct _UnityPlacesHomeButtonClass UnityPlacesHomeButtonClass;
typedef struct _UnityPlacesHomeButtonPrivate UnityPlacesHomeButtonPrivate;
typedef struct _UnityPlacesPlaceModelPrivate UnityPlacesPlaceModelPrivate;

#define UNITY_PLACES_TYPE_PLACE_FILE_MODEL (unity_places_place_file_model_get_type ())
#define UNITY_PLACES_PLACE_FILE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_FILE_MODEL, UnityPlacesPlaceFileModel))
#define UNITY_PLACES_PLACE_FILE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_FILE_MODEL, UnityPlacesPlaceFileModelClass))
#define UNITY_PLACES_IS_PLACE_FILE_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_FILE_MODEL))
#define UNITY_PLACES_IS_PLACE_FILE_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_FILE_MODEL))
#define UNITY_PLACES_PLACE_FILE_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_FILE_MODEL, UnityPlacesPlaceFileModelClass))

typedef struct _UnityPlacesPlaceFileModel UnityPlacesPlaceFileModel;
typedef struct _UnityPlacesPlaceFileModelClass UnityPlacesPlaceFileModelClass;
typedef struct _UnityPlacesPlaceFileModelPrivate UnityPlacesPlaceFileModelPrivate;

#define UNITY_PLACES_TYPE_PLACE_VIEW (unity_places_place_view_get_type ())
#define UNITY_PLACES_PLACE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_VIEW, UnityPlacesPlaceView))
#define UNITY_PLACES_PLACE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_VIEW, UnityPlacesPlaceViewClass))
#define UNITY_PLACES_IS_PLACE_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_VIEW))
#define UNITY_PLACES_IS_PLACE_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_VIEW))
#define UNITY_PLACES_PLACE_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_VIEW, UnityPlacesPlaceViewClass))

typedef struct _UnityPlacesPlaceView UnityPlacesPlaceView;
typedef struct _UnityPlacesPlaceViewClass UnityPlacesPlaceViewClass;
typedef struct _UnityPlacesPlaceViewPrivate UnityPlacesPlaceViewPrivate;
typedef struct _UnityPlacesPlacePrivate UnityPlacesPlacePrivate;

#define UNITY_PLACES_TYPE_ACTIVATION_STATUS (unity_places_activation_status_get_type ())

#define UNITY_PLACES_TYPE_PLACE_SEARCH_BAR (unity_places_place_search_bar_get_type ())
#define UNITY_PLACES_PLACE_SEARCH_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR, UnityPlacesPlaceSearchBar))
#define UNITY_PLACES_PLACE_SEARCH_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR, UnityPlacesPlaceSearchBarClass))
#define UNITY_PLACES_IS_PLACE_SEARCH_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR))
#define UNITY_PLACES_IS_PLACE_SEARCH_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR))
#define UNITY_PLACES_PLACE_SEARCH_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR, UnityPlacesPlaceSearchBarClass))

typedef struct _UnityPlacesPlaceSearchBar UnityPlacesPlaceSearchBar;
typedef struct _UnityPlacesPlaceSearchBarClass UnityPlacesPlaceSearchBarClass;
typedef struct _UnityPlacesPlaceSearchBarPrivate UnityPlacesPlaceSearchBarPrivate;

#define UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND (unity_places_place_search_bar_background_get_type ())
#define UNITY_PLACES_PLACE_SEARCH_BAR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND, UnityPlacesPlaceSearchBarBackground))
#define UNITY_PLACES_PLACE_SEARCH_BAR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND, UnityPlacesPlaceSearchBarBackgroundClass))
#define UNITY_PLACES_IS_PLACE_SEARCH_BAR_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND))
#define UNITY_PLACES_IS_PLACE_SEARCH_BAR_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND))
#define UNITY_PLACES_PLACE_SEARCH_BAR_BACKGROUND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_BAR_BACKGROUND, UnityPlacesPlaceSearchBarBackgroundClass))

typedef struct _UnityPlacesPlaceSearchBarBackground UnityPlacesPlaceSearchBarBackground;
typedef struct _UnityPlacesPlaceSearchBarBackgroundClass UnityPlacesPlaceSearchBarBackgroundClass;
typedef struct _UnityPlacesPlaceSearchBarBackgroundPrivate UnityPlacesPlaceSearchBarBackgroundPrivate;

#define UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION (unity_places_place_search_navigation_get_type ())
#define UNITY_PLACES_PLACE_SEARCH_NAVIGATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION, UnityPlacesPlaceSearchNavigation))
#define UNITY_PLACES_PLACE_SEARCH_NAVIGATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION, UnityPlacesPlaceSearchNavigationClass))
#define UNITY_PLACES_IS_PLACE_SEARCH_NAVIGATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION))
#define UNITY_PLACES_IS_PLACE_SEARCH_NAVIGATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION))
#define UNITY_PLACES_PLACE_SEARCH_NAVIGATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_NAVIGATION, UnityPlacesPlaceSearchNavigationClass))

typedef struct _UnityPlacesPlaceSearchNavigation UnityPlacesPlaceSearchNavigation;
typedef struct _UnityPlacesPlaceSearchNavigationClass UnityPlacesPlaceSearchNavigationClass;

#define UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY (unity_places_place_search_entry_get_type ())
#define UNITY_PLACES_PLACE_SEARCH_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY, UnityPlacesPlaceSearchEntry))
#define UNITY_PLACES_PLACE_SEARCH_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY, UnityPlacesPlaceSearchEntryClass))
#define UNITY_PLACES_IS_PLACE_SEARCH_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY))
#define UNITY_PLACES_IS_PLACE_SEARCH_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY))
#define UNITY_PLACES_PLACE_SEARCH_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_ENTRY, UnityPlacesPlaceSearchEntryClass))

typedef struct _UnityPlacesPlaceSearchEntry UnityPlacesPlaceSearchEntry;
typedef struct _UnityPlacesPlaceSearchEntryClass UnityPlacesPlaceSearchEntryClass;
typedef struct _UnityPlacesPlaceSearchEntryPrivate UnityPlacesPlaceSearchEntryPrivate;

#define UNITY_PLACES_TYPE_PLACE_BROWSER_REMOTE (unity_places_place_browser_remote_get_type ())
#define UNITY_PLACES_PLACE_BROWSER_REMOTE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_BROWSER_REMOTE, UnityPlacesPlaceBrowserRemote))
#define UNITY_PLACES_IS_PLACE_BROWSER_REMOTE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_BROWSER_REMOTE))
#define UNITY_PLACES_PLACE_BROWSER_REMOTE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_PLACES_TYPE_PLACE_BROWSER_REMOTE, UnityPlacesPlaceBrowserRemoteIface))

typedef struct _UnityPlacesPlaceBrowserRemote UnityPlacesPlaceBrowserRemote;
typedef struct _UnityPlacesPlaceBrowserRemoteIface UnityPlacesPlaceBrowserRemoteIface;

#define UNITY_PLACES_PLACE_BROWSER_REMOTE_TYPE_STATE (unity_places_place_browser_remote_state_get_type ())
typedef struct _UnityPlacesPlaceBrowserRemoteState UnityPlacesPlaceBrowserRemoteState;
typedef struct _UnityPlacesPlaceSearchNavigationPrivate UnityPlacesPlaceSearchNavigationPrivate;

#define UNITY_PLACES_TYPE_SECTION_STYLE (unity_places_section_style_get_type ())

#define UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR (unity_places_place_search_sections_bar_get_type ())
#define UNITY_PLACES_PLACE_SEARCH_SECTIONS_BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR, UnityPlacesPlaceSearchSectionsBar))
#define UNITY_PLACES_PLACE_SEARCH_SECTIONS_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR, UnityPlacesPlaceSearchSectionsBarClass))
#define UNITY_PLACES_IS_PLACE_SEARCH_SECTIONS_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR))
#define UNITY_PLACES_IS_PLACE_SEARCH_SECTIONS_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR))
#define UNITY_PLACES_PLACE_SEARCH_SECTIONS_BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_PLACE_SEARCH_SECTIONS_BAR, UnityPlacesPlaceSearchSectionsBarClass))

typedef struct _UnityPlacesPlaceSearchSectionsBar UnityPlacesPlaceSearchSectionsBar;
typedef struct _UnityPlacesPlaceSearchSectionsBarClass UnityPlacesPlaceSearchSectionsBarClass;
typedef struct _UnityPlacesPlaceSearchSectionsBarPrivate UnityPlacesPlaceSearchSectionsBarPrivate;

#define UNITY_PLACES_TYPE_TRASH_CONTROLLER (unity_places_trash_controller_get_type ())
#define UNITY_PLACES_TRASH_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_TRASH_CONTROLLER, UnityPlacesTrashController))
#define UNITY_PLACES_TRASH_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_TRASH_CONTROLLER, UnityPlacesTrashControllerClass))
#define UNITY_PLACES_IS_TRASH_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_TRASH_CONTROLLER))
#define UNITY_PLACES_IS_TRASH_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_TRASH_CONTROLLER))
#define UNITY_PLACES_TRASH_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_TRASH_CONTROLLER, UnityPlacesTrashControllerClass))

typedef struct _UnityPlacesTrashController UnityPlacesTrashController;
typedef struct _UnityPlacesTrashControllerClass UnityPlacesTrashControllerClass;
typedef struct _UnityPlacesTrashControllerPrivate UnityPlacesTrashControllerPrivate;
typedef struct _UnityPlacesViewPrivate UnityPlacesViewPrivate;
typedef struct _UnityPlacesVolumeControllerPrivate UnityPlacesVolumeControllerPrivate;

#define UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER (unity_places_volume_child_controller_get_type ())
#define UNITY_PLACES_VOLUME_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER, UnityPlacesVolumeChildController))
#define UNITY_PLACES_VOLUME_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER, UnityPlacesVolumeChildControllerClass))
#define UNITY_PLACES_IS_VOLUME_CHILD_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER))
#define UNITY_PLACES_IS_VOLUME_CHILD_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER))
#define UNITY_PLACES_VOLUME_CHILD_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACES_TYPE_VOLUME_CHILD_CONTROLLER, UnityPlacesVolumeChildControllerClass))

typedef struct _UnityPlacesVolumeChildController UnityPlacesVolumeChildController;
typedef struct _UnityPlacesVolumeChildControllerClass UnityPlacesVolumeChildControllerClass;
typedef struct _UnityPlacesVolumeChildControllerPrivate UnityPlacesVolumeChildControllerPrivate;

#define UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER (unity_launcher_application_controller_get_type ())
#define UNITY_LAUNCHER_APPLICATION_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER, UnityLauncherApplicationController))
#define UNITY_LAUNCHER_APPLICATION_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER, UnityLauncherApplicationControllerClass))
#define UNITY_LAUNCHER_IS_APPLICATION_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER))
#define UNITY_LAUNCHER_IS_APPLICATION_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER))
#define UNITY_LAUNCHER_APPLICATION_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_CONTROLLER, UnityLauncherApplicationControllerClass))

typedef struct _UnityLauncherApplicationController UnityLauncherApplicationController;
typedef struct _UnityLauncherApplicationControllerClass UnityLauncherApplicationControllerClass;
typedef struct _UnityLauncherApplicationControllerPrivate UnityLauncherApplicationControllerPrivate;

#define UNITY_LAUNCHER_TYPE_SCROLLER_CHILD (unity_launcher_scroller_child_get_type ())
#define UNITY_LAUNCHER_SCROLLER_CHILD(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD, UnityLauncherScrollerChild))
#define UNITY_LAUNCHER_SCROLLER_CHILD_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD, UnityLauncherScrollerChildClass))
#define UNITY_LAUNCHER_IS_SCROLLER_CHILD(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD))
#define UNITY_LAUNCHER_IS_SCROLLER_CHILD_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD))
#define UNITY_LAUNCHER_SCROLLER_CHILD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_CHILD, UnityLauncherScrollerChildClass))

typedef struct _UnityLauncherScrollerChild UnityLauncherScrollerChild;
typedef struct _UnityLauncherScrollerChildClass UnityLauncherScrollerChildClass;

#define UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER (unity_launcher_launcher_container_get_type ())
#define UNITY_LAUNCHER_LAUNCHER_CONTAINER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER, UnityLauncherLauncherContainer))
#define UNITY_LAUNCHER_LAUNCHER_CONTAINER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER, UnityLauncherLauncherContainerClass))
#define UNITY_LAUNCHER_IS_LAUNCHER_CONTAINER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER))
#define UNITY_LAUNCHER_IS_LAUNCHER_CONTAINER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER))
#define UNITY_LAUNCHER_LAUNCHER_CONTAINER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER_CONTAINER, UnityLauncherLauncherContainerClass))

typedef struct _UnityLauncherLauncherContainer UnityLauncherLauncherContainer;
typedef struct _UnityLauncherLauncherContainerClass UnityLauncherLauncherContainerClass;
typedef struct _UnityLauncherLauncherContainerPrivate UnityLauncherLauncherContainerPrivate;

#define UNITY_LAUNCHER_TYPE_SHORTCUT_ITEM (unity_launcher_shortcut_item_get_type ())
#define UNITY_LAUNCHER_SHORTCUT_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_SHORTCUT_ITEM, UnityLauncherShortcutItem))
#define UNITY_LAUNCHER_IS_SHORTCUT_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_SHORTCUT_ITEM))
#define UNITY_LAUNCHER_SHORTCUT_ITEM_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_LAUNCHER_TYPE_SHORTCUT_ITEM, UnityLauncherShortcutItemIface))

typedef struct _UnityLauncherShortcutItem UnityLauncherShortcutItem;
typedef struct _UnityLauncherShortcutItemIface UnityLauncherShortcutItemIface;

#define UNITY_LAUNCHER_TYPE_LAUNCHER (unity_launcher_launcher_get_type ())
#define UNITY_LAUNCHER_LAUNCHER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER, UnityLauncherLauncher))
#define UNITY_LAUNCHER_LAUNCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_LAUNCHER, UnityLauncherLauncherClass))
#define UNITY_LAUNCHER_IS_LAUNCHER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER))
#define UNITY_LAUNCHER_IS_LAUNCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_LAUNCHER))
#define UNITY_LAUNCHER_LAUNCHER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_LAUNCHER, UnityLauncherLauncherClass))

typedef struct _UnityLauncherLauncher UnityLauncherLauncher;
typedef struct _UnityLauncherLauncherClass UnityLauncherLauncherClass;
typedef struct _UnityLauncherLauncherPrivate UnityLauncherLauncherPrivate;

#define UNITY_LAUNCHER_TYPE_SCROLLER_MODEL (unity_launcher_scroller_model_get_type ())
#define UNITY_LAUNCHER_SCROLLER_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_MODEL, UnityLauncherScrollerModel))
#define UNITY_LAUNCHER_SCROLLER_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_MODEL, UnityLauncherScrollerModelClass))
#define UNITY_LAUNCHER_IS_SCROLLER_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_MODEL))
#define UNITY_LAUNCHER_IS_SCROLLER_MODEL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_SCROLLER_MODEL))
#define UNITY_LAUNCHER_SCROLLER_MODEL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_SCROLLER_MODEL, UnityLauncherScrollerModelClass))

typedef struct _UnityLauncherScrollerModel UnityLauncherScrollerModel;
typedef struct _UnityLauncherScrollerModelClass UnityLauncherScrollerModelClass;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM (unity_launcher_quicklist_check_menu_item_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_CHECK_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM, UnityLauncherQuicklistCheckMenuItem))
#define UNITY_LAUNCHER_QUICKLIST_CHECK_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM, UnityLauncherQuicklistCheckMenuItemClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_CHECK_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM))
#define UNITY_LAUNCHER_IS_QUICKLIST_CHECK_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM))
#define UNITY_LAUNCHER_QUICKLIST_CHECK_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_CHECK_MENU_ITEM, UnityLauncherQuicklistCheckMenuItemClass))

typedef struct _UnityLauncherQuicklistCheckMenuItem UnityLauncherQuicklistCheckMenuItem;
typedef struct _UnityLauncherQuicklistCheckMenuItemClass UnityLauncherQuicklistCheckMenuItemClass;
typedef struct _UnityLauncherQuicklistCheckMenuItemPrivate UnityLauncherQuicklistCheckMenuItemPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_CONTROLLER_STATE (unity_launcher_quicklist_controller_state_get_type ())
typedef struct _UnityLauncherQuicklistControllerPrivate UnityLauncherQuicklistControllerPrivate;

#define UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER (unity_launcher_application_quicklist_controller_get_type ())
#define UNITY_LAUNCHER_APPLICATION_QUICKLIST_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER, UnityLauncherApplicationQuicklistController))
#define UNITY_LAUNCHER_APPLICATION_QUICKLIST_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER, UnityLauncherApplicationQuicklistControllerClass))
#define UNITY_LAUNCHER_IS_APPLICATION_QUICKLIST_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER))
#define UNITY_LAUNCHER_IS_APPLICATION_QUICKLIST_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER))
#define UNITY_LAUNCHER_APPLICATION_QUICKLIST_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_APPLICATION_QUICKLIST_CONTROLLER, UnityLauncherApplicationQuicklistControllerClass))

typedef struct _UnityLauncherApplicationQuicklistController UnityLauncherApplicationQuicklistController;
typedef struct _UnityLauncherApplicationQuicklistControllerClass UnityLauncherApplicationQuicklistControllerClass;
typedef struct _UnityLauncherApplicationQuicklistControllerPrivate UnityLauncherApplicationQuicklistControllerPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM (unity_launcher_quicklist_image_menu_item_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_IMAGE_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM, UnityLauncherQuicklistImageMenuItem))
#define UNITY_LAUNCHER_QUICKLIST_IMAGE_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM, UnityLauncherQuicklistImageMenuItemClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_IMAGE_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM))
#define UNITY_LAUNCHER_IS_QUICKLIST_IMAGE_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM))
#define UNITY_LAUNCHER_QUICKLIST_IMAGE_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_IMAGE_MENU_ITEM, UnityLauncherQuicklistImageMenuItemClass))

typedef struct _UnityLauncherQuicklistImageMenuItem UnityLauncherQuicklistImageMenuItem;
typedef struct _UnityLauncherQuicklistImageMenuItemClass UnityLauncherQuicklistImageMenuItemClass;
typedef struct _UnityLauncherQuicklistImageMenuItemPrivate UnityLauncherQuicklistImageMenuItemPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM (unity_launcher_quicklist_menu_item_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM, UnityLauncherQuicklistMenuItem))
#define UNITY_LAUNCHER_QUICKLIST_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM, UnityLauncherQuicklistMenuItemClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM))
#define UNITY_LAUNCHER_QUICKLIST_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_ITEM, UnityLauncherQuicklistMenuItemClass))

typedef struct _UnityLauncherQuicklistMenuItem UnityLauncherQuicklistMenuItem;
typedef struct _UnityLauncherQuicklistMenuItemClass UnityLauncherQuicklistMenuItemClass;
typedef struct _UnityLauncherQuicklistMenuItemPrivate UnityLauncherQuicklistMenuItemPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM (unity_launcher_quicklist_radio_menu_item_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_RADIO_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM, UnityLauncherQuicklistRadioMenuItem))
#define UNITY_LAUNCHER_QUICKLIST_RADIO_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM, UnityLauncherQuicklistRadioMenuItemClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_RADIO_MENU_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM))
#define UNITY_LAUNCHER_IS_QUICKLIST_RADIO_MENU_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM))
#define UNITY_LAUNCHER_QUICKLIST_RADIO_MENU_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_RADIO_MENU_ITEM, UnityLauncherQuicklistRadioMenuItemClass))

typedef struct _UnityLauncherQuicklistRadioMenuItem UnityLauncherQuicklistRadioMenuItem;
typedef struct _UnityLauncherQuicklistRadioMenuItemClass UnityLauncherQuicklistRadioMenuItemClass;
typedef struct _UnityLauncherQuicklistRadioMenuItemPrivate UnityLauncherQuicklistRadioMenuItemPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR (unity_launcher_quicklist_menu_seperator_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_MENU_SEPERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR, UnityLauncherQuicklistMenuSeperator))
#define UNITY_LAUNCHER_QUICKLIST_MENU_SEPERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR, UnityLauncherQuicklistMenuSeperatorClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU_SEPERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU_SEPERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR))
#define UNITY_LAUNCHER_QUICKLIST_MENU_SEPERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU_SEPERATOR, UnityLauncherQuicklistMenuSeperatorClass))

typedef struct _UnityLauncherQuicklistMenuSeperator UnityLauncherQuicklistMenuSeperator;
typedef struct _UnityLauncherQuicklistMenuSeperatorClass UnityLauncherQuicklistMenuSeperatorClass;
typedef struct _UnityLauncherQuicklistMenuSeperatorPrivate UnityLauncherQuicklistMenuSeperatorPrivate;

#define UNITY_LAUNCHER_TYPE_QUICKLIST_MENU (unity_launcher_quicklist_menu_get_type ())
#define UNITY_LAUNCHER_QUICKLIST_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU, UnityLauncherQuicklistMenu))
#define UNITY_LAUNCHER_QUICKLIST_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU, UnityLauncherQuicklistMenuClass))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU))
#define UNITY_LAUNCHER_IS_QUICKLIST_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU))
#define UNITY_LAUNCHER_QUICKLIST_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_TYPE_QUICKLIST_MENU, UnityLauncherQuicklistMenuClass))

typedef struct _UnityLauncherQuicklistMenu UnityLauncherQuicklistMenu;
typedef struct _UnityLauncherQuicklistMenuClass UnityLauncherQuicklistMenuClass;
typedef struct _UnityLauncherQuicklistMenuPrivate UnityLauncherQuicklistMenuPrivate;

#define UNITY_LAUNCHER_TYPE_PIN_TYPE (unity_launcher_pin_type_get_type ())
typedef struct _UnityLauncherScrollerChildPrivate UnityLauncherScrollerChildPrivate;

#define UNITY_LAUNCHER_SCROLLER_CHILD_TYPE_GROUP_TYPE (unity_launcher_scroller_child_group_type_get_type ())
typedef struct _UnityLauncherScrollerModelPrivate UnityLauncherScrollerModelPrivate;

#define UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR (unity_launcher_scroller_model_iterator_get_type ())
#define UNITY_LAUNCHER_SCROLLER_MODEL_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR, UnityLauncherScrollerModelIterator))
#define UNITY_LAUNCHER_SCROLLER_MODEL_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR, UnityLauncherScrollerModelIteratorClass))
#define UNITY_LAUNCHER_SCROLLER_MODEL_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR))
#define UNITY_LAUNCHER_SCROLLER_MODEL_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR))
#define UNITY_LAUNCHER_SCROLLER_MODEL_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_LAUNCHER_SCROLLER_MODEL_TYPE_ITERATOR, UnityLauncherScrollerModelIteratorClass))

typedef struct _UnityLauncherScrollerModelIterator UnityLauncherScrollerModelIterator;
typedef struct _UnityLauncherScrollerModelIteratorClass UnityLauncherScrollerModelIteratorClass;
typedef struct _UnityLauncherScrollerModelIteratorPrivate UnityLauncherScrollerModelIteratorPrivate;

#define UNITY_TESTING_TYPE_BACKGROUND (unity_testing_background_get_type ())
#define UNITY_TESTING_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_BACKGROUND, UnityTestingBackground))
#define UNITY_TESTING_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_BACKGROUND, UnityTestingBackgroundClass))
#define UNITY_TESTING_IS_BACKGROUND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_BACKGROUND))
#define UNITY_TESTING_IS_BACKGROUND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_BACKGROUND))
#define UNITY_TESTING_BACKGROUND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_BACKGROUND, UnityTestingBackgroundClass))

typedef struct _UnityTestingBackground UnityTestingBackground;
typedef struct _UnityTestingBackgroundClass UnityTestingBackgroundClass;
typedef struct _UnityTestingBackgroundPrivate UnityTestingBackgroundPrivate;

#define UNITY_TESTING_TYPE_OBJECT_REGISTRY (unity_testing_object_registry_get_type ())
#define UNITY_TESTING_OBJECT_REGISTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_OBJECT_REGISTRY, UnityTestingObjectRegistry))
#define UNITY_TESTING_OBJECT_REGISTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_OBJECT_REGISTRY, UnityTestingObjectRegistryClass))
#define UNITY_TESTING_IS_OBJECT_REGISTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_OBJECT_REGISTRY))
#define UNITY_TESTING_IS_OBJECT_REGISTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_OBJECT_REGISTRY))
#define UNITY_TESTING_OBJECT_REGISTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_OBJECT_REGISTRY, UnityTestingObjectRegistryClass))

typedef struct _UnityTestingObjectRegistry UnityTestingObjectRegistry;
typedef struct _UnityTestingObjectRegistryClass UnityTestingObjectRegistryClass;
typedef struct _UnityTestingObjectRegistryPrivate UnityTestingObjectRegistryPrivate;

#define UNITY_TYPE_PROCESS_INFO (unity_process_info_get_type ())
#define UNITY_PROCESS_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PROCESS_INFO, UnityProcessInfo))
#define UNITY_PROCESS_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PROCESS_INFO, UnityProcessInfoClass))
#define UNITY_IS_PROCESS_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PROCESS_INFO))
#define UNITY_IS_PROCESS_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PROCESS_INFO))
#define UNITY_PROCESS_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PROCESS_INFO, UnityProcessInfoClass))

typedef struct _UnityProcessInfo UnityProcessInfo;
typedef struct _UnityProcessInfoClass UnityProcessInfoClass;
typedef struct _UnityProcessInfoPrivate UnityProcessInfoPrivate;

#define UNITY_TYPE_TIMELINE_LOGGER (unity_timeline_logger_get_type ())
#define UNITY_TIMELINE_LOGGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_TIMELINE_LOGGER, UnityTimelineLogger))
#define UNITY_TIMELINE_LOGGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_TIMELINE_LOGGER, UnityTimelineLoggerClass))
#define UNITY_IS_TIMELINE_LOGGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_TIMELINE_LOGGER))
#define UNITY_IS_TIMELINE_LOGGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_TIMELINE_LOGGER))
#define UNITY_TIMELINE_LOGGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_TIMELINE_LOGGER, UnityTimelineLoggerClass))

typedef struct _UnityTimelineLogger UnityTimelineLogger;
typedef struct _UnityTimelineLoggerClass UnityTimelineLoggerClass;
typedef struct _UnityTimelineLoggerPrivate UnityTimelineLoggerPrivate;

#define UNITY_TESTING_TYPE_DIRECTOR (unity_testing_director_get_type ())
#define UNITY_TESTING_DIRECTOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_DIRECTOR, UnityTestingDirector))
#define UNITY_TESTING_DIRECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_DIRECTOR, UnityTestingDirectorClass))
#define UNITY_TESTING_IS_DIRECTOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_DIRECTOR))
#define UNITY_TESTING_IS_DIRECTOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_DIRECTOR))
#define UNITY_TESTING_DIRECTOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_DIRECTOR, UnityTestingDirectorClass))

typedef struct _UnityTestingDirector UnityTestingDirector;
typedef struct _UnityTestingDirectorClass UnityTestingDirectorClass;
typedef struct _UnityTestingDirectorPrivate UnityTestingDirectorPrivate;

#define G_TEST_TYPE_LOG (g_test_log_get_type ())
#define G_TEST_LOG(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), G_TEST_TYPE_LOG, GTestLog))
#define G_TEST_LOG_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), G_TEST_TYPE_LOG, GTestLogClass))
#define G_TEST_IS_LOG(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), G_TEST_TYPE_LOG))
#define G_TEST_IS_LOG_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), G_TEST_TYPE_LOG))
#define G_TEST_LOG_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), G_TEST_TYPE_LOG, GTestLogClass))

typedef struct _GTestLog GTestLog;
typedef struct _GTestLogClass GTestLogClass;
typedef struct _GTestLogPrivate GTestLogPrivate;

#define UNITY_TESTING_TYPE_LOGGING (unity_testing_logging_get_type ())
#define UNITY_TESTING_LOGGING(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_LOGGING, UnityTestingLogging))
#define UNITY_TESTING_LOGGING_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_LOGGING, UnityTestingLoggingClass))
#define UNITY_TESTING_IS_LOGGING(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_LOGGING))
#define UNITY_TESTING_IS_LOGGING_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_LOGGING))
#define UNITY_TESTING_LOGGING_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_LOGGING, UnityTestingLoggingClass))

typedef struct _UnityTestingLogging UnityTestingLogging;
typedef struct _UnityTestingLoggingClass UnityTestingLoggingClass;
typedef struct _UnityTestingLoggingPrivate UnityTestingLoggingPrivate;

#define UNITY_TESTING_TYPE_WINDOW (unity_testing_window_get_type ())
#define UNITY_TESTING_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_WINDOW, UnityTestingWindow))
#define UNITY_TESTING_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_WINDOW, UnityTestingWindowClass))
#define UNITY_TESTING_IS_WINDOW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_WINDOW))
#define UNITY_TESTING_IS_WINDOW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_WINDOW))
#define UNITY_TESTING_WINDOW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_WINDOW, UnityTestingWindowClass))

typedef struct _UnityTestingWindow UnityTestingWindow;
typedef struct _UnityTestingWindowClass UnityTestingWindowClass;
typedef struct _UnityTestingWindowPrivate UnityTestingWindowPrivate;

#define UNITY_TESTING_TYPE_WORKAREA (unity_testing_workarea_get_type ())
#define UNITY_TESTING_WORKAREA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TESTING_TYPE_WORKAREA, UnityTestingWorkarea))
#define UNITY_TESTING_WORKAREA_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TESTING_TYPE_WORKAREA, UnityTestingWorkareaClass))
#define UNITY_TESTING_IS_WORKAREA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TESTING_TYPE_WORKAREA))
#define UNITY_TESTING_IS_WORKAREA_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TESTING_TYPE_WORKAREA))
#define UNITY_TESTING_WORKAREA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TESTING_TYPE_WORKAREA, UnityTestingWorkareaClass))

typedef struct _UnityTestingWorkarea UnityTestingWorkarea;
typedef struct _UnityTestingWorkareaClass UnityTestingWorkareaClass;
typedef struct _UnityTestingWorkareaPrivate UnityTestingWorkareaPrivate;

struct _UnityGestureDispatcher {
	GObject parent_instance;
	UnityGestureDispatcherPrivate * priv;
};

struct _UnityGestureDispatcherClass {
	GObjectClass parent_class;
};

struct _UnityGestureXCBDispatcher {
	UnityGestureDispatcher parent_instance;
	UnityGestureXCBDispatcherPrivate * priv;
};

struct _UnityGestureXCBDispatcherClass {
	UnityGestureDispatcherClass parent_class;
};

typedef enum  {
	UNITY_GESTURE_TYPE_NONE,
	UNITY_GESTURE_TYPE_PAN,
	UNITY_GESTURE_TYPE_PINCH,
	UNITY_GESTURE_TYPE_ROTATE,
	UNITY_GESTURE_TYPE_TAP
} UnityGestureType;

typedef enum  {
	UNITY_GESTURE_STATE_BEGAN,
	UNITY_GESTURE_STATE_CONTINUED,
	UNITY_GESTURE_STATE_ENDED
} UnityGestureState;

struct _UnityGestureEvent {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityGestureEventPrivate * priv;
	UnityGestureType type;
	guint32 device_id;
	guint32 gesture_id;
	guint32 timestamp;
	UnityGestureState state;
	gint32 fingers;
	float root_x;
	float root_y;
	Window root_window;
	Window event_window;
	Window child_window;
	UnityGesturePanEvent* pan_event;
	UnityGesturePinchEvent* pinch_event;
	UnityGestureTapEvent* tap_event;
};

struct _UnityGestureEventClass {
	GTypeClass parent_class;
	void (*finalize) (UnityGestureEvent *self);
};

struct _UnityGesturePanEvent {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityGesturePanEventPrivate * priv;
	float delta_x;
	float delta_y;
	float velocity_x;
	float velocity_y;
	float x;
	float y;
};

struct _UnityGesturePanEventClass {
	GTypeClass parent_class;
	void (*finalize) (UnityGesturePanEvent *self);
};

struct _UnityGesturePinchEvent {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityGesturePinchEventPrivate * priv;
	float radius_delta;
	float radius_velocity;
	float radius;
	float bounding_box_x1;
	float bounding_box_y1;
	float bounding_box_x2;
	float bounding_box_y2;
};

struct _UnityGesturePinchEventClass {
	GTypeClass parent_class;
	void (*finalize) (UnityGesturePinchEvent *self);
};

struct _UnityGestureTapEvent {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityGestureTapEventPrivate * priv;
	float duration;
	float x2;
	float y2;
};

struct _UnityGestureTapEventClass {
	GTypeClass parent_class;
	void (*finalize) (UnityGestureTapEvent *self);
};

typedef enum  {
	UNITY_APPLICATION_COMMANDS_SHOW = 1,
	UNITY_APPLICATION_COMMANDS_MAKE_WEBAPP
} UnityApplicationCommands;

struct _UnityApplication {
	UniqueApp parent_instance;
	UnityApplicationPrivate * priv;
};

struct _UnityApplicationClass {
	UniqueAppClass parent_class;
};

struct _UnityPanelBackground {
	ClutterCairoTexture parent_instance;
	UnityPanelBackgroundPrivate * priv;
};

struct _UnityPanelBackgroundClass {
	ClutterCairoTextureClass parent_class;
};

struct _UnityPanelHomeButton {
	CtkButton parent_instance;
	UnityPanelHomeButtonPrivate * priv;
};

struct _UnityPanelHomeButtonClass {
	CtkButtonClass parent_class;
};

struct _UnityPanelIndicatorBackground {
	ClutterCairoTexture parent_instance;
	UnityPanelIndicatorBackgroundPrivate * priv;
};

struct _UnityPanelIndicatorBackgroundClass {
	ClutterCairoTextureClass parent_class;
};

struct _UnityPanelIndicatorsIndicatorBar {
	CtkBox parent_instance;
	UnityPanelIndicatorsIndicatorBarPrivate * priv;
};

struct _UnityPanelIndicatorsIndicatorBarClass {
	CtkBoxClass parent_class;
};

struct _UnityPanelIndicatorsIndicatorsModel {
	GObject parent_instance;
	UnityPanelIndicatorsIndicatorsModelPrivate * priv;
};

struct _UnityPanelIndicatorsIndicatorsModelClass {
	GObjectClass parent_class;
	GeeArrayList* (*get_indicators) (UnityPanelIndicatorsIndicatorsModel* self);
	char* (*get_indicator_name) (UnityPanelIndicatorsIndicatorsModel* self, IndicatorObject* o);
};

struct _UnityPanelIndicatorsIndicatorsFileModel {
	UnityPanelIndicatorsIndicatorsModel parent_instance;
	UnityPanelIndicatorsIndicatorsFileModelPrivate * priv;
	GeeHashMap* indicator_map;
	GeeArrayList* indicator_list;
};

struct _UnityPanelIndicatorsIndicatorsFileModelClass {
	UnityPanelIndicatorsIndicatorsModelClass parent_class;
};

struct _UnityPanelIndicatorsIndicatorObjectEntryView {
	CtkBox parent_instance;
	UnityPanelIndicatorsIndicatorObjectEntryViewPrivate * priv;
	CtkImage* image;
	CtkText* text;
};

struct _UnityPanelIndicatorsIndicatorObjectEntryViewClass {
	CtkBoxClass parent_class;
};

struct _UnityPanelIndicatorsIndicatorObjectView {
	CtkBox parent_instance;
	UnityPanelIndicatorsIndicatorObjectViewPrivate * priv;
};

struct _UnityPanelIndicatorsIndicatorObjectViewClass {
	CtkBoxClass parent_class;
};

struct _MenuManager {
	GObject parent_instance;
	MenuManagerPrivate * priv;
};

struct _MenuManagerClass {
	GObjectClass parent_class;
};

struct _UnityPanelIndicatorsMenuBar {
	CtkBox parent_instance;
	UnityPanelIndicatorsMenuBarPrivate * priv;
	UnityPanelIndicatorsIndicatorObjectView* indicator_object_view;
};

struct _UnityPanelIndicatorsMenuBarClass {
	CtkBoxClass parent_class;
};

struct _UnityPanelSystemTray {
	CtkBox parent_instance;
	UnityPanelSystemTrayPrivate * priv;
};

struct _UnityPanelSystemTrayClass {
	CtkBoxClass parent_class;
};

struct _UnityPanelView {
	CtkBin parent_instance;
	UnityPanelViewPrivate * priv;
	CtkEffectCache* cache;
	gboolean expanded;
};

struct _UnityPanelViewClass {
	CtkBinClass parent_class;
};

struct _UnityPanelWindowButtons {
	CtkBox parent_instance;
	UnityPanelWindowButtonsPrivate * priv;
};

struct _UnityPanelWindowButtonsClass {
	CtkBoxClass parent_class;
};

struct _UnityPanelWindowButton {
	CtkButton parent_instance;
	UnityPanelWindowButtonPrivate * priv;
	ClutterActor* bg;
};

struct _UnityPanelWindowButtonClass {
	CtkButtonClass parent_class;
};

typedef void (*UnityPlacesButtonButtonOutlineFunc) (cairo_t* cr, gint width, gint height, void* user_data);
struct _UnityPlacesButton {
	CtkButton parent_instance;
	UnityPlacesButtonPrivate * priv;
	UnityPlacesButtonButtonOutlineFunc outline_func;
	gpointer outline_func_target;
	GDestroyNotify outline_func_target_destroy_notify;
};

struct _UnityPlacesButtonClass {
	CtkButtonClass parent_class;
};

typedef enum  {
	UNITY_PLACES_BUTTON_NORMAL_STATE_NONE,
	UNITY_PLACES_BUTTON_NORMAL_STATE_UNDERLINE
} UnityPlacesButtonNormalState;

typedef enum  {
	UNITY_PLACES_BUTTON_PRELIGHT_STATE_NONE,
	UNITY_PLACES_BUTTON_PRELIGHT_STATE_STRIPED,
	UNITY_PLACES_BUTTON_PRELIGHT_STATE_UNDERLINE
} UnityPlacesButtonPrelightState;

struct _UnityPlacesController {
	GObject parent_instance;
	UnityPlacesControllerPrivate * priv;
};

struct _UnityPlacesControllerClass {
	GObjectClass parent_class;
};

struct _UnityPlacesDefaultRendererGroup {
	UnityExpandingBin parent_instance;
	UnityPlacesDefaultRendererGroupPrivate * priv;
};

struct _UnityPlacesDefaultRendererGroupClass {
	UnityExpandingBinClass parent_class;
};

struct _UnityPlacesExpander {
	CtkBin parent_instance;
	UnityPlacesExpanderPrivate * priv;
};

struct _UnityPlacesExpanderClass {
	CtkBinClass parent_class;
};

typedef enum  {
	UNITY_PLACES_EXPANDER_STATE_EXPANDED,
	UNITY_PLACES_EXPANDER_STATE_UNEXPANDED
} UnityPlacesExpanderState;

struct _UnityPlacesMoreResultsButton {
	CtkButton parent_instance;
	UnityPlacesMoreResultsButtonPrivate * priv;
};

struct _UnityPlacesMoreResultsButtonClass {
	CtkButtonClass parent_class;
};

struct _UnityPlacesTile {
	UnityPlacesButton parent_instance;
	UnityPlacesTilePrivate * priv;
};

struct _UnityPlacesTileClass {
	UnityPlacesButtonClass parent_class;
	void (*about_to_show) (UnityPlacesTile* self);
};

struct _UnityPlacesFileInfoTile {
	UnityPlacesTile parent_instance;
	UnityPlacesFileInfoTilePrivate * priv;
};

struct _UnityPlacesFileInfoTileClass {
	UnityPlacesTileClass parent_class;
};

struct _UnityPlacesShowcaseTile {
	UnityPlacesTile parent_instance;
	UnityPlacesShowcaseTilePrivate * priv;
};

struct _UnityPlacesShowcaseTileClass {
	UnityPlacesTileClass parent_class;
};

struct _UnityPlacesDefaultTile {
	UnityPlacesTile parent_instance;
	UnityPlacesDefaultTilePrivate * priv;
};

struct _UnityPlacesDefaultTileClass {
	UnityPlacesTileClass parent_class;
};

struct _UnityPlacesDefaultRenderer {
	UnityLayeredBin parent_instance;
	UnityPlacesDefaultRendererPrivate * priv;
};

struct _UnityPlacesDefaultRendererClass {
	UnityLayeredBinClass parent_class;
};

struct _UnityPlacesEmptySearchGroup {
	CtkBin parent_instance;
	UnityPlacesEmptySearchGroupPrivate * priv;
};

struct _UnityPlacesEmptySearchGroupClass {
	CtkBinClass parent_class;
};

struct _UnityPlacesEmptySectionGroup {
	CtkBin parent_instance;
	UnityPlacesEmptySectionGroupPrivate * priv;
};

struct _UnityPlacesEmptySectionGroupClass {
	CtkBinClass parent_class;
};

struct _UnityPlacesFolderBrowserRenderer {
	CtkScrollView parent_instance;
	UnityPlacesFolderBrowserRendererPrivate * priv;
};

struct _UnityPlacesFolderBrowserRendererClass {
	CtkScrollViewClass parent_class;
};

struct _UnityPlacesPlaceBar {
	CtkBox parent_instance;
	UnityPlacesPlaceBarPrivate * priv;
};

struct _UnityPlacesPlaceBarClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesPlaceBarBackground {
	ClutterCairoTexture parent_instance;
	UnityPlacesPlaceBarBackgroundPrivate * priv;
};

struct _UnityPlacesPlaceBarBackgroundClass {
	ClutterCairoTextureClass parent_class;
};

typedef void (*UnityLauncherScrollerChildControllermenu_cb) (DbusmenuMenuitem* menu, void* user_data);
typedef enum  {
	UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_MENU_STATE_NO_MENU,
	UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_MENU_STATE_LABEL,
	UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_MENU_STATE_MENU,
	UNITY_LAUNCHER_SCROLLER_CHILD_CONTROLLER_MENU_STATE_MENU_CLOSE_WHEN_LEAVE
} UnityLauncherScrollerChildControllerMenuState;

struct _UnityLauncherScrollerChildController {
	GObject parent_instance;
	UnityLauncherScrollerChildControllerPrivate * priv;
	UnityLauncherScrollerChildControllerMenuState menu_state;
	guint32 last_press_time;
	gboolean button_down;
	float click_start_pos_x;
	float click_start_pos_y;
	gint drag_sensitivity;
};

struct _UnityLauncherScrollerChildControllerClass {
	GObjectClass parent_class;
	void (*get_menu_actions) (UnityLauncherScrollerChildController* self, UnityLauncherScrollerChildControllermenu_cb callback, void* callback_target);
	void (*get_menu_navigation) (UnityLauncherScrollerChildController* self, UnityLauncherScrollerChildControllermenu_cb callback, void* callback_target);
	void (*activate) (UnityLauncherScrollerChildController* self);
	UnityLauncherQuicklistController* (*get_menu_controller) (UnityLauncherScrollerChildController* self);
	gboolean (*can_drag) (UnityLauncherScrollerChildController* self);
};

struct _UnityPlacesPlaceEntryScrollerChildController {
	UnityLauncherScrollerChildController parent_instance;
	UnityPlacesPlaceEntryScrollerChildControllerPrivate * priv;
};

struct _UnityPlacesPlaceEntryScrollerChildControllerClass {
	UnityLauncherScrollerChildControllerClass parent_class;
};

struct _UnityPlacesPlaceEntryIface {
	GTypeInterface parent_iface;
	void (*connect) (UnityPlacesPlaceEntry* self);
	void (*set_search) (UnityPlacesPlaceEntry* self, const char* search, GHashTable* hints);
	void (*set_active_section) (UnityPlacesPlaceEntry* self, guint section_id);
	void (*set_global_search) (UnityPlacesPlaceEntry* self, const char* search, GHashTable* hints);
	const char* (*get_name) (UnityPlacesPlaceEntry* self);
	void (*set_name) (UnityPlacesPlaceEntry* self, const char* value);
	const char* (*get_icon) (UnityPlacesPlaceEntry* self);
	void (*set_icon) (UnityPlacesPlaceEntry* self, const char* value);
	const char* (*get_description) (UnityPlacesPlaceEntry* self);
	void (*set_description) (UnityPlacesPlaceEntry* self, const char* value);
	guint (*get_position) (UnityPlacesPlaceEntry* self);
	void (*set_position) (UnityPlacesPlaceEntry* self, guint value);
	char** (*get_mimetypes) (UnityPlacesPlaceEntry* self, int* result_length1);
	void (*set_mimetypes) (UnityPlacesPlaceEntry* self, char** value, int value_length1);
	gboolean (*get_sensitive) (UnityPlacesPlaceEntry* self);
	void (*set_sensitive) (UnityPlacesPlaceEntry* self, gboolean value);
	GeeHashMap* (*get_hints) (UnityPlacesPlaceEntry* self);
	void (*set_hints) (UnityPlacesPlaceEntry* self, GeeHashMap* value);
	gboolean (*get_online) (UnityPlacesPlaceEntry* self);
	void (*set_online) (UnityPlacesPlaceEntry* self, gboolean value);
	gboolean (*get_active) (UnityPlacesPlaceEntry* self);
	void (*set_active) (UnityPlacesPlaceEntry* self, gboolean value);
	DeeModel* (*get_sections_model) (UnityPlacesPlaceEntry* self);
	void (*set_sections_model) (UnityPlacesPlaceEntry* self, DeeModel* value);
	const char* (*get_entry_renderer_name) (UnityPlacesPlaceEntry* self);
	void (*set_entry_renderer_name) (UnityPlacesPlaceEntry* self, const char* value);
	DeeModel* (*get_entry_groups_model) (UnityPlacesPlaceEntry* self);
	void (*set_entry_groups_model) (UnityPlacesPlaceEntry* self, DeeModel* value);
	DeeModel* (*get_entry_results_model) (UnityPlacesPlaceEntry* self);
	void (*set_entry_results_model) (UnityPlacesPlaceEntry* self, DeeModel* value);
	GeeHashMap* (*get_entry_renderer_hints) (UnityPlacesPlaceEntry* self);
	void (*set_entry_renderer_hints) (UnityPlacesPlaceEntry* self, GeeHashMap* value);
	const char* (*get_global_renderer_name) (UnityPlacesPlaceEntry* self);
	void (*set_global_renderer_name) (UnityPlacesPlaceEntry* self, const char* value);
	DeeModel* (*get_global_groups_model) (UnityPlacesPlaceEntry* self);
	void (*set_global_groups_model) (UnityPlacesPlaceEntry* self, DeeModel* value);
	DeeModel* (*get_global_results_model) (UnityPlacesPlaceEntry* self);
	void (*set_global_results_model) (UnityPlacesPlaceEntry* self, DeeModel* value);
	GeeHashMap* (*get_global_renderer_hints) (UnityPlacesPlaceEntry* self);
	void (*set_global_renderer_hints) (UnityPlacesPlaceEntry* self, GeeHashMap* value);
	UnityPlacesPlace* (*get_parent) (UnityPlacesPlaceEntry* self);
	void (*set_parent) (UnityPlacesPlaceEntry* self, UnityPlacesPlace* value);
};

struct _UnityPlacesPlaceEntryView {
	CtkImage parent_instance;
	UnityPlacesPlaceEntryViewPrivate * priv;
};

struct _UnityPlacesPlaceEntryViewClass {
	CtkImageClass parent_class;
};

struct _UnityPlacesPlaceEntryRemoteIface {
	GTypeInterface parent_iface;
	void (*set_global_search) (UnityPlacesPlaceEntryRemote* self, const char* search_string, GHashTable* hints, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*set_global_search_finish) (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
	void (*set_active_section) (UnityPlacesPlaceEntryRemote* self, guint32 section, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*set_active_section_finish) (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
	void (*set_search) (UnityPlacesPlaceEntryRemote* self, const char* search, GHashTable* hints, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*set_search_finish) (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
	void (*set_active) (UnityPlacesPlaceEntryRemote* self, gboolean is_active, GAsyncReadyCallback _callback_, gpointer _user_data_);
	void (*set_active_finish) (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
};

struct _UnityPlacesPlaceEntryDbus {
	GObject parent_instance;
	UnityPlacesPlaceEntryDbusPrivate * priv;
	char* entry_groups_model_name;
	char* entry_results_model_name;
	char* global_groups_model_name;
};

struct _UnityPlacesPlaceEntryDbusClass {
	GObjectClass parent_class;
};

struct _UnityPlacesPlaceEntryDbusRendererInfo {
	char* default_renderer;
	char* groups_model;
	char* results_model;
	GHashTable* renderer_hints;
};

struct _UnityPlacesPlaceEntryDbusPlaceEntryInfo {
	char* dbus_path;
	char* name;
	char* icon;
	guint position;
	char** mimetype;
	gint mimetype_length1;
	gboolean sensitive;
	char* sections_model;
	GHashTable* hints;
};

struct _UnityPlacesPlaceHomeEntry {
	GObject parent_instance;
	UnityPlacesPlaceHomeEntryPrivate * priv;
};

struct _UnityPlacesPlaceHomeEntryClass {
	GObjectClass parent_class;
};

struct _UnityPlacesHomeRenderer {
	CtkBin parent_instance;
	UnityPlacesHomeRendererPrivate * priv;
};

struct _UnityPlacesHomeRendererClass {
	CtkBinClass parent_class;
};

struct _UnityPlacesHomeButton {
	CtkButton parent_instance;
	UnityPlacesHomeButtonPrivate * priv;
};

struct _UnityPlacesHomeButtonClass {
	CtkButtonClass parent_class;
};

struct _UnityPlacesPlaceModel {
	GeeArrayList parent_instance;
	UnityPlacesPlaceModelPrivate * priv;
};

struct _UnityPlacesPlaceModelClass {
	GeeArrayListClass parent_class;
};

struct _UnityPlacesPlaceFileModel {
	UnityPlacesPlaceModel parent_instance;
	UnityPlacesPlaceFileModelPrivate * priv;
};

struct _UnityPlacesPlaceFileModelClass {
	UnityPlacesPlaceModelClass parent_class;
};

struct _UnityPlacesPlaceView {
	CtkBox parent_instance;
	UnityPlacesPlaceViewPrivate * priv;
};

struct _UnityPlacesPlaceViewClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesPlace {
	GObject parent_instance;
	UnityPlacesPlacePrivate * priv;
	GRegex* uri_regex;
	GRegex* mime_regex;
};

struct _UnityPlacesPlaceClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_PLACES_ACTIVATION_STATUS_NOT_ACTIVATED,
	UNITY_PLACES_ACTIVATION_STATUS_ACTIVATED_FALLBACK,
	UNITY_PLACES_ACTIVATION_STATUS_ACTIVATED_SHOW_DASH,
	UNITY_PLACES_ACTIVATION_STATUS_ACTIVATED_HIDE_DASH
} UnityPlacesActivationStatus;

struct _UnityPlacesPlaceSearchBar {
	CtkBox parent_instance;
	UnityPlacesPlaceSearchBarPrivate * priv;
};

struct _UnityPlacesPlaceSearchBarClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesPlaceSearchBarBackground {
	CtkBin parent_instance;
	UnityPlacesPlaceSearchBarBackgroundPrivate * priv;
};

struct _UnityPlacesPlaceSearchBarBackgroundClass {
	CtkBinClass parent_class;
};

struct _UnityPlacesPlaceSearchEntry {
	CtkBox parent_instance;
	UnityPlacesPlaceSearchEntryPrivate * priv;
	CtkImage* left_icon;
	CtkText* hint_text;
	CtkText* text;
	UnityCairoCanvas* right_icon;
};

struct _UnityPlacesPlaceSearchEntryClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesPlaceBrowserRemoteState {
	gboolean sensitive;
	char* tooltip;
};

struct _UnityPlacesPlaceBrowserRemoteIface {
	GTypeInterface parent_iface;
	void (*get_state) (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityPlacesPlaceBrowserRemoteState* (*get_state_finish) (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
	void (*go_back) (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityPlacesPlaceBrowserRemoteState* (*go_back_finish) (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
	void (*go_forward) (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
	UnityPlacesPlaceBrowserRemoteState* (*go_forward_finish) (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
};

struct _UnityPlacesPlaceSearchNavigation {
	CtkBox parent_instance;
	UnityPlacesPlaceSearchNavigationPrivate * priv;
};

struct _UnityPlacesPlaceSearchNavigationClass {
	CtkBoxClass parent_class;
};

typedef enum  {
	UNITY_PLACES_SECTION_STYLE_BUTTONS,
	UNITY_PLACES_SECTION_STYLE_BREADCRUMB
} UnityPlacesSectionStyle;

struct _UnityPlacesPlaceSearchSectionsBar {
	CtkBox parent_instance;
	UnityPlacesPlaceSearchSectionsBarPrivate * priv;
	UnityPlacesSectionStyle _style;
};

struct _UnityPlacesPlaceSearchSectionsBarClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesTrashController {
	UnityLauncherScrollerChildController parent_instance;
	UnityPlacesTrashControllerPrivate * priv;
};

struct _UnityPlacesTrashControllerClass {
	UnityLauncherScrollerChildControllerClass parent_class;
};

struct _UnityPlacesView {
	CtkBox parent_instance;
	UnityPlacesViewPrivate * priv;
	UnityPlacesPlaceHomeEntry* home_entry;
	UnityPlacesPlaceSearchBar* search_bar;
};

struct _UnityPlacesViewClass {
	CtkBoxClass parent_class;
};

struct _UnityPlacesVolumeController {
	GObject parent_instance;
	UnityPlacesVolumeControllerPrivate * priv;
};

struct _UnityPlacesVolumeControllerClass {
	GObjectClass parent_class;
};

struct _UnityPlacesVolumeChildController {
	UnityLauncherScrollerChildController parent_instance;
	UnityPlacesVolumeChildControllerPrivate * priv;
};

struct _UnityPlacesVolumeChildControllerClass {
	UnityLauncherScrollerChildControllerClass parent_class;
};

typedef enum  {
	UNITY_LAUNCHER_APP_TYPE_ERROR_NO_DESKTOP_FILE
} UnityLauncherAppTypeError;
#define UNITY_LAUNCHER_APP_TYPE_ERROR unity_launcher_app_type_error_quark ()
struct _UnityLauncherApplicationController {
	UnityLauncherScrollerChildController parent_instance;
	UnityLauncherApplicationControllerPrivate * priv;
};

struct _UnityLauncherApplicationControllerClass {
	UnityLauncherScrollerChildControllerClass parent_class;
};

struct _UnityLauncherLauncherContainer {
	CtkBin parent_instance;
	UnityLauncherLauncherContainerPrivate * priv;
	CtkEffectCache* cache;
};

struct _UnityLauncherLauncherContainerClass {
	CtkBinClass parent_class;
};

struct _UnityLauncherShortcutItemIface {
	GTypeInterface parent_iface;
	char* (*get_name) (UnityLauncherShortcutItem* self);
	void (*activated) (UnityLauncherShortcutItem* self);
};

struct _UnityLauncherLauncher {
	GObject parent_instance;
	UnityLauncherLauncherPrivate * priv;
};

struct _UnityLauncherLauncherClass {
	GObjectClass parent_class;
};

struct _UnityLauncherQuicklistCheckMenuItem {
	CtkCheckMenuItem parent_instance;
	UnityLauncherQuicklistCheckMenuItemPrivate * priv;
};

struct _UnityLauncherQuicklistCheckMenuItemClass {
	CtkCheckMenuItemClass parent_class;
};

typedef enum  {
	UNITY_LAUNCHER_QUICKLIST_CONTROLLER_STATE_LABEL,
	UNITY_LAUNCHER_QUICKLIST_CONTROLLER_STATE_MENU,
	UNITY_LAUNCHER_QUICKLIST_CONTROLLER_STATE_CLOSED
} UnityLauncherQuicklistControllerState;

struct _UnityLauncherQuicklistController {
	GObject parent_instance;
	UnityLauncherQuicklistControllerPrivate * priv;
	CtkMenuExpandable* menu;
};

struct _UnityLauncherQuicklistControllerClass {
	GObjectClass parent_class;
};

struct _UnityLauncherApplicationQuicklistController {
	UnityLauncherQuicklistController parent_instance;
	UnityLauncherApplicationQuicklistControllerPrivate * priv;
};

struct _UnityLauncherApplicationQuicklistControllerClass {
	UnityLauncherQuicklistControllerClass parent_class;
};

struct _UnityLauncherQuicklistImageMenuItem {
	CtkImageMenuItem parent_instance;
	UnityLauncherQuicklistImageMenuItemPrivate * priv;
};

struct _UnityLauncherQuicklistImageMenuItemClass {
	CtkImageMenuItemClass parent_class;
};

struct _UnityLauncherQuicklistMenuItem {
	CtkMenuItem parent_instance;
	UnityLauncherQuicklistMenuItemPrivate * priv;
};

struct _UnityLauncherQuicklistMenuItemClass {
	CtkMenuItemClass parent_class;
};

struct _UnityLauncherQuicklistRadioMenuItem {
	CtkRadioMenuItem parent_instance;
	UnityLauncherQuicklistRadioMenuItemPrivate * priv;
};

struct _UnityLauncherQuicklistRadioMenuItemClass {
	CtkRadioMenuItemClass parent_class;
};

struct _UnityLauncherQuicklistMenuSeperator {
	CtkMenuSeperator parent_instance;
	UnityLauncherQuicklistMenuSeperatorPrivate * priv;
};

struct _UnityLauncherQuicklistMenuSeperatorClass {
	CtkMenuSeperatorClass parent_class;
};

struct _UnityLauncherQuicklistMenu {
	CtkMenuExpandable parent_instance;
	UnityLauncherQuicklistMenuPrivate * priv;
};

struct _UnityLauncherQuicklistMenuClass {
	CtkMenuExpandableClass parent_class;
};

typedef enum  {
	UNITY_LAUNCHER_PIN_TYPE_UNPINNED,
	UNITY_LAUNCHER_PIN_TYPE_PINNED,
	UNITY_LAUNCHER_PIN_TYPE_ALWAYS,
	UNITY_LAUNCHER_PIN_TYPE_NEVER
} UnityLauncherPinType;

struct _UnityLauncherScrollerChild {
	CtkActor parent_instance;
	UnityLauncherScrollerChildPrivate * priv;
	UnityLauncherPinType pin_type;
	gboolean do_not_render;
	UnityLauncherScrollerChildController* controller;
	float grabbed_push;
};

struct _UnityLauncherScrollerChildClass {
	CtkActorClass parent_class;
};

typedef enum  {
	UNITY_LAUNCHER_SCROLLER_CHILD_GROUP_TYPE_APPLICATION,
	UNITY_LAUNCHER_SCROLLER_CHILD_GROUP_TYPE_PLACE,
	UNITY_LAUNCHER_SCROLLER_CHILD_GROUP_TYPE_DEVICE,
	UNITY_LAUNCHER_SCROLLER_CHILD_GROUP_TYPE_SYSTEM
} UnityLauncherScrollerChildGroupType;

struct _UnityLauncherScrollerModel {
	GObject parent_instance;
	UnityLauncherScrollerModelPrivate * priv;
	gint n_app_icons;
	gint n_place_icons;
	gint n_device_icons;
	gint n_system_icons;
};

struct _UnityLauncherScrollerModelClass {
	GObjectClass parent_class;
};

struct _UnityLauncherScrollerModelIterator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityLauncherScrollerModelIteratorPrivate * priv;
};

struct _UnityLauncherScrollerModelIteratorClass {
	GTypeClass parent_class;
	void (*finalize) (UnityLauncherScrollerModelIterator *self);
};

struct _UnityTestingBackground {
	CtkBin parent_instance;
	UnityTestingBackgroundPrivate * priv;
};

struct _UnityTestingBackgroundClass {
	CtkBinClass parent_class;
};

struct _UnityTestingObjectRegistry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityTestingObjectRegistryPrivate * priv;
};

struct _UnityTestingObjectRegistryClass {
	GTypeClass parent_class;
	void (*finalize) (UnityTestingObjectRegistry *self);
};

struct _UnityProcessInfo {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityProcessInfoPrivate * priv;
	char* name;
	double start;
	double end;
};

struct _UnityProcessInfoClass {
	GTypeClass parent_class;
	void (*finalize) (UnityProcessInfo *self);
};

struct _UnityTimelineLogger {
	GObject parent_instance;
	UnityTimelineLoggerPrivate * priv;
};

struct _UnityTimelineLoggerClass {
	GObjectClass parent_class;
};

struct _UnityTestingDirector {
	GObject parent_instance;
	UnityTestingDirectorPrivate * priv;
};

struct _UnityTestingDirectorClass {
	GObjectClass parent_class;
};

struct _GTestLog {
	GTypeInstance parent_instance;
	volatile int ref_count;
	GTestLogPrivate * priv;
};

struct _GTestLogClass {
	GTypeClass parent_class;
	void (*finalize) (GTestLog *self);
};

typedef gboolean (*GTestLogLogFatalFunc) (const char* log_domain, GLogLevelFlags flags, const char* message, void* user_data);
struct _UnityTestingLogging {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityTestingLoggingPrivate * priv;
};

struct _UnityTestingLoggingClass {
	GTypeClass parent_class;
	void (*finalize) (UnityTestingLogging *self);
};

struct _UnityTestingWindow {
	GtkWindow parent_instance;
	UnityTestingWindowPrivate * priv;
	GtkClutterEmbed* gtk_clutter;
	ClutterStage* stage;
};

struct _UnityTestingWindowClass {
	GtkWindowClass parent_class;
};

struct _UnityTestingWorkarea {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityTestingWorkareaPrivate * priv;
	gint left;
	gint top;
	gint right;
	gint bottom;
};

struct _UnityTestingWorkareaClass {
	GTypeClass parent_class;
	void (*finalize) (UnityTestingWorkarea *self);
};


GType unity_gesture_dispatcher_get_type (void) G_GNUC_CONST;
UnityGestureDispatcher* unity_gesture_dispatcher_construct (GType object_type);
GType unity_gesture_xcb_dispatcher_get_type (void) G_GNUC_CONST;
UnityGestureXCBDispatcher* unity_gesture_xcb_dispatcher_new (void);
UnityGestureXCBDispatcher* unity_gesture_xcb_dispatcher_construct (GType object_type);
void unity_gesture_xcb_dispatcher_glue_init (GObject* obj);
void unity_gesture_xcb_dispatcher_glue_finish (void);
GType unity_gesture_type_get_type (void) G_GNUC_CONST;
GType unity_gesture_state_get_type (void) G_GNUC_CONST;
gpointer unity_gesture_event_ref (gpointer instance);
void unity_gesture_event_unref (gpointer instance);
GParamSpec* unity_gesture_param_spec_event (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_gesture_value_set_event (GValue* value, gpointer v_object);
void unity_gesture_value_take_event (GValue* value, gpointer v_object);
gpointer unity_gesture_value_get_event (const GValue* value);
GType unity_gesture_event_get_type (void) G_GNUC_CONST;
gpointer unity_gesture_pan_event_ref (gpointer instance);
void unity_gesture_pan_event_unref (gpointer instance);
GParamSpec* unity_gesture_param_spec_pan_event (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_gesture_value_set_pan_event (GValue* value, gpointer v_object);
void unity_gesture_value_take_pan_event (GValue* value, gpointer v_object);
gpointer unity_gesture_value_get_pan_event (const GValue* value);
GType unity_gesture_pan_event_get_type (void) G_GNUC_CONST;
gpointer unity_gesture_pinch_event_ref (gpointer instance);
void unity_gesture_pinch_event_unref (gpointer instance);
GParamSpec* unity_gesture_param_spec_pinch_event (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_gesture_value_set_pinch_event (GValue* value, gpointer v_object);
void unity_gesture_value_take_pinch_event (GValue* value, gpointer v_object);
gpointer unity_gesture_value_get_pinch_event (const GValue* value);
GType unity_gesture_pinch_event_get_type (void) G_GNUC_CONST;
gpointer unity_gesture_tap_event_ref (gpointer instance);
void unity_gesture_tap_event_unref (gpointer instance);
GParamSpec* unity_gesture_param_spec_tap_event (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_gesture_value_set_tap_event (GValue* value, gpointer v_object);
void unity_gesture_value_take_tap_event (GValue* value, gpointer v_object);
gpointer unity_gesture_value_get_tap_event (const GValue* value);
GType unity_gesture_tap_event_get_type (void) G_GNUC_CONST;
char* unity_gesture_event_to_string (UnityGestureEvent* self);
char* unity_gesture_event_type_to_string (UnityGestureType type);
char* unity_gesture_event_state_to_string (UnityGestureState state);
UnityGestureEvent* unity_gesture_event_new (void);
UnityGestureEvent* unity_gesture_event_construct (GType object_type);
UnityGesturePanEvent* unity_gesture_pan_event_new (void);
UnityGesturePanEvent* unity_gesture_pan_event_construct (GType object_type);
UnityGesturePinchEvent* unity_gesture_pinch_event_new (void);
UnityGesturePinchEvent* unity_gesture_pinch_event_construct (GType object_type);
UnityGestureTapEvent* unity_gesture_tap_event_new (void);
UnityGestureTapEvent* unity_gesture_tap_event_construct (GType object_type);
GType unity_application_commands_get_type (void) G_GNUC_CONST;
GType unity_application_get_type (void) G_GNUC_CONST;
UnityApplication* unity_application_new (void);
UnityApplication* unity_application_construct (GType object_type);
UniqueResponse unity_application_on_message_received (UnityApplication* self, gint command, UniqueMessageData* data, guint time_);
UnityShell* unity_application_get_shell (UnityApplication* self);
void unity_application_set_shell (UnityApplication* self, UnityShell* value);
#define UNITY_UNITY_CONF_PATH "/desktop/unity"
void utils_set_strut (GtkWindow* window, guint32 strut_size, guint32 strut_start, guint32 strut_end, guint32 top_size, guint32 top_start, guint32 top_end);
void utils_register_object_on_dbus (DBusGConnection* conn, const char* path, GObject* object);
Window utils_get_stage_window (ClutterStage* stage);
gboolean utils_save_snapshot (ClutterStage* stage, const char* filename, gint x, gint y, gint width, gint height);
gboolean utils_compare_snapshot (ClutterStage* stage, const char* filename, gint x, gint y, gint width, gint height, gboolean expected);
gboolean utils_utils_compare_images (const char* img1_path, const char* img2_path);
gboolean utils_window_is_decorated (Window window);
void utils_window_set_decorations (Window window, guint decorations);
void utils_volume_eject (GVolume* volume);
GType unity_panel_background_get_type (void) G_GNUC_CONST;
#define UNITY_PANEL_BACKGROUND_BG "/usr/share/unity/themes/panel_background.png"
UnityPanelBackground* unity_panel_background_new (void);
UnityPanelBackground* unity_panel_background_construct (GType object_type);
GType unity_panel_home_button_get_type (void) G_GNUC_CONST;
UnityPanelHomeButton* unity_panel_home_button_new (UnityShell* shell);
UnityPanelHomeButton* unity_panel_home_button_construct (GType object_type, UnityShell* shell);
UnityShell* unity_panel_home_button_get_shell (UnityPanelHomeButton* self);
GType unity_panel_indicator_background_get_type (void) G_GNUC_CONST;
#define UNITY_PANEL_INDICATOR_BACKGROUND_BG "/usr/share/unity/themes/panel_background.png"
UnityPanelIndicatorBackground* unity_panel_indicator_background_new (void);
UnityPanelIndicatorBackground* unity_panel_indicator_background_construct (GType object_type);
GType unity_panel_indicators_indicator_bar_get_type (void) G_GNUC_CONST;
UnityPanelIndicatorsIndicatorBar* unity_panel_indicators_indicator_bar_new (void);
UnityPanelIndicatorsIndicatorBar* unity_panel_indicators_indicator_bar_construct (GType object_type);
GType unity_panel_indicators_indicator_object_view_get_type (void) G_GNUC_CONST;
UnityPanelIndicatorsIndicatorObjectView* unity_panel_indicators_indicator_bar_get_indicator_view_matching (UnityPanelIndicatorsIndicatorBar* self, IndicatorObject* o);
GType unity_panel_indicators_indicators_model_get_type (void) G_GNUC_CONST;
UnityPanelIndicatorsIndicatorsModel* unity_panel_indicators_indicators_model_get_default (void);
void unity_panel_indicators_indicators_model_set_default (UnityPanelIndicatorsIndicatorsModel* model);
GeeArrayList* unity_panel_indicators_indicators_model_get_indicators (UnityPanelIndicatorsIndicatorsModel* self);
char* unity_panel_indicators_indicators_model_get_indicator_name (UnityPanelIndicatorsIndicatorsModel* self, IndicatorObject* o);
UnityPanelIndicatorsIndicatorsModel* unity_panel_indicators_indicators_model_construct (GType object_type);
GType unity_panel_indicators_indicators_file_model_get_type (void) G_GNUC_CONST;
extern GeeHashMap* unity_panel_indicators_indicators_file_model_indicator_order;
UnityPanelIndicatorsIndicatorsFileModel* unity_panel_indicators_indicators_file_model_new (void);
UnityPanelIndicatorsIndicatorsFileModel* unity_panel_indicators_indicators_file_model_construct (GType object_type);
gint unity_panel_indicators_indicators_file_model_indicator_sort_func (const char* a, const char* b);
GType unity_panel_indicators_indicator_object_entry_view_get_type (void) G_GNUC_CONST;
UnityPanelIndicatorsIndicatorObjectEntryView* unity_panel_indicators_indicator_object_entry_view_new (IndicatorObjectEntry* _entry);
UnityPanelIndicatorsIndicatorObjectEntryView* unity_panel_indicators_indicator_object_entry_view_construct (GType object_type, IndicatorObjectEntry* _entry);
void unity_panel_indicators_indicator_object_entry_view_show_menu (UnityPanelIndicatorsIndicatorObjectEntryView* self);
gboolean unity_panel_indicators_indicator_object_entry_view_on_button_press_event (UnityPanelIndicatorsIndicatorObjectEntryView* self, ClutterEvent* e);
gboolean unity_panel_indicators_indicator_object_entry_view_on_motion_event (UnityPanelIndicatorsIndicatorObjectEntryView* self, ClutterEvent* e);
void unity_panel_indicators_indicator_object_entry_view_menu_shown (UnityPanelIndicatorsIndicatorObjectEntryView* self);
void unity_panel_indicators_indicator_object_entry_view_menu_vis_changed (UnityPanelIndicatorsIndicatorObjectEntryView* self);
void unity_panel_indicators_indicator_object_entry_view_menu_key_moved (UnityPanelIndicatorsIndicatorObjectEntryView* self, GtkMenuDirectionType type);
gboolean unity_panel_indicators_indicator_object_entry_view_is_open (UnityPanelIndicatorsIndicatorObjectEntryView* self);
IndicatorObjectEntry* unity_panel_indicators_indicator_object_entry_view_get_entry (UnityPanelIndicatorsIndicatorObjectEntryView* self);
UnityPanelIndicatorsIndicatorObjectView* unity_panel_indicators_indicator_object_view_new (IndicatorObject* _object);
UnityPanelIndicatorsIndicatorObjectView* unity_panel_indicators_indicator_object_view_construct (GType object_type, IndicatorObject* _object);
void unity_panel_indicators_indicator_object_view_show_entry_menu (UnityPanelIndicatorsIndicatorObjectView* self, gint entry);
void unity_panel_indicators_indicator_object_view_open_first_menu_entry (UnityPanelIndicatorsIndicatorObjectView* self);
void unity_panel_indicators_indicator_object_view_open_last_menu_entry (UnityPanelIndicatorsIndicatorObjectView* self);
gboolean unity_panel_indicators_indicator_object_view_find_entry (UnityPanelIndicatorsIndicatorObjectView* self, IndicatorObjectEntry* entry);
UnityPanelIndicatorsIndicatorObjectEntryView* unity_panel_indicators_indicator_object_view_get_entry_view (UnityPanelIndicatorsIndicatorObjectView* self, IndicatorObjectEntry* entry);
void unity_panel_indicators_indicator_object_view_remove_first_entry (UnityPanelIndicatorsIndicatorObjectView* self);
IndicatorObject* unity_panel_indicators_indicator_object_view_get_indicator_object (UnityPanelIndicatorsIndicatorObjectView* self);
GType menu_manager_get_type (void) G_GNUC_CONST;
MenuManager* menu_manager_get_default (void);
void menu_manager_register_visible_menu (MenuManager* self, GtkMenu* menu);
void menu_manager_popdown_current_menu (MenuManager* self);
gboolean menu_manager_menu_is_open (MenuManager* self);
MenuManager* menu_manager_new (void);
MenuManager* menu_manager_construct (GType object_type);
GType unity_panel_indicators_menu_bar_get_type (void) G_GNUC_CONST;
UnityPanelIndicatorsMenuBar* unity_panel_indicators_menu_bar_new (void);
UnityPanelIndicatorsMenuBar* unity_panel_indicators_menu_bar_construct (GType object_type);
GType unity_panel_system_tray_get_type (void) G_GNUC_CONST;
UnityPanelSystemTray* unity_panel_system_tray_new (void);
UnityPanelSystemTray* unity_panel_system_tray_construct (GType object_type);
void unity_panel_system_tray_manage_stage (UnityPanelSystemTray* self, ClutterStage* stage);
GType unity_panel_view_get_type (void) G_GNUC_CONST;
UnityPanelView* unity_panel_view_new (UnityShell* shell);
UnityPanelView* unity_panel_view_construct (GType object_type, UnityShell* shell);
gint unity_panel_view_get_indicators_width (UnityPanelView* self);
void unity_panel_view_set_expanded (UnityPanelView* self, gboolean _expanded);
gint unity_panel_view_get_panel_height (UnityPanelView* self);
void unity_panel_view_set_indicator_mode (UnityPanelView* self, gboolean mode);
UnityShell* unity_panel_view_get_shell (UnityPanelView* self);
GType unity_panel_window_buttons_get_type (void) G_GNUC_CONST;
UnityPanelWindowButtons* unity_panel_window_buttons_new (void);
UnityPanelWindowButtons* unity_panel_window_buttons_construct (GType object_type);
GType unity_panel_window_button_get_type (void) G_GNUC_CONST;
#define UNITY_PANEL_WINDOW_BUTTON_AMBIANCE "/usr/share/themes/Ambiance/metacity-1"
#define UNITY_PANEL_WINDOW_BUTTON_AMBIANCE_BETA "/usr/share/themes/Ambiance-maverick-beta/metacity-1"
UnityPanelWindowButton* unity_panel_window_button_new (const char* filename);
UnityPanelWindowButton* unity_panel_window_button_construct (GType object_type, const char* filename);
const char* unity_panel_window_button_get_filename (UnityPanelWindowButton* self);
GType unity_places_button_get_type (void) G_GNUC_CONST;
GType unity_places_button_normal_state_get_type (void) G_GNUC_CONST;
GType unity_places_button_prelight_state_get_type (void) G_GNUC_CONST;
UnityPlacesButton* unity_places_button_new (void);
UnityPlacesButton* unity_places_button_construct (GType object_type);
void unity_places_button_rounded_rect (UnityPlacesButton* self, cairo_t* cr, gint width, gint height);
UnityPlacesButtonNormalState unity_places_button_get_normal_state (UnityPlacesButton* self);
void unity_places_button_set_normal_state (UnityPlacesButton* self, UnityPlacesButtonNormalState value);
UnityPlacesButtonPrelightState unity_places_button_get_prelight_state (UnityPlacesButton* self);
void unity_places_button_set_prelight_state (UnityPlacesButton* self, UnityPlacesButtonPrelightState value);
GType unity_places_controller_get_type (void) G_GNUC_CONST;
UnityPlacesController* unity_places_controller_new (UnityShell* shell);
UnityPlacesController* unity_places_controller_construct (GType object_type, UnityShell* shell);
GType unity_places_view_get_type (void) G_GNUC_CONST;
UnityPlacesView* unity_places_controller_get_view (UnityPlacesController* self);
void unity_places_controller_activate_entry (UnityPlacesController* self, const char* entry_name, gint section_id);
void unity_places_controller_activate_entry_by_dbus_path (UnityPlacesController* self, const char* entry_path, gint section_id);
UnityShell* unity_places_controller_get_shell (UnityPlacesController* self);
GType unity_places_place_model_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceModel* unity_places_controller_get_model (UnityPlacesController* self);
void unity_places_controller_set_model (UnityPlacesController* self, UnityPlacesPlaceModel* value);
GType unity_places_volume_controller_get_type (void) G_GNUC_CONST;
UnityPlacesVolumeController* unity_places_controller_get_volumes (UnityPlacesController* self);
void unity_places_controller_set_volumes (UnityPlacesController* self, UnityPlacesVolumeController* value);
GType unity_places_default_renderer_group_get_type (void) G_GNUC_CONST;
UnityPlacesDefaultRendererGroup* unity_places_default_renderer_group_new (guint group_id, const char* group_renderer, const char* display_name, const char* icon_hint, DeeModel* results);
UnityPlacesDefaultRendererGroup* unity_places_default_renderer_group_construct (GType object_type, guint group_id, const char* group_renderer, const char* display_name, const char* icon_hint, DeeModel* results);
guint unity_places_default_renderer_group_get_group_id (UnityPlacesDefaultRendererGroup* self);
const char* unity_places_default_renderer_group_get_group_renderer (UnityPlacesDefaultRendererGroup* self);
const char* unity_places_default_renderer_group_get_display_name (UnityPlacesDefaultRendererGroup* self);
const char* unity_places_default_renderer_group_get_icon_hint (UnityPlacesDefaultRendererGroup* self);
DeeModel* unity_places_default_renderer_group_get_results (UnityPlacesDefaultRendererGroup* self);
gboolean unity_places_default_renderer_group_get_always_expanded (UnityPlacesDefaultRendererGroup* self);
void unity_places_default_renderer_group_set_always_expanded (UnityPlacesDefaultRendererGroup* self, gboolean value);
GType unity_places_expander_get_type (void) G_GNUC_CONST;
GType unity_places_expander_state_get_type (void) G_GNUC_CONST;
UnityPlacesExpander* unity_places_expander_new (void);
UnityPlacesExpander* unity_places_expander_construct (GType object_type);
UnityPlacesExpanderState unity_places_expander_get_expanding_state (UnityPlacesExpander* self);
void unity_places_expander_set_expanding_state (UnityPlacesExpander* self, UnityPlacesExpanderState value);
GType unity_places_more_results_button_get_type (void) G_GNUC_CONST;
UnityPlacesMoreResultsButton* unity_places_more_results_button_new (void);
UnityPlacesMoreResultsButton* unity_places_more_results_button_construct (GType object_type);
guint unity_places_more_results_button_get_count (UnityPlacesMoreResultsButton* self);
void unity_places_more_results_button_set_count (UnityPlacesMoreResultsButton* self, guint value);
GType unity_places_tile_get_type (void) G_GNUC_CONST;
void unity_places_tile_about_to_show (UnityPlacesTile* self);
UnityPlacesTile* unity_places_tile_construct (GType object_type);
DeeModelIter* unity_places_tile_get_iter (UnityPlacesTile* self);
const char* unity_places_tile_get_display_name (UnityPlacesTile* self);
const char* unity_places_tile_get_icon_hint (UnityPlacesTile* self);
const char* unity_places_tile_get_uri (UnityPlacesTile* self);
const char* unity_places_tile_get_mimetype (UnityPlacesTile* self);
const char* unity_places_tile_get_comment (UnityPlacesTile* self);
GType unity_places_file_info_tile_get_type (void) G_GNUC_CONST;
UnityPlacesFileInfoTile* unity_places_file_info_tile_new (DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
UnityPlacesFileInfoTile* unity_places_file_info_tile_construct (GType object_type, DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
GType unity_places_showcase_tile_get_type (void) G_GNUC_CONST;
UnityPlacesShowcaseTile* unity_places_showcase_tile_new (DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
UnityPlacesShowcaseTile* unity_places_showcase_tile_construct (GType object_type, DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
GType unity_places_default_tile_get_type (void) G_GNUC_CONST;
UnityPlacesDefaultTile* unity_places_default_tile_new (DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
UnityPlacesDefaultTile* unity_places_default_tile_construct (GType object_type, DeeModelIter* iter, const char* uri, const char* icon_hint, const char* mimetype, const char* display_name, const char* comment);
GType unity_places_default_renderer_get_type (void) G_GNUC_CONST;
UnityPlacesDefaultRenderer* unity_places_default_renderer_new (void);
UnityPlacesDefaultRenderer* unity_places_default_renderer_construct (GType object_type);
GType unity_places_empty_search_group_get_type (void) G_GNUC_CONST;
UnityPlacesEmptySearchGroup* unity_places_empty_search_group_new (guint group_id, DeeModel* results);
UnityPlacesEmptySearchGroup* unity_places_empty_search_group_construct (GType object_type, guint group_id, DeeModel* results);
guint unity_places_empty_search_group_get_group_id (UnityPlacesEmptySearchGroup* self);
void unity_places_empty_search_group_set_group_id (UnityPlacesEmptySearchGroup* self, guint value);
DeeModel* unity_places_empty_search_group_get_results (UnityPlacesEmptySearchGroup* self);
void unity_places_empty_search_group_set_results (UnityPlacesEmptySearchGroup* self, DeeModel* value);
gboolean unity_places_empty_search_group_get_active (UnityPlacesEmptySearchGroup* self);
void unity_places_empty_search_group_set_active (UnityPlacesEmptySearchGroup* self, gboolean value);
GType unity_places_empty_section_group_get_type (void) G_GNUC_CONST;
UnityPlacesEmptySectionGroup* unity_places_empty_section_group_new (guint group_id, DeeModel* results);
UnityPlacesEmptySectionGroup* unity_places_empty_section_group_construct (GType object_type, guint group_id, DeeModel* results);
guint unity_places_empty_section_group_get_group_id (UnityPlacesEmptySectionGroup* self);
void unity_places_empty_section_group_set_group_id (UnityPlacesEmptySectionGroup* self, guint value);
DeeModel* unity_places_empty_section_group_get_results (UnityPlacesEmptySectionGroup* self);
void unity_places_empty_section_group_set_results (UnityPlacesEmptySectionGroup* self, DeeModel* value);
gboolean unity_places_empty_section_group_get_active (UnityPlacesEmptySectionGroup* self);
void unity_places_empty_section_group_set_active (UnityPlacesEmptySectionGroup* self, gboolean value);
GType unity_places_folder_browser_renderer_get_type (void) G_GNUC_CONST;
UnityPlacesFolderBrowserRenderer* unity_places_folder_browser_renderer_new (void);
UnityPlacesFolderBrowserRenderer* unity_places_folder_browser_renderer_construct (GType object_type);
GType unity_places_place_bar_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceBar* unity_places_place_bar_new (UnityShell* shell, UnityPlacesPlaceModel* model);
UnityPlacesPlaceBar* unity_places_place_bar_construct (GType object_type, UnityShell* shell, UnityPlacesPlaceModel* model);
void unity_places_place_bar_reset (UnityPlacesPlaceBar* self);
void unity_places_place_bar_active_entry_name (UnityPlacesPlaceBar* self, const char* name);
UnityShell* unity_places_place_bar_get_shell (UnityPlacesPlaceBar* self);
UnityPlacesPlaceModel* unity_places_place_bar_get_model (UnityPlacesPlaceBar* self);
void unity_places_place_bar_set_model (UnityPlacesPlaceBar* self, UnityPlacesPlaceModel* value);
GType unity_places_place_bar_background_get_type (void) G_GNUC_CONST;
#define UNITY_PLACES_PLACE_BAR_BACKGROUND_BG "/usr/share/unity/dash_background.png"
UnityPlacesPlaceBarBackground* unity_places_place_bar_background_new (UnityShell* shell);
UnityPlacesPlaceBarBackground* unity_places_place_bar_background_construct (GType object_type, UnityShell* shell);
UnityShell* unity_places_place_bar_background_get_shell (UnityPlacesPlaceBarBackground* self);
gint unity_places_place_bar_background_get_entry_position (UnityPlacesPlaceBarBackground* self);
void unity_places_place_bar_background_set_entry_position (UnityPlacesPlaceBarBackground* self, gint value);
GType unity_launcher_scroller_child_controller_get_type (void) G_GNUC_CONST;
GType unity_launcher_quicklist_controller_get_type (void) G_GNUC_CONST;
GType unity_launcher_scroller_child_controller_menu_state_get_type (void) G_GNUC_CONST;
GType unity_places_place_entry_scroller_child_controller_get_type (void) G_GNUC_CONST;
GType unity_places_place_get_type (void) G_GNUC_CONST;
GType unity_places_place_entry_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceEntryScrollerChildController* unity_places_place_entry_scroller_child_controller_new (UnityPlacesPlaceEntry* entry);
UnityPlacesPlaceEntryScrollerChildController* unity_places_place_entry_scroller_child_controller_construct (GType object_type, UnityPlacesPlaceEntry* entry);
UnityPlacesPlaceEntry* unity_places_place_entry_scroller_child_controller_get_entry (UnityPlacesPlaceEntryScrollerChildController* self);
GType unity_places_place_entry_view_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceEntryView* unity_places_place_entry_view_new (UnityPlacesPlaceEntry* entry);
UnityPlacesPlaceEntryView* unity_places_place_entry_view_construct (GType object_type, UnityPlacesPlaceEntry* entry);
UnityPlacesPlaceEntry* unity_places_place_entry_view_get_entry (UnityPlacesPlaceEntryView* self);
void unity_places_place_entry_connect (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_search (UnityPlacesPlaceEntry* self, const char* search, GHashTable* hints);
void unity_places_place_entry_set_active_section (UnityPlacesPlaceEntry* self, guint section_id);
void unity_places_place_entry_set_global_search (UnityPlacesPlaceEntry* self, const char* search, GHashTable* hints);
const char* unity_places_place_entry_get_name (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_name (UnityPlacesPlaceEntry* self, const char* value);
const char* unity_places_place_entry_get_icon (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_icon (UnityPlacesPlaceEntry* self, const char* value);
const char* unity_places_place_entry_get_description (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_description (UnityPlacesPlaceEntry* self, const char* value);
guint unity_places_place_entry_get_position (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_position (UnityPlacesPlaceEntry* self, guint value);
char** unity_places_place_entry_get_mimetypes (UnityPlacesPlaceEntry* self, int* result_length1);
void unity_places_place_entry_set_mimetypes (UnityPlacesPlaceEntry* self, char** value, int value_length1);
gboolean unity_places_place_entry_get_sensitive (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_sensitive (UnityPlacesPlaceEntry* self, gboolean value);
GeeHashMap* unity_places_place_entry_get_hints (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_hints (UnityPlacesPlaceEntry* self, GeeHashMap* value);
gboolean unity_places_place_entry_get_online (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_online (UnityPlacesPlaceEntry* self, gboolean value);
gboolean unity_places_place_entry_get_active (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_active (UnityPlacesPlaceEntry* self, gboolean value);
DeeModel* unity_places_place_entry_get_sections_model (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_sections_model (UnityPlacesPlaceEntry* self, DeeModel* value);
const char* unity_places_place_entry_get_entry_renderer_name (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_entry_renderer_name (UnityPlacesPlaceEntry* self, const char* value);
DeeModel* unity_places_place_entry_get_entry_groups_model (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_entry_groups_model (UnityPlacesPlaceEntry* self, DeeModel* value);
DeeModel* unity_places_place_entry_get_entry_results_model (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_entry_results_model (UnityPlacesPlaceEntry* self, DeeModel* value);
GeeHashMap* unity_places_place_entry_get_entry_renderer_hints (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_entry_renderer_hints (UnityPlacesPlaceEntry* self, GeeHashMap* value);
const char* unity_places_place_entry_get_global_renderer_name (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_global_renderer_name (UnityPlacesPlaceEntry* self, const char* value);
DeeModel* unity_places_place_entry_get_global_groups_model (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_global_groups_model (UnityPlacesPlaceEntry* self, DeeModel* value);
DeeModel* unity_places_place_entry_get_global_results_model (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_global_results_model (UnityPlacesPlaceEntry* self, DeeModel* value);
GeeHashMap* unity_places_place_entry_get_global_renderer_hints (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_global_renderer_hints (UnityPlacesPlaceEntry* self, GeeHashMap* value);
UnityPlacesPlace* unity_places_place_entry_get_parent (UnityPlacesPlaceEntry* self);
void unity_places_place_entry_set_parent (UnityPlacesPlaceEntry* self, UnityPlacesPlace* value);
UnityPlacesPlaceEntryRemote* unity_places_place_entry_remote_dbus_proxy_new (DBusGConnection* connection, const char* name, const char* path);
GType unity_places_place_entry_remote_get_type (void) G_GNUC_CONST;
void unity_places_place_entry_remote_set_global_search (UnityPlacesPlaceEntryRemote* self, const char* search_string, GHashTable* hints, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_places_place_entry_remote_set_global_search_finish (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
void unity_places_place_entry_remote_set_active_section (UnityPlacesPlaceEntryRemote* self, guint32 section, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_places_place_entry_remote_set_active_section_finish (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
void unity_places_place_entry_remote_set_search (UnityPlacesPlaceEntryRemote* self, const char* search, GHashTable* hints, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_places_place_entry_remote_set_search_finish (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
void unity_places_place_entry_remote_set_active (UnityPlacesPlaceEntryRemote* self, gboolean is_active, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_places_place_entry_remote_set_active_finish (UnityPlacesPlaceEntryRemote* self, GAsyncResult* _res_, GError** error);
GType unity_places_place_entry_dbus_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceEntryDbus* unity_places_place_entry_dbus_new (const char* dbus_name, const char* dbus_path);
UnityPlacesPlaceEntryDbus* unity_places_place_entry_dbus_construct (GType object_type, const char* dbus_name, const char* dbus_path);
UnityPlacesPlaceEntryDbus* unity_places_place_entry_dbus_new_with_info (const char* dbus_name, const char* dbus_path, const char* name, const char* icon, const char* description, gboolean show_global, gboolean show_entry);
UnityPlacesPlaceEntryDbus* unity_places_place_entry_dbus_construct_with_info (GType object_type, const char* dbus_name, const char* dbus_path, const char* name, const char* icon, const char* description, gboolean show_global, gboolean show_entry);
void unity_places_place_entry_dbus_update_info (UnityPlacesPlaceEntryDbus* self, GValueArray* value_array);
const char* unity_places_place_entry_dbus_get_dbus_name (UnityPlacesPlaceEntryDbus* self);
const char* unity_places_place_entry_dbus_get_dbus_path (UnityPlacesPlaceEntryDbus* self);
gboolean unity_places_place_entry_dbus_get_show_global (UnityPlacesPlaceEntryDbus* self);
void unity_places_place_entry_dbus_set_show_global (UnityPlacesPlaceEntryDbus* self, gboolean value);
gboolean unity_places_place_entry_dbus_get_show_entry (UnityPlacesPlaceEntryDbus* self);
void unity_places_place_entry_dbus_set_show_entry (UnityPlacesPlaceEntryDbus* self, gboolean value);
const char* unity_places_place_entry_dbus_get_sections_model_name (UnityPlacesPlaceEntryDbus* self);
void unity_places_place_entry_dbus_set_sections_model_name (UnityPlacesPlaceEntryDbus* self, const char* value);
const char* unity_places_place_entry_dbus_get_global_results_model_name (UnityPlacesPlaceEntryDbus* self);
void unity_places_place_entry_dbus_set_global_results_model_name (UnityPlacesPlaceEntryDbus* self, const char* value);
GType unity_places_place_entry_dbus_renderer_info_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceEntryDbusRendererInfo* unity_places_place_entry_dbus_renderer_info_dup (const UnityPlacesPlaceEntryDbusRendererInfo* self);
void unity_places_place_entry_dbus_renderer_info_free (UnityPlacesPlaceEntryDbusRendererInfo* self);
void unity_places_place_entry_dbus_renderer_info_copy (const UnityPlacesPlaceEntryDbusRendererInfo* self, UnityPlacesPlaceEntryDbusRendererInfo* dest);
void unity_places_place_entry_dbus_renderer_info_destroy (UnityPlacesPlaceEntryDbusRendererInfo* self);
GType unity_places_place_entry_dbus_place_entry_info_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceEntryDbusPlaceEntryInfo* unity_places_place_entry_dbus_place_entry_info_dup (const UnityPlacesPlaceEntryDbusPlaceEntryInfo* self);
void unity_places_place_entry_dbus_place_entry_info_free (UnityPlacesPlaceEntryDbusPlaceEntryInfo* self);
void unity_places_place_entry_dbus_place_entry_info_copy (const UnityPlacesPlaceEntryDbusPlaceEntryInfo* self, UnityPlacesPlaceEntryDbusPlaceEntryInfo* dest);
void unity_places_place_entry_dbus_place_entry_info_destroy (UnityPlacesPlaceEntryDbusPlaceEntryInfo* self);
GType unity_places_place_home_entry_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceHomeEntry* unity_places_place_home_entry_new (UnityShell* shell, UnityPlacesPlaceModel* model);
UnityPlacesPlaceHomeEntry* unity_places_place_home_entry_construct (GType object_type, UnityShell* shell, UnityPlacesPlaceModel* model);
UnityShell* unity_places_place_home_entry_get_shell (UnityPlacesPlaceHomeEntry* self);
UnityPlacesPlaceModel* unity_places_place_home_entry_get_place_model (UnityPlacesPlaceHomeEntry* self);
void unity_places_place_home_entry_set_place_model (UnityPlacesPlaceHomeEntry* self, UnityPlacesPlaceModel* value);
GType unity_places_home_renderer_get_type (void) G_GNUC_CONST;
UnityPlacesHomeRenderer* unity_places_home_renderer_new (void);
UnityPlacesHomeRenderer* unity_places_home_renderer_construct (GType object_type);
GType unity_places_home_button_get_type (void) G_GNUC_CONST;
UnityPlacesHomeButton* unity_places_home_button_new (const char* name, const char* icon, const char* exec);
UnityPlacesHomeButton* unity_places_home_button_construct (GType object_type, const char* name, const char* icon, const char* exec);
const char* unity_places_home_button_get_name (UnityPlacesHomeButton* self);
const char* unity_places_home_button_get_icon (UnityPlacesHomeButton* self);
const char* unity_places_home_button_get_exec (UnityPlacesHomeButton* self);
UnityPlacesPlaceModel* unity_places_place_model_construct (GType object_type);
GType unity_places_place_file_model_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceFileModel* unity_places_place_file_model_new (void);
UnityPlacesPlaceFileModel* unity_places_place_file_model_construct (GType object_type);
UnityPlacesPlaceFileModel* unity_places_place_file_model_new_with_directory (const char* _directory);
UnityPlacesPlaceFileModel* unity_places_place_file_model_construct_with_directory (GType object_type, const char* _directory);
const char* unity_places_place_file_model_get_directory (UnityPlacesPlaceFileModel* self);
gboolean unity_places_place_file_model_get_async (UnityPlacesPlaceFileModel* self);
GType unity_places_place_view_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceView* unity_places_place_view_new (UnityPlacesPlace* place);
UnityPlacesPlaceView* unity_places_place_view_construct (GType object_type, UnityPlacesPlace* place);
UnityPlacesPlace* unity_places_place_view_get_place (UnityPlacesPlaceView* self);
UnityPlacesPlace* unity_places_place_new (const char* dbus_name, const char* dbus_path);
UnityPlacesPlace* unity_places_place_construct (GType object_type, const char* dbus_name, const char* dbus_path);
UnityPlacesPlace* unity_places_place_new_from_keyfile (GKeyFile* file, const char* id);
GeeArrayList* unity_places_place_get_entries (UnityPlacesPlace* self);
UnityPlacesPlaceEntry* unity_places_place_get_nth_entry (UnityPlacesPlace* self, gint index);
void unity_places_place_connect (UnityPlacesPlace* self);
GType unity_places_activation_status_get_type (void) G_GNUC_CONST;
UnityPlacesActivationStatus unity_places_place_activate (UnityPlacesPlace* self, const char* uri, const char* mimetype);
const char* unity_places_place_get_dbus_name (UnityPlacesPlace* self);
const char* unity_places_place_get_dbus_path (UnityPlacesPlace* self);
gint unity_places_place_get_n_entries (UnityPlacesPlace* self);
gboolean unity_places_place_get_online (UnityPlacesPlace* self);
void unity_places_place_set_online (UnityPlacesPlace* self, gboolean value);
GType unity_places_place_search_bar_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceSearchBar* unity_places_place_search_bar_new (void);
UnityPlacesPlaceSearchBar* unity_places_place_search_bar_construct (GType object_type);
void unity_places_place_search_bar_reset (UnityPlacesPlaceSearchBar* self);
void unity_places_place_search_bar_search (UnityPlacesPlaceSearchBar* self, const char* text);
char* unity_places_place_search_bar_get_search_text (UnityPlacesPlaceSearchBar* self);
void unity_places_place_search_bar_set_active_entry_view (UnityPlacesPlaceSearchBar* self, UnityPlacesPlaceEntry* entry, gint x, guint section);
GType unity_places_place_search_bar_background_get_type (void) G_GNUC_CONST;
#define UNITY_PLACES_PLACE_SEARCH_BAR_BACKGROUND_BG "/usr/share/unity/dash_background.png"
GType unity_places_place_search_navigation_get_type (void) G_GNUC_CONST;
GType unity_places_place_search_entry_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceSearchBarBackground* unity_places_place_search_bar_background_new (UnityPlacesPlaceSearchNavigation* nav, UnityPlacesPlaceSearchEntry* search_entry);
UnityPlacesPlaceSearchBarBackground* unity_places_place_search_bar_background_construct (GType object_type, UnityPlacesPlaceSearchNavigation* nav, UnityPlacesPlaceSearchEntry* search_entry);
gboolean unity_places_place_search_bar_background_update_background (UnityPlacesPlaceSearchBarBackground* self);
gint unity_places_place_search_bar_background_get_entry_position (UnityPlacesPlaceSearchBarBackground* self);
void unity_places_place_search_bar_background_set_entry_position (UnityPlacesPlaceSearchBarBackground* self, gint value);
UnityPlacesPlaceSearchNavigation* unity_places_place_search_bar_background_get_navigation (UnityPlacesPlaceSearchBarBackground* self);
UnityPlacesPlaceSearchEntry* unity_places_place_search_bar_background_get_search_entry (UnityPlacesPlaceSearchBarBackground* self);
UnityPlacesPlaceSearchEntry* unity_places_place_search_entry_new (void);
UnityPlacesPlaceSearchEntry* unity_places_place_search_entry_construct (GType object_type);
void unity_places_place_search_entry_reset (UnityPlacesPlaceSearchEntry* self);
void unity_places_place_search_entry_set_active_entry (UnityPlacesPlaceSearchEntry* self, UnityPlacesPlaceEntry* entry);
float unity_places_place_search_entry_get_cursor_opacity (UnityPlacesPlaceSearchEntry* self);
void unity_places_place_search_entry_set_cursor_opacity (UnityPlacesPlaceSearchEntry* self, float value);
UnityPlacesPlaceBrowserRemote* unity_places_place_browser_remote_dbus_proxy_new (DBusGConnection* connection, const char* name, const char* path);
GType unity_places_place_browser_remote_state_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceBrowserRemoteState* unity_places_place_browser_remote_state_dup (const UnityPlacesPlaceBrowserRemoteState* self);
void unity_places_place_browser_remote_state_free (UnityPlacesPlaceBrowserRemoteState* self);
void unity_places_place_browser_remote_state_copy (const UnityPlacesPlaceBrowserRemoteState* self, UnityPlacesPlaceBrowserRemoteState* dest);
void unity_places_place_browser_remote_state_destroy (UnityPlacesPlaceBrowserRemoteState* self);
GType unity_places_place_browser_remote_get_type (void) G_GNUC_CONST;
void unity_places_place_browser_remote_get_state (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
UnityPlacesPlaceBrowserRemoteState* unity_places_place_browser_remote_get_state_finish (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
void unity_places_place_browser_remote_go_back (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
UnityPlacesPlaceBrowserRemoteState* unity_places_place_browser_remote_go_back_finish (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
void unity_places_place_browser_remote_go_forward (UnityPlacesPlaceBrowserRemote* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
UnityPlacesPlaceBrowserRemoteState* unity_places_place_browser_remote_go_forward_finish (UnityPlacesPlaceBrowserRemote* self, GAsyncResult* _res_, int* result_length1, GError** error);
UnityPlacesPlaceSearchNavigation* unity_places_place_search_navigation_new (void);
UnityPlacesPlaceSearchNavigation* unity_places_place_search_navigation_construct (GType object_type);
void unity_places_place_search_navigation_set_active_entry (UnityPlacesPlaceSearchNavigation* self, UnityPlacesPlaceEntry* entry);
GType unity_places_section_style_get_type (void) G_GNUC_CONST;
GType unity_places_place_search_sections_bar_get_type (void) G_GNUC_CONST;
UnityPlacesPlaceSearchSectionsBar* unity_places_place_search_sections_bar_new (void);
UnityPlacesPlaceSearchSectionsBar* unity_places_place_search_sections_bar_construct (GType object_type);
void unity_places_place_search_sections_bar_set_active_section (UnityPlacesPlaceSearchSectionsBar* self, guint section_id);
void unity_places_place_search_sections_bar_set_active_entry (UnityPlacesPlaceSearchSectionsBar* self, UnityPlacesPlaceEntry* entry);
UnityPlacesSectionStyle unity_places_place_search_sections_bar_get_style (UnityPlacesPlaceSearchSectionsBar* self);
void unity_places_place_search_sections_bar_set_style (UnityPlacesPlaceSearchSectionsBar* self, UnityPlacesSectionStyle value);
GType unity_places_trash_controller_get_type (void) G_GNUC_CONST;
#define UNITY_PLACES_TRASH_CONTROLLER_ICON "/usr/share/unity/trash.png"
UnityPlacesTrashController* unity_places_trash_controller_new (void);
UnityPlacesTrashController* unity_places_trash_controller_construct (GType object_type);
#define UNITY_PLACES_VIEW_PADDING 8.0f
UnityPlacesView* unity_places_view_new (UnityShell* shell, UnityPlacesPlaceModel* model);
UnityPlacesView* unity_places_view_construct (GType object_type, UnityShell* shell, UnityPlacesPlaceModel* model);
void unity_places_view_about_to_show (UnityPlacesView* self);
void unity_places_view_shown (UnityPlacesView* self);
void unity_places_view_hidden (UnityPlacesView* self);
void unity_places_view_on_entry_view_activated (UnityPlacesView* self, UnityPlacesPlaceEntry* entry, guint section_id);
UnityShell* unity_places_view_get_shell (UnityPlacesView* self);
UnityPlacesPlaceModel* unity_places_view_get_model (UnityPlacesView* self);
UnityPlacesVolumeController* unity_places_volume_controller_new (void);
UnityPlacesVolumeController* unity_places_volume_controller_construct (GType object_type);
GType unity_places_volume_child_controller_get_type (void) G_GNUC_CONST;
#define UNITY_PLACES_VOLUME_CHILD_CONTROLLER_ICON "/usr/share/unity/trash.png"
UnityPlacesVolumeChildController* unity_places_volume_child_controller_new (GVolume* volume);
UnityPlacesVolumeChildController* unity_places_volume_child_controller_construct (GType object_type, GVolume* volume);
GVolume* unity_places_volume_child_controller_get_volume (UnityPlacesVolumeChildController* self);
GQuark unity_launcher_app_type_error_quark (void);
GType unity_launcher_application_controller_get_type (void) G_GNUC_CONST;
GType unity_launcher_scroller_child_get_type (void) G_GNUC_CONST;
UnityLauncherApplicationController* unity_launcher_application_controller_new (const char* desktop_file_, UnityLauncherScrollerChild* child_);
UnityLauncherApplicationController* unity_launcher_application_controller_construct (GType object_type, const char* desktop_file_, UnityLauncherScrollerChild* child_);
void unity_launcher_application_controller_closed (UnityLauncherApplicationController* self);
void unity_launcher_application_controller_set_sticky (UnityLauncherApplicationController* self, gboolean is_sticky);
gboolean unity_launcher_application_controller_is_sticky (UnityLauncherApplicationController* self);
void unity_launcher_application_controller_close_windows (UnityLauncherApplicationController* self);
void unity_launcher_application_controller_set_priority (UnityLauncherApplicationController* self, float priority);
float unity_launcher_application_controller_get_priority (UnityLauncherApplicationController* self, GError** error);
void unity_launcher_application_controller_attach_application (UnityLauncherApplicationController* self, BamfApplication* application);
void unity_launcher_application_controller_detach_application (UnityLauncherApplicationController* self);
gboolean unity_launcher_application_controller_debug_is_application_attached (UnityLauncherApplicationController* self);
const char* unity_launcher_application_controller_get_desktop_file (UnityLauncherApplicationController* self);
GType unity_launcher_launcher_container_get_type (void) G_GNUC_CONST;
UnityLauncherLauncherContainer* unity_launcher_launcher_container_new (void);
UnityLauncherLauncherContainer* unity_launcher_launcher_container_construct (GType object_type);
GType unity_launcher_shortcut_item_get_type (void) G_GNUC_CONST;
char* unity_launcher_shortcut_item_get_name (UnityLauncherShortcutItem* self);
void unity_launcher_shortcut_item_activated (UnityLauncherShortcutItem* self);
GType unity_launcher_launcher_get_type (void) G_GNUC_CONST;
UnityLauncherLauncher* unity_launcher_launcher_new (UnityShell* shell);
UnityLauncherLauncher* unity_launcher_launcher_construct (GType object_type, UnityShell* shell);
float unity_launcher_launcher_get_width (UnityLauncherLauncher* self);
ClutterActor* unity_launcher_launcher_get_view (UnityLauncherLauncher* self);
ClutterActor* unity_launcher_launcher_get_container (UnityLauncherLauncher* self);
CtkEffectCache* unity_launcher_launcher_get_actor_cache (UnityLauncherLauncher* self);
UnityShell* unity_launcher_launcher_get_shell (UnityLauncherLauncher* self);
GType unity_launcher_scroller_model_get_type (void) G_GNUC_CONST;
UnityLauncherScrollerModel* unity_launcher_launcher_get_model (UnityLauncherLauncher* self);
GType unity_launcher_quicklist_check_menu_item_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistCheckMenuItem* unity_launcher_quicklist_check_menu_item_new (void);
UnityLauncherQuicklistCheckMenuItem* unity_launcher_quicklist_check_menu_item_construct (GType object_type);
UnityLauncherQuicklistCheckMenuItem* unity_launcher_quicklist_check_menu_item_new_with_label (const char* label);
UnityLauncherQuicklistCheckMenuItem* unity_launcher_quicklist_check_menu_item_construct_with_label (GType object_type, const char* label);
extern UnityLauncherQuicklistController* unity_launcher_ql_controller_singleton;
extern gboolean unity_launcher_disable_quicklists;
GType unity_launcher_quicklist_controller_state_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistController* unity_launcher_quicklist_controller_get_current_menu (void);
gboolean unity_launcher_quicklist_controller_is_menu_open (void);
gboolean unity_launcher_quicklist_controller_do_menus_match (UnityLauncherQuicklistController* menu);
CtkMenuExpandable* unity_launcher_quicklist_controller_get_view (UnityLauncherQuicklistController* self);
UnityLauncherQuicklistController* unity_launcher_quicklist_controller_construct (GType object_type);
UnityLauncherScrollerChildController* unity_launcher_quicklist_controller_get_attached_controller (UnityLauncherQuicklistController* self);
UnityLauncherQuicklistControllerState unity_launcher_quicklist_controller_get_state (UnityLauncherQuicklistController* self);
void unity_launcher_quicklist_controller_set_state (UnityLauncherQuicklistController* self, UnityLauncherQuicklistControllerState value);
GType unity_launcher_application_quicklist_controller_get_type (void) G_GNUC_CONST;
UnityLauncherApplicationQuicklistController* unity_launcher_application_quicklist_controller_new (UnityLauncherScrollerChildController* scroller_child);
UnityLauncherApplicationQuicklistController* unity_launcher_application_quicklist_controller_construct (GType object_type, UnityLauncherScrollerChildController* scroller_child);
GType unity_launcher_quicklist_image_menu_item_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistImageMenuItem* unity_launcher_quicklist_image_menu_item_new (void);
UnityLauncherQuicklistImageMenuItem* unity_launcher_quicklist_image_menu_item_construct (GType object_type);
UnityLauncherQuicklistImageMenuItem* unity_launcher_quicklist_image_menu_item_new_with_label (const char* label);
UnityLauncherQuicklistImageMenuItem* unity_launcher_quicklist_image_menu_item_construct_with_label (GType object_type, const char* label);
GType unity_launcher_quicklist_menu_item_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistMenuItem* unity_launcher_quicklist_menu_item_new (void);
UnityLauncherQuicklistMenuItem* unity_launcher_quicklist_menu_item_construct (GType object_type);
UnityLauncherQuicklistMenuItem* unity_launcher_quicklist_menu_item_new_with_label (const char* label);
UnityLauncherQuicklistMenuItem* unity_launcher_quicklist_menu_item_construct_with_label (GType object_type, const char* label);
GType unity_launcher_quicklist_radio_menu_item_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistRadioMenuItem* unity_launcher_quicklist_radio_menu_item_new (GSList* group);
UnityLauncherQuicklistRadioMenuItem* unity_launcher_quicklist_radio_menu_item_construct (GType object_type, GSList* group);
UnityLauncherQuicklistRadioMenuItem* unity_launcher_quicklist_radio_menu_item_new_with_label (GSList* group, const char* label);
UnityLauncherQuicklistRadioMenuItem* unity_launcher_quicklist_radio_menu_item_construct_with_label (GType object_type, GSList* group, const char* label);
GType unity_launcher_quicklist_menu_seperator_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistMenuSeperator* unity_launcher_quicklist_menu_seperator_new (void);
UnityLauncherQuicklistMenuSeperator* unity_launcher_quicklist_menu_seperator_construct (GType object_type);
GType unity_launcher_quicklist_menu_get_type (void) G_GNUC_CONST;
UnityLauncherQuicklistMenu* unity_launcher_quicklist_menu_new (void);
UnityLauncherQuicklistMenu* unity_launcher_quicklist_menu_construct (GType object_type);
UnityLauncherScrollerChildController* unity_launcher_scroller_child_controller_construct (GType object_type, UnityLauncherScrollerChild* child_);
void unity_launcher_scroller_child_controller_closed (UnityLauncherScrollerChildController* self);
void unity_launcher_scroller_child_controller_get_menu_actions (UnityLauncherScrollerChildController* self, UnityLauncherScrollerChildControllermenu_cb callback, void* callback_target);
void unity_launcher_scroller_child_controller_get_menu_navigation (UnityLauncherScrollerChildController* self, UnityLauncherScrollerChildControllermenu_cb callback, void* callback_target);
void unity_launcher_scroller_child_controller_activate (UnityLauncherScrollerChildController* self);
UnityLauncherQuicklistController* unity_launcher_scroller_child_controller_get_menu_controller (UnityLauncherScrollerChildController* self);
gboolean unity_launcher_scroller_child_controller_can_drag (UnityLauncherScrollerChildController* self);
void unity_launcher_scroller_child_controller_load_icon_from_icon_name (UnityLauncherScrollerChildController* self, const char* icon_name);
UnityLauncherScrollerChild* unity_launcher_scroller_child_controller_get_child (UnityLauncherScrollerChildController* self);
const char* unity_launcher_scroller_child_controller_get_name (UnityLauncherScrollerChildController* self);
void unity_launcher_scroller_child_controller_set_name (UnityLauncherScrollerChildController* self, const char* value);
gboolean unity_launcher_scroller_child_controller_get_hide (UnityLauncherScrollerChildController* self);
void unity_launcher_scroller_child_controller_set_hide (UnityLauncherScrollerChildController* self, gboolean value);
UnityLauncherQuicklistController* unity_launcher_scroller_child_controller_get_menu (UnityLauncherScrollerChildController* self);
void unity_launcher_scroller_child_controller_set_menu (UnityLauncherScrollerChildController* self, UnityLauncherQuicklistController* value);
GType unity_launcher_pin_type_get_type (void) G_GNUC_CONST;
GType unity_launcher_scroller_child_group_type_get_type (void) G_GNUC_CONST;
char* unity_launcher_scroller_child_to_string (UnityLauncherScrollerChild* self);
UnityLauncherScrollerChild* unity_launcher_scroller_child_new (void);
UnityLauncherScrollerChild* unity_launcher_scroller_child_construct (GType object_type);
ClutterActor* unity_launcher_scroller_child_get_content (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_force_rotation_jump (UnityLauncherScrollerChild* self, float degrees);
GdkPixbuf* unity_launcher_scroller_child_get_icon (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_icon (UnityLauncherScrollerChild* self, GdkPixbuf* value);
float unity_launcher_scroller_child_get_position (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_position (UnityLauncherScrollerChild* self, float value);
gboolean unity_launcher_scroller_child_get_running (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_running (UnityLauncherScrollerChild* self, gboolean value);
gboolean unity_launcher_scroller_child_get_active (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_active (UnityLauncherScrollerChild* self, gboolean value);
gboolean unity_launcher_scroller_child_get_needs_attention (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_needs_attention (UnityLauncherScrollerChild* self, gboolean value);
gboolean unity_launcher_scroller_child_get_activating (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_activating (UnityLauncherScrollerChild* self, gboolean value);
float unity_launcher_scroller_child_get_rotation (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_rotation (UnityLauncherScrollerChild* self, float value);
gboolean unity_launcher_scroller_child_get_enable_close_state (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_enable_close_state (UnityLauncherScrollerChild* self, gboolean value);
UnityLauncherScrollerChildGroupType unity_launcher_scroller_child_get_group_type (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_group_type (UnityLauncherScrollerChild* self, UnityLauncherScrollerChildGroupType value);
gboolean unity_launcher_scroller_child_get_is_dragging_state (UnityLauncherScrollerChild* self);
void unity_launcher_scroller_child_set_is_dragging_state (UnityLauncherScrollerChild* self, gboolean value);
UnityLauncherScrollerModel* unity_launcher_scroller_model_new (void);
UnityLauncherScrollerModel* unity_launcher_scroller_model_construct (GType object_type);
char* unity_launcher_scroller_model_to_string (UnityLauncherScrollerModel* self);
gpointer unity_launcher_scroller_model_iterator_ref (gpointer instance);
void unity_launcher_scroller_model_iterator_unref (gpointer instance);
GParamSpec* unity_launcher_scroller_model_param_spec_iterator (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_launcher_scroller_model_value_set_iterator (GValue* value, gpointer v_object);
void unity_launcher_scroller_model_value_take_iterator (GValue* value, gpointer v_object);
gpointer unity_launcher_scroller_model_value_get_iterator (const GValue* value);
GType unity_launcher_scroller_model_iterator_get_type (void) G_GNUC_CONST;
UnityLauncherScrollerModelIterator* unity_launcher_scroller_model_iterator (UnityLauncherScrollerModel* self);
gboolean unity_launcher_scroller_model_contains (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child);
void unity_launcher_scroller_model_add (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child);
void unity_launcher_scroller_model_remove (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child);
void unity_launcher_scroller_model_insert (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child, gint i);
void unity_launcher_scroller_model_move (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child, gint i);
gint unity_launcher_scroller_model_index_of (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child);
void unity_launcher_scroller_model_sort (UnityLauncherScrollerModel* self, GCompareFunc compare);
UnityLauncherScrollerChild* unity_launcher_scroller_model_get (UnityLauncherScrollerModel* self, gint i);
void unity_launcher_scroller_model_set (UnityLauncherScrollerModel* self, gint i, UnityLauncherScrollerChild* item);
gint unity_launcher_scroller_model_clamp (UnityLauncherScrollerModel* self, UnityLauncherScrollerChild* child, gint value);
gint unity_launcher_scroller_model_get_size (UnityLauncherScrollerModel* self);
UnityLauncherScrollerModelIterator* unity_launcher_scroller_model_iterator_new (GeeArrayList* arraylist);
UnityLauncherScrollerModelIterator* unity_launcher_scroller_model_iterator_construct (GType object_type, GeeArrayList* arraylist);
gboolean unity_launcher_scroller_model_iterator_next (UnityLauncherScrollerModelIterator* self);
UnityLauncherScrollerChild* unity_launcher_scroller_model_iterator_get (UnityLauncherScrollerModelIterator* self);
GType unity_testing_background_get_type (void) G_GNUC_CONST;
UnityTestingBackground* unity_testing_background_new (void);
UnityTestingBackground* unity_testing_background_construct (GType object_type);
gpointer unity_testing_object_registry_ref (gpointer instance);
void unity_testing_object_registry_unref (gpointer instance);
GParamSpec* unity_testing_param_spec_object_registry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_testing_value_set_object_registry (GValue* value, gpointer v_object);
void unity_testing_value_take_object_registry (GValue* value, gpointer v_object);
gpointer unity_testing_value_get_object_registry (const GValue* value);
GType unity_testing_object_registry_get_type (void) G_GNUC_CONST;
UnityTestingObjectRegistry* unity_testing_object_registry_new (void);
UnityTestingObjectRegistry* unity_testing_object_registry_construct (GType object_type);
UnityTestingObjectRegistry* unity_testing_object_registry_get_default (void);
void unity_testing_object_registry_register (UnityTestingObjectRegistry* self, const char* name, GObject* object);
GeeArrayList* unity_testing_object_registry_lookup (UnityTestingObjectRegistry* self, const char* name);
gpointer unity_process_info_ref (gpointer instance);
void unity_process_info_unref (gpointer instance);
GParamSpec* unity_param_spec_process_info (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_value_set_process_info (GValue* value, gpointer v_object);
void unity_value_take_process_info (GValue* value, gpointer v_object);
gpointer unity_value_get_process_info (const GValue* value);
GType unity_process_info_get_type (void) G_GNUC_CONST;
UnityProcessInfo* unity_process_info_new (const char* name);
UnityProcessInfo* unity_process_info_construct (GType object_type, const char* name);
GType unity_timeline_logger_get_type (void) G_GNUC_CONST;
extern UnityTimelineLogger* unity_timeline_singleton;
extern gboolean unity_is_logging;
UnityTimelineLogger* unity_timeline_logger_get_default (void);
void unity_timeline_logger_start_process (UnityTimelineLogger* self, const char* name);
void unity_timeline_logger_end_process (UnityTimelineLogger* self, const char* name);
void unity_timeline_logger_write_log (UnityTimelineLogger* self, const char* filename);
UnityTimelineLogger* unity_timeline_logger_new (void);
UnityTimelineLogger* unity_timeline_logger_construct (GType object_type);
GType unity_testing_director_get_type (void) G_GNUC_CONST;
UnityTestingDirector* unity_testing_director_new (ClutterStage* stage);
UnityTestingDirector* unity_testing_director_construct (GType object_type, ClutterStage* stage);
void unity_testing_director_do_wait_for_animation (UnityTestingDirector* self, ClutterActor* actor);
void unity_testing_director_do_wait_for_timeout (UnityTestingDirector* self, guint32 msecs);
void unity_testing_director_button_press (UnityTestingDirector* self, ClutterActor* actor, guint32 button, gboolean autorelease, float relative_x, float relative_y, gboolean wait_for_animation);
void unity_testing_director_button_release (UnityTestingDirector* self, ClutterActor* actor, guint32 button, float relative_x, float relative_y);
void unity_testing_director_enter_event (UnityTestingDirector* self, ClutterActor* actor, float relative_x, float relative_y);
void unity_testing_director_leave_event (UnityTestingDirector* self, ClutterActor* actor, float relative_x, float relative_y);
void unity_testing_director_motion_event (UnityTestingDirector* self, ClutterActor* actor, float relative_startx, float relative_starty, float relative_endx, float relative_endy);
ClutterStage* unity_testing_director_get_stage (UnityTestingDirector* self);
gpointer g_test_log_ref (gpointer instance);
void g_test_log_unref (gpointer instance);
GParamSpec* g_test_param_spec_log (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void g_test_value_set_log (GValue* value, gpointer v_object);
void g_test_value_take_log (GValue* value, gpointer v_object);
gpointer g_test_value_get_log (const GValue* value);
GType g_test_log_get_type (void) G_GNUC_CONST;
void g_test_log_set_fatal_handler (GTestLogLogFatalFunc func, void* func_target);
GTestLog* g_test_log_new (void);
GTestLog* g_test_log_construct (GType object_type);
gpointer unity_testing_logging_ref (gpointer instance);
void unity_testing_logging_unref (gpointer instance);
GParamSpec* unity_testing_param_spec_logging (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_testing_value_set_logging (GValue* value, gpointer v_object);
void unity_testing_value_take_logging (GValue* value, gpointer v_object);
gpointer unity_testing_value_get_logging (const GValue* value);
GType unity_testing_logging_get_type (void) G_GNUC_CONST;
UnityTestingLogging* unity_testing_logging_new (void);
UnityTestingLogging* unity_testing_logging_construct (GType object_type);
gboolean unity_testing_logging_fatal_handler (const char* log_domain, GLogLevelFlags flags, const char* message);
void unity_testing_logging_init_fatal_handler (void);
GType unity_testing_window_get_type (void) G_GNUC_CONST;
UnityTestingWindow* unity_testing_window_new (gboolean popup, gint width, gint height);
UnityTestingWindow* unity_testing_window_construct (GType object_type, gboolean popup, gint width, gint height);
void unity_testing_window_init_test_mode (UnityTestingWindow* self);
gboolean unity_testing_window_on_stage_button_press (UnityTestingWindow* self, ClutterEvent* src);
void unity_testing_window_show_window_picker (UnityTestingWindow* self);
gboolean unity_testing_window_get_is_popup (UnityTestingWindow* self);
gint unity_testing_window_get_popup_width (UnityTestingWindow* self);
gint unity_testing_window_get_popup_height (UnityTestingWindow* self);
gpointer unity_testing_workarea_ref (gpointer instance);
void unity_testing_workarea_unref (gpointer instance);
GParamSpec* unity_testing_param_spec_workarea (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_testing_value_set_workarea (GValue* value, gpointer v_object);
void unity_testing_value_take_workarea (GValue* value, gpointer v_object);
gpointer unity_testing_value_get_workarea (const GValue* value);
GType unity_testing_workarea_get_type (void) G_GNUC_CONST;
UnityTestingWorkarea* unity_testing_workarea_new (void);
UnityTestingWorkarea* unity_testing_workarea_construct (GType object_type);
void unity_testing_workarea_update_net_workarea (UnityTestingWorkarea* self);


G_END_DECLS

#endif
