/* unity.h generated by valac 0.9.7, the Vala compiler, do not modify */


#ifndef __UNITY_H__
#define __UNITY_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <clutter/clutter.h>
#include <float.h>
#include <math.h>
#include <clutk/clutk.h>
#include <gdk-pixbuf/gdk-pixdata.h>
#include <cairo.h>
#include <gtk/gtk.h>
#include <gio/gio.h>
#include <gee.h>
#include <dee.h>
#include <dbus/dbus-glib-lowlevel.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS


#define UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP (unity_webapp_chromium_web_app_get_type ())
#define UNITY_WEBAPP_CHROMIUM_WEB_APP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP, UnityWebappChromiumWebApp))
#define UNITY_WEBAPP_CHROMIUM_WEB_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP, UnityWebappChromiumWebAppClass))
#define UNITY_WEBAPP_IS_CHROMIUM_WEB_APP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP))
#define UNITY_WEBAPP_IS_CHROMIUM_WEB_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP))
#define UNITY_WEBAPP_CHROMIUM_WEB_APP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_WEBAPP_TYPE_CHROMIUM_WEB_APP, UnityWebappChromiumWebAppClass))

typedef struct _UnityWebappChromiumWebApp UnityWebappChromiumWebApp;
typedef struct _UnityWebappChromiumWebAppClass UnityWebappChromiumWebAppClass;
typedef struct _UnityWebappChromiumWebAppPrivate UnityWebappChromiumWebAppPrivate;

#define UNITY_DRAG_TYPE_MODEL (unity_drag_model_get_type ())
#define UNITY_DRAG_MODEL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_DRAG_TYPE_MODEL, UnityDragModel))
#define UNITY_DRAG_IS_MODEL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_DRAG_TYPE_MODEL))
#define UNITY_DRAG_MODEL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_DRAG_TYPE_MODEL, UnityDragModelIface))

typedef struct _UnityDragModel UnityDragModel;
typedef struct _UnityDragModelIface UnityDragModelIface;

#define UNITY_DRAG_TYPE_CONTROLLER (unity_drag_controller_get_type ())
#define UNITY_DRAG_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_DRAG_TYPE_CONTROLLER, UnityDragController))
#define UNITY_DRAG_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_DRAG_TYPE_CONTROLLER, UnityDragControllerClass))
#define UNITY_DRAG_IS_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_DRAG_TYPE_CONTROLLER))
#define UNITY_DRAG_IS_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_DRAG_TYPE_CONTROLLER))
#define UNITY_DRAG_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_DRAG_TYPE_CONTROLLER, UnityDragControllerClass))

typedef struct _UnityDragController UnityDragController;
typedef struct _UnityDragControllerClass UnityDragControllerClass;
typedef struct _UnityDragControllerPrivate UnityDragControllerPrivate;

#define UNITY_TYPE_ENTRY (unity_entry_get_type ())
#define UNITY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_ENTRY, UnityEntry))
#define UNITY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_ENTRY, UnityEntryClass))
#define UNITY_IS_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_ENTRY))
#define UNITY_IS_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_ENTRY))
#define UNITY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_ENTRY, UnityEntryClass))

typedef struct _UnityEntry UnityEntry;
typedef struct _UnityEntryClass UnityEntryClass;
typedef struct _UnityEntryPrivate UnityEntryPrivate;

#define UNITY_TYPE_UNITY_ICON (unity_unity_icon_get_type ())
#define UNITY_UNITY_ICON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_UNITY_ICON, UnityUnityIcon))
#define UNITY_UNITY_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_UNITY_ICON, UnityUnityIconClass))
#define UNITY_IS_UNITY_ICON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_UNITY_ICON))
#define UNITY_IS_UNITY_ICON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_UNITY_ICON))
#define UNITY_UNITY_ICON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_UNITY_ICON, UnityUnityIconClass))

typedef struct _UnityUnityIcon UnityUnityIcon;
typedef struct _UnityUnityIconClass UnityUnityIconClass;
typedef struct _UnityUnityIconPrivate UnityUnityIconPrivate;

#define UNITY_WEBAPP_TYPE_PRISM (unity_webapp_prism_get_type ())
#define UNITY_WEBAPP_PRISM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_WEBAPP_TYPE_PRISM, UnityWebappPrism))
#define UNITY_WEBAPP_PRISM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_WEBAPP_TYPE_PRISM, UnityWebappPrismClass))
#define UNITY_WEBAPP_IS_PRISM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_WEBAPP_TYPE_PRISM))
#define UNITY_WEBAPP_IS_PRISM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_WEBAPP_TYPE_PRISM))
#define UNITY_WEBAPP_PRISM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_WEBAPP_TYPE_PRISM, UnityWebappPrismClass))

typedef struct _UnityWebappPrism UnityWebappPrism;
typedef struct _UnityWebappPrismClass UnityWebappPrismClass;
typedef struct _UnityWebappPrismPrivate UnityWebappPrismPrivate;

#define UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR (unity_quicklist_rendering_seperator_get_type ())
#define UNITY_QUICKLIST_RENDERING_SEPERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR, UnityQuicklistRenderingSeperator))
#define UNITY_QUICKLIST_RENDERING_SEPERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR, UnityQuicklistRenderingSeperatorClass))
#define UNITY_QUICKLIST_RENDERING_IS_SEPERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR))
#define UNITY_QUICKLIST_RENDERING_IS_SEPERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR))
#define UNITY_QUICKLIST_RENDERING_SEPERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_QUICKLIST_RENDERING_TYPE_SEPERATOR, UnityQuicklistRenderingSeperatorClass))

typedef struct _UnityQuicklistRenderingSeperator UnityQuicklistRenderingSeperator;
typedef struct _UnityQuicklistRenderingSeperatorClass UnityQuicklistRenderingSeperatorClass;
typedef struct _UnityQuicklistRenderingSeperatorPrivate UnityQuicklistRenderingSeperatorPrivate;

#define UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM (unity_quicklist_rendering_checkmark_item_get_type ())
#define UNITY_QUICKLIST_RENDERING_CHECKMARK_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM, UnityQuicklistRenderingCheckmarkItem))
#define UNITY_QUICKLIST_RENDERING_CHECKMARK_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM, UnityQuicklistRenderingCheckmarkItemClass))
#define UNITY_QUICKLIST_RENDERING_IS_CHECKMARK_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM))
#define UNITY_QUICKLIST_RENDERING_IS_CHECKMARK_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM))
#define UNITY_QUICKLIST_RENDERING_CHECKMARK_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_QUICKLIST_RENDERING_TYPE_CHECKMARK_ITEM, UnityQuicklistRenderingCheckmarkItemClass))

typedef struct _UnityQuicklistRenderingCheckmarkItem UnityQuicklistRenderingCheckmarkItem;
typedef struct _UnityQuicklistRenderingCheckmarkItemClass UnityQuicklistRenderingCheckmarkItemClass;
typedef struct _UnityQuicklistRenderingCheckmarkItemPrivate UnityQuicklistRenderingCheckmarkItemPrivate;

#define UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM (unity_quicklist_rendering_radio_item_get_type ())
#define UNITY_QUICKLIST_RENDERING_RADIO_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM, UnityQuicklistRenderingRadioItem))
#define UNITY_QUICKLIST_RENDERING_RADIO_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM, UnityQuicklistRenderingRadioItemClass))
#define UNITY_QUICKLIST_RENDERING_IS_RADIO_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM))
#define UNITY_QUICKLIST_RENDERING_IS_RADIO_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM))
#define UNITY_QUICKLIST_RENDERING_RADIO_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_QUICKLIST_RENDERING_TYPE_RADIO_ITEM, UnityQuicklistRenderingRadioItemClass))

typedef struct _UnityQuicklistRenderingRadioItem UnityQuicklistRenderingRadioItem;
typedef struct _UnityQuicklistRenderingRadioItemClass UnityQuicklistRenderingRadioItemClass;
typedef struct _UnityQuicklistRenderingRadioItemPrivate UnityQuicklistRenderingRadioItemPrivate;

#define UNITY_QUICKLIST_RENDERING_TYPE_ITEM (unity_quicklist_rendering_item_get_type ())
#define UNITY_QUICKLIST_RENDERING_ITEM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_QUICKLIST_RENDERING_TYPE_ITEM, UnityQuicklistRenderingItem))
#define UNITY_QUICKLIST_RENDERING_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_QUICKLIST_RENDERING_TYPE_ITEM, UnityQuicklistRenderingItemClass))
#define UNITY_QUICKLIST_RENDERING_IS_ITEM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_QUICKLIST_RENDERING_TYPE_ITEM))
#define UNITY_QUICKLIST_RENDERING_IS_ITEM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_QUICKLIST_RENDERING_TYPE_ITEM))
#define UNITY_QUICKLIST_RENDERING_ITEM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_QUICKLIST_RENDERING_TYPE_ITEM, UnityQuicklistRenderingItemClass))

typedef struct _UnityQuicklistRenderingItem UnityQuicklistRenderingItem;
typedef struct _UnityQuicklistRenderingItemClass UnityQuicklistRenderingItemClass;
typedef struct _UnityQuicklistRenderingItemPrivate UnityQuicklistRenderingItemPrivate;

#define UNITY_QUICKLIST_RENDERING_TYPE_MENU (unity_quicklist_rendering_menu_get_type ())
#define UNITY_QUICKLIST_RENDERING_MENU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_QUICKLIST_RENDERING_TYPE_MENU, UnityQuicklistRenderingMenu))
#define UNITY_QUICKLIST_RENDERING_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_QUICKLIST_RENDERING_TYPE_MENU, UnityQuicklistRenderingMenuClass))
#define UNITY_QUICKLIST_RENDERING_IS_MENU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_QUICKLIST_RENDERING_TYPE_MENU))
#define UNITY_QUICKLIST_RENDERING_IS_MENU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_QUICKLIST_RENDERING_TYPE_MENU))
#define UNITY_QUICKLIST_RENDERING_MENU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_QUICKLIST_RENDERING_TYPE_MENU, UnityQuicklistRenderingMenuClass))

typedef struct _UnityQuicklistRenderingMenu UnityQuicklistRenderingMenu;
typedef struct _UnityQuicklistRenderingMenuClass UnityQuicklistRenderingMenuClass;
typedef struct _UnityQuicklistRenderingMenuPrivate UnityQuicklistRenderingMenuPrivate;

#define UNITY_TYPE_SHELL_MODE (unity_shell_mode_get_type ())

#define UNITY_TYPE_DND_TARGETS (unity_dnd_targets_get_type ())

#define UNITY_TYPE_WINDOW_ACTION (unity_window_action_get_type ())

#define UNITY_TYPE_SHELL (unity_shell_get_type ())
#define UNITY_SHELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_SHELL, UnityShell))
#define UNITY_IS_SHELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_SHELL))
#define UNITY_SHELL_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_TYPE_SHELL, UnityShellIface))

typedef struct _UnityShell UnityShell;
typedef struct _UnityShellIface UnityShellIface;

#define UNITY_TYPE_THEME_FILE_PATH (unity_theme_file_path_get_type ())
#define UNITY_THEME_FILE_PATH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_THEME_FILE_PATH, UnityThemeFilePath))
#define UNITY_THEME_FILE_PATH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_THEME_FILE_PATH, UnityThemeFilePathClass))
#define UNITY_IS_THEME_FILE_PATH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_THEME_FILE_PATH))
#define UNITY_IS_THEME_FILE_PATH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_THEME_FILE_PATH))
#define UNITY_THEME_FILE_PATH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_THEME_FILE_PATH, UnityThemeFilePathClass))

typedef struct _UnityThemeFilePath UnityThemeFilePath;
typedef struct _UnityThemeFilePathClass UnityThemeFilePathClass;
typedef struct _UnityThemeFilePathPrivate UnityThemeFilePathPrivate;

#define UNITY_TYPE_THEME_IMAGE (unity_theme_image_get_type ())
#define UNITY_THEME_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_THEME_IMAGE, UnityThemeImage))
#define UNITY_THEME_IMAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_THEME_IMAGE, UnityThemeImageClass))
#define UNITY_IS_THEME_IMAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_THEME_IMAGE))
#define UNITY_IS_THEME_IMAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_THEME_IMAGE))
#define UNITY_THEME_IMAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_THEME_IMAGE, UnityThemeImageClass))

typedef struct _UnityThemeImage UnityThemeImage;
typedef struct _UnityThemeImageClass UnityThemeImageClass;
typedef struct _UnityThemeImagePrivate UnityThemeImagePrivate;

#define UNITY_TYPE_APP_INFO_MANAGER (unity_app_info_manager_get_type ())
#define UNITY_APP_INFO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManager))
#define UNITY_APP_INFO_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManagerClass))
#define UNITY_IS_APP_INFO_MANAGER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_APP_INFO_MANAGER))
#define UNITY_IS_APP_INFO_MANAGER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_APP_INFO_MANAGER))
#define UNITY_APP_INFO_MANAGER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_APP_INFO_MANAGER, UnityAppInfoManagerClass))

typedef struct _UnityAppInfoManager UnityAppInfoManager;
typedef struct _UnityAppInfoManagerClass UnityAppInfoManagerClass;
typedef struct _UnityAppInfoManagerPrivate UnityAppInfoManagerPrivate;

#define UNITY_TYPE_CAIRO_CANVAS (unity_cairo_canvas_get_type ())
#define UNITY_CAIRO_CANVAS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_CAIRO_CANVAS, UnityCairoCanvas))
#define UNITY_CAIRO_CANVAS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_CAIRO_CANVAS, UnityCairoCanvasClass))
#define UNITY_IS_CAIRO_CANVAS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_CAIRO_CANVAS))
#define UNITY_IS_CAIRO_CANVAS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_CAIRO_CANVAS))
#define UNITY_CAIRO_CANVAS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_CAIRO_CANVAS, UnityCairoCanvasClass))

typedef struct _UnityCairoCanvas UnityCairoCanvas;
typedef struct _UnityCairoCanvasClass UnityCairoCanvasClass;
typedef struct _UnityCairoCanvasPrivate UnityCairoCanvasPrivate;

#define UNITY_TYPE_EXPANDING_BIN_STATE (unity_expanding_bin_state_get_type ())

#define UNITY_TYPE_EXPANDING_BIN (unity_expanding_bin_get_type ())
#define UNITY_EXPANDING_BIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_EXPANDING_BIN, UnityExpandingBin))
#define UNITY_EXPANDING_BIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_EXPANDING_BIN, UnityExpandingBinClass))
#define UNITY_IS_EXPANDING_BIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_EXPANDING_BIN))
#define UNITY_IS_EXPANDING_BIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_EXPANDING_BIN))
#define UNITY_EXPANDING_BIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_EXPANDING_BIN, UnityExpandingBinClass))

typedef struct _UnityExpandingBin UnityExpandingBin;
typedef struct _UnityExpandingBinClass UnityExpandingBinClass;
typedef struct _UnityExpandingBinPrivate UnityExpandingBinPrivate;

#define UNITY_TYPE_FAVORITES (unity_favorites_get_type ())
#define UNITY_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_FAVORITES, UnityFavorites))
#define UNITY_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_FAVORITES, UnityFavoritesClass))
#define UNITY_IS_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_FAVORITES))
#define UNITY_IS_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_FAVORITES))
#define UNITY_FAVORITES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_FAVORITES, UnityFavoritesClass))

typedef struct _UnityFavorites UnityFavorites;
typedef struct _UnityFavoritesClass UnityFavoritesClass;
typedef struct _UnityFavoritesPrivate UnityFavoritesPrivate;

#define UNITY_TYPE_GCONF_FAVORITES (unity_gconf_favorites_get_type ())
#define UNITY_GCONF_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_GCONF_FAVORITES, UnityGConfFavorites))
#define UNITY_GCONF_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_GCONF_FAVORITES, UnityGConfFavoritesClass))
#define UNITY_IS_GCONF_FAVORITES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_GCONF_FAVORITES))
#define UNITY_IS_GCONF_FAVORITES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_GCONF_FAVORITES))
#define UNITY_GCONF_FAVORITES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_GCONF_FAVORITES, UnityGConfFavoritesClass))

typedef struct _UnityGConfFavorites UnityGConfFavorites;
typedef struct _UnityGConfFavoritesClass UnityGConfFavoritesClass;
typedef struct _UnityGConfFavoritesPrivate UnityGConfFavoritesPrivate;

#define UNITY_TYPE_LAYERED_BIN (unity_layered_bin_get_type ())
#define UNITY_LAYERED_BIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_LAYERED_BIN, UnityLayeredBin))
#define UNITY_LAYERED_BIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_LAYERED_BIN, UnityLayeredBinClass))
#define UNITY_IS_LAYERED_BIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_LAYERED_BIN))
#define UNITY_IS_LAYERED_BIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_LAYERED_BIN))
#define UNITY_LAYERED_BIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_LAYERED_BIN, UnityLayeredBinClass))

typedef struct _UnityLayeredBin UnityLayeredBin;
typedef struct _UnityLayeredBinClass UnityLayeredBinClass;
typedef struct _UnityLayeredBinPrivate UnityLayeredBinPrivate;

#define UNITY_TYPE_PIXBUF_CACHE (unity_pixbuf_cache_get_type ())
#define UNITY_PIXBUF_CACHE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_PIXBUF_CACHE, UnityPixbufCache))
#define UNITY_PIXBUF_CACHE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_PIXBUF_CACHE, UnityPixbufCacheClass))
#define UNITY_IS_PIXBUF_CACHE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_PIXBUF_CACHE))
#define UNITY_IS_PIXBUF_CACHE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_PIXBUF_CACHE))
#define UNITY_PIXBUF_CACHE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_PIXBUF_CACHE, UnityPixbufCacheClass))

typedef struct _UnityPixbufCache UnityPixbufCache;
typedef struct _UnityPixbufCacheClass UnityPixbufCacheClass;
typedef struct _UnityPixbufCachePrivate UnityPixbufCachePrivate;

#define UNITY_PLACE_TYPE_RENDERER_INFO (unity_place_renderer_info_get_type ())
#define UNITY_PLACE_RENDERER_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_RENDERER_INFO, UnityPlaceRendererInfo))
#define UNITY_PLACE_RENDERER_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_RENDERER_INFO, UnityPlaceRendererInfoClass))
#define UNITY_PLACE_IS_RENDERER_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_RENDERER_INFO))
#define UNITY_PLACE_IS_RENDERER_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_RENDERER_INFO))
#define UNITY_PLACE_RENDERER_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_RENDERER_INFO, UnityPlaceRendererInfoClass))

typedef struct _UnityPlaceRendererInfo UnityPlaceRendererInfo;
typedef struct _UnityPlaceRendererInfoClass UnityPlaceRendererInfoClass;
typedef struct _UnityPlaceRendererInfoPrivate UnityPlaceRendererInfoPrivate;

#define UNITY_PLACE_TYPE_SEARCH (unity_place_search_get_type ())
#define UNITY_PLACE_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_SEARCH, UnityPlaceSearch))
#define UNITY_PLACE_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_SEARCH, UnityPlaceSearchClass))
#define UNITY_PLACE_IS_SEARCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_SEARCH))
#define UNITY_PLACE_IS_SEARCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_SEARCH))
#define UNITY_PLACE_SEARCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_SEARCH, UnityPlaceSearchClass))

typedef struct _UnityPlaceSearch UnityPlaceSearch;
typedef struct _UnityPlaceSearchClass UnityPlaceSearchClass;
typedef struct _UnityPlaceSearchPrivate UnityPlaceSearchPrivate;

#define UNITY_PLACE_TYPE_ENTRY_INFO (unity_place_entry_info_get_type ())
#define UNITY_PLACE_ENTRY_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_ENTRY_INFO, UnityPlaceEntryInfo))
#define UNITY_PLACE_ENTRY_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_ENTRY_INFO, UnityPlaceEntryInfoClass))
#define UNITY_PLACE_IS_ENTRY_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_ENTRY_INFO))
#define UNITY_PLACE_IS_ENTRY_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_ENTRY_INFO))
#define UNITY_PLACE_ENTRY_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_ENTRY_INFO, UnityPlaceEntryInfoClass))

typedef struct _UnityPlaceEntryInfo UnityPlaceEntryInfo;
typedef struct _UnityPlaceEntryInfoClass UnityPlaceEntryInfoClass;
typedef struct _UnityPlaceEntryInfoPrivate UnityPlaceEntryInfoPrivate;

#define UNITY_PLACE_TYPE_BROWSER (unity_place_browser_get_type ())
#define UNITY_PLACE_BROWSER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_BROWSER, UnityPlaceBrowser))
#define UNITY_PLACE_BROWSER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_BROWSER, UnityPlaceBrowserClass))
#define UNITY_PLACE_IS_BROWSER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_BROWSER))
#define UNITY_PLACE_IS_BROWSER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_BROWSER))
#define UNITY_PLACE_BROWSER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_BROWSER, UnityPlaceBrowserClass))

typedef struct _UnityPlaceBrowser UnityPlaceBrowser;
typedef struct _UnityPlaceBrowserClass UnityPlaceBrowserClass;

#define UNITY_PLACE_TYPE_CONTROLLER (unity_place_controller_get_type ())
#define UNITY_PLACE_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_CONTROLLER, UnityPlaceController))
#define UNITY_PLACE_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_CONTROLLER, UnityPlaceControllerClass))
#define UNITY_PLACE_IS_CONTROLLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_CONTROLLER))
#define UNITY_PLACE_IS_CONTROLLER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_CONTROLLER))
#define UNITY_PLACE_CONTROLLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_CONTROLLER, UnityPlaceControllerClass))

typedef struct _UnityPlaceController UnityPlaceController;
typedef struct _UnityPlaceControllerClass UnityPlaceControllerClass;
typedef struct _UnityPlaceControllerPrivate UnityPlaceControllerPrivate;

#define UNITY_PLACE_TYPE_ACTIVATION (unity_place_activation_get_type ())
#define UNITY_PLACE_ACTIVATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_ACTIVATION, UnityPlaceActivation))
#define UNITY_PLACE_IS_ACTIVATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_ACTIVATION))
#define UNITY_PLACE_ACTIVATION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_PLACE_TYPE_ACTIVATION, UnityPlaceActivationIface))

typedef struct _UnityPlaceActivation UnityPlaceActivation;
typedef struct _UnityPlaceActivationIface UnityPlaceActivationIface;

#define UNITY_PLACE_TYPE_ACTIVATION_STATUS (unity_place_activation_status_get_type ())
typedef struct _UnityPlaceBrowserPrivate UnityPlaceBrowserPrivate;

#define UNITY_PLACE_TYPE_STACK (unity_place_stack_get_type ())
#define UNITY_PLACE_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_STACK, UnityPlaceStack))
#define UNITY_PLACE_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_PLACE_TYPE_STACK, UnityPlaceStackClass))
#define UNITY_PLACE_IS_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_STACK))
#define UNITY_PLACE_IS_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_PLACE_TYPE_STACK))
#define UNITY_PLACE_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_PLACE_TYPE_STACK, UnityPlaceStackClass))

typedef struct _UnityPlaceStack UnityPlaceStack;
typedef struct _UnityPlaceStackClass UnityPlaceStackClass;
typedef struct _UnityPlaceStackPrivate UnityPlaceStackPrivate;

#define UNITY_PLACE_TYPE_RENDERER (unity_place_renderer_get_type ())
#define UNITY_PLACE_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_PLACE_TYPE_RENDERER, UnityPlaceRenderer))
#define UNITY_PLACE_IS_RENDERER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_PLACE_TYPE_RENDERER))
#define UNITY_PLACE_RENDERER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), UNITY_PLACE_TYPE_RENDERER, UnityPlaceRendererIface))

typedef struct _UnityPlaceRenderer UnityPlaceRenderer;
typedef struct _UnityPlaceRendererIface UnityPlaceRendererIface;

#define UNITY_TYPE_STRIPE_TEXTURE (unity_stripe_texture_get_type ())
#define UNITY_STRIPE_TEXTURE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_TYPE_STRIPE_TEXTURE, UnityStripeTexture))
#define UNITY_STRIPE_TEXTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_TYPE_STRIPE_TEXTURE, UnityStripeTextureClass))
#define UNITY_IS_STRIPE_TEXTURE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_TYPE_STRIPE_TEXTURE))
#define UNITY_IS_STRIPE_TEXTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_TYPE_STRIPE_TEXTURE))
#define UNITY_STRIPE_TEXTURE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_TYPE_STRIPE_TEXTURE, UnityStripeTextureClass))

typedef struct _UnityStripeTexture UnityStripeTexture;
typedef struct _UnityStripeTextureClass UnityStripeTextureClass;
typedef struct _UnityStripeTexturePrivate UnityStripeTexturePrivate;

#define UNITY_WEBAPP_TYPE_FETCH_FILE (unity_webapp_fetch_file_get_type ())
#define UNITY_WEBAPP_FETCH_FILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_WEBAPP_TYPE_FETCH_FILE, UnityWebappFetchFile))
#define UNITY_WEBAPP_FETCH_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_WEBAPP_TYPE_FETCH_FILE, UnityWebappFetchFileClass))
#define UNITY_WEBAPP_IS_FETCH_FILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_WEBAPP_TYPE_FETCH_FILE))
#define UNITY_WEBAPP_IS_FETCH_FILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_WEBAPP_TYPE_FETCH_FILE))
#define UNITY_WEBAPP_FETCH_FILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_WEBAPP_TYPE_FETCH_FILE, UnityWebappFetchFileClass))

typedef struct _UnityWebappFetchFile UnityWebappFetchFile;
typedef struct _UnityWebappFetchFileClass UnityWebappFetchFileClass;
typedef struct _UnityWebappFetchFilePrivate UnityWebappFetchFilePrivate;

#define UNITY_WEBAPP_TYPE_WEBICON_FETCHER (unity_webapp_webicon_fetcher_get_type ())
#define UNITY_WEBAPP_WEBICON_FETCHER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), UNITY_WEBAPP_TYPE_WEBICON_FETCHER, UnityWebappWebiconFetcher))
#define UNITY_WEBAPP_WEBICON_FETCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), UNITY_WEBAPP_TYPE_WEBICON_FETCHER, UnityWebappWebiconFetcherClass))
#define UNITY_WEBAPP_IS_WEBICON_FETCHER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), UNITY_WEBAPP_TYPE_WEBICON_FETCHER))
#define UNITY_WEBAPP_IS_WEBICON_FETCHER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), UNITY_WEBAPP_TYPE_WEBICON_FETCHER))
#define UNITY_WEBAPP_WEBICON_FETCHER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), UNITY_WEBAPP_TYPE_WEBICON_FETCHER, UnityWebappWebiconFetcherClass))

typedef struct _UnityWebappWebiconFetcher UnityWebappWebiconFetcher;
typedef struct _UnityWebappWebiconFetcherClass UnityWebappWebiconFetcherClass;
typedef struct _UnityWebappWebiconFetcherPrivate UnityWebappWebiconFetcherPrivate;

struct _UnityWebappChromiumWebApp {
	GObject parent_instance;
	UnityWebappChromiumWebAppPrivate * priv;
	char* name;
	char* id;
};

struct _UnityWebappChromiumWebAppClass {
	GObjectClass parent_class;
};

struct _UnityDragModelIface {
	GTypeInterface parent_iface;
	ClutterActor* (*get_icon) (UnityDragModel* self);
	char* (*get_drag_data) (UnityDragModel* self);
};

struct _UnityDragController {
	GObject parent_instance;
	UnityDragControllerPrivate * priv;
};

struct _UnityDragControllerClass {
	GObjectClass parent_class;
};

struct _UnityEntry {
	CtkText parent_instance;
	UnityEntryPrivate * priv;
};

struct _UnityEntryClass {
	CtkTextClass parent_class;
};

struct _UnityUnityIcon {
	CtkActor parent_instance;
	UnityUnityIconPrivate * priv;
	float stored_height;
	float stored_ymod;
};

struct _UnityUnityIconClass {
	CtkActorClass parent_class;
};

struct _UnityWebappPrism {
	GObject parent_instance;
	UnityWebappPrismPrivate * priv;
	char* name;
	char* id;
};

struct _UnityWebappPrismClass {
	GObjectClass parent_class;
};

struct _UnityQuicklistRenderingSeperator {
	GObject parent_instance;
	UnityQuicklistRenderingSeperatorPrivate * priv;
};

struct _UnityQuicklistRenderingSeperatorClass {
	GObjectClass parent_class;
};

struct _UnityQuicklistRenderingCheckmarkItem {
	GObject parent_instance;
	UnityQuicklistRenderingCheckmarkItemPrivate * priv;
};

struct _UnityQuicklistRenderingCheckmarkItemClass {
	GObjectClass parent_class;
};

struct _UnityQuicklistRenderingRadioItem {
	GObject parent_instance;
	UnityQuicklistRenderingRadioItemPrivate * priv;
};

struct _UnityQuicklistRenderingRadioItemClass {
	GObjectClass parent_class;
};

struct _UnityQuicklistRenderingItem {
	GObject parent_instance;
	UnityQuicklistRenderingItemPrivate * priv;
};

struct _UnityQuicklistRenderingItemClass {
	GObjectClass parent_class;
};

struct _UnityQuicklistRenderingMenu {
	GObject parent_instance;
	UnityQuicklistRenderingMenuPrivate * priv;
};

struct _UnityQuicklistRenderingMenuClass {
	GObjectClass parent_class;
};

typedef enum  {
	UNITY_SHELL_MODE_MINIMIZED,
	UNITY_SHELL_MODE_DASH,
	UNITY_SHELL_MODE_EXPOSE
} UnityShellMode;

typedef enum  {
	UNITY_DND_TARGETS_TARGET_INT32,
	UNITY_DND_TARGETS_TARGET_STRING,
	UNITY_DND_TARGETS_TARGET_URL,
	UNITY_DND_TARGETS_TARGET_OTHER
} Unitydnd_targets;

typedef enum  {
	UNITY_WINDOW_ACTION_CLOSE,
	UNITY_WINDOW_ACTION_MINIMIZE,
	UNITY_WINDOW_ACTION_MAXIMIZE,
	UNITY_WINDOW_ACTION_UNMAXIMIZE
} UnityWindowAction;

struct _UnityShellIface {
	GTypeInterface parent_iface;
	guint32 (*get_current_time) (UnityShell* self);
	UnityShellMode (*get_mode) (UnityShell* self);
	ClutterStage* (*get_stage) (UnityShell* self);
	void (*show_unity) (UnityShell* self);
	void (*hide_unity) (UnityShell* self);
	gint (*get_indicators_width) (UnityShell* self);
	gint (*get_launcher_width_foobar) (UnityShell* self);
	gint (*get_panel_height_foobar) (UnityShell* self);
	void (*ensure_input_region) (UnityShell* self);
	void (*add_fullscreen_request) (UnityShell* self, GObject* o);
	gboolean (*remove_fullscreen_request) (UnityShell* self, GObject* o);
	void (*grab_keyboard) (UnityShell* self, gboolean grab, guint32 timestamp);
	void (*about_to_show_places) (UnityShell* self);
	void (*close_xids) (UnityShell* self, GArray* xids);
	void (*show_window) (UnityShell* self, guint32 xid);
	void (*expose_xids) (UnityShell* self, GArray* xids);
	void (*stop_expose) (UnityShell* self);
	void (*get_window_details) (UnityShell* self, guint32 xid, gboolean* allows_resize, gboolean* is_maximised);
	void (*do_window_action) (UnityShell* self, guint32 xid, UnityWindowAction action);
	gboolean (*get_menus_swallow_events) (UnityShell* self);
	gboolean (*get_super_key_active) (UnityShell* self);
	void (*set_super_key_active) (UnityShell* self, gboolean value);
	gboolean (*get_is_starting) (UnityShell* self);
	void (*set_is_starting) (UnityShell* self, gboolean value);
};

struct _UnityThemeFilePath {
	GObject parent_instance;
	UnityThemeFilePathPrivate * priv;
};

struct _UnityThemeFilePathClass {
	GObjectClass parent_class;
};

struct _UnityThemeImage {
	ClutterTexture parent_instance;
	UnityThemeImagePrivate * priv;
	GdkPixbuf* icon;
};

struct _UnityThemeImageClass {
	ClutterTextureClass parent_class;
};

struct _UnityAppInfoManager {
	GObject parent_instance;
	UnityAppInfoManagerPrivate * priv;
};

struct _UnityAppInfoManagerClass {
	GObjectClass parent_class;
};

typedef void (*UnityCairoCanvasCairoCanvasPaint) (cairo_t* cr, gint width, gint height, void* user_data);
struct _UnityCairoCanvas {
	CtkBin parent_instance;
	UnityCairoCanvasPrivate * priv;
	ClutterCairoTexture* texture;
	UnityCairoCanvasCairoCanvasPaint paint_func;
	gpointer paint_func_target;
	GDestroyNotify paint_func_target_destroy_notify;
};

struct _UnityCairoCanvasClass {
	CtkBinClass parent_class;
};

typedef enum  {
	UNITY_EXPANDING_BIN_STATE_CLOSED,
	UNITY_EXPANDING_BIN_STATE_UNEXPANDED,
	UNITY_EXPANDING_BIN_STATE_EXPANDED
} UnityExpandingBinState;

struct _UnityExpandingBin {
	CtkBin parent_instance;
	UnityExpandingBinPrivate * priv;
};

struct _UnityExpandingBinClass {
	CtkBinClass parent_class;
};

struct _UnityFavorites {
	GObject parent_instance;
	UnityFavoritesPrivate * priv;
};

struct _UnityFavoritesClass {
	GObjectClass parent_class;
	GeeArrayList* (*get_favorites) (UnityFavorites* self);
	void (*add_favorite) (UnityFavorites* self, const char* uid);
	void (*remove_favorite) (UnityFavorites* self, const char* uid);
	gboolean (*is_favorite) (UnityFavorites* self, const char* uid);
	char* (*find_uid_for_desktop_file) (UnityFavorites* self, const char* desktop_file);
	char* (*get_string) (UnityFavorites* self, const char* uid, const char* name);
	void (*set_string) (UnityFavorites* self, const char* uid, const char* name, const char* value);
	gint* (*get_int) (UnityFavorites* self, const char* uid, const char* name);
	void (*set_int) (UnityFavorites* self, const char* uid, const char* name, gint value);
	float* (*get_float) (UnityFavorites* self, const char* uid, const char* name);
	void (*set_float) (UnityFavorites* self, const char* uid, const char* name, float value);
	gboolean* (*get_bool) (UnityFavorites* self, const char* uid, const char* name);
	void (*set_bool) (UnityFavorites* self, const char* uid, const char* name, gboolean value);
};

struct _UnityGConfFavorites {
	UnityFavorites parent_instance;
	UnityGConfFavoritesPrivate * priv;
};

struct _UnityGConfFavoritesClass {
	UnityFavoritesClass parent_class;
};

struct _UnityLayeredBin {
	CtkActor parent_instance;
	UnityLayeredBinPrivate * priv;
};

struct _UnityLayeredBinClass {
	CtkActorClass parent_class;
};

struct _UnityPixbufCache {
	GObject parent_instance;
	UnityPixbufCachePrivate * priv;
};

struct _UnityPixbufCacheClass {
	GObjectClass parent_class;
};

struct _UnityPlaceRendererInfo {
	GObject parent_instance;
	UnityPlaceRendererInfoPrivate * priv;
};

struct _UnityPlaceRendererInfoClass {
	GObjectClass parent_class;
};

struct _UnityPlaceSearch {
	GInitiallyUnowned parent_instance;
	UnityPlaceSearchPrivate * priv;
};

struct _UnityPlaceSearchClass {
	GInitiallyUnownedClass parent_class;
};

struct _UnityPlaceEntryInfo {
	GObject parent_instance;
	UnityPlaceEntryInfoPrivate * priv;
};

struct _UnityPlaceEntryInfoClass {
	GObjectClass parent_class;
};

struct _UnityPlaceController {
	GObject parent_instance;
	UnityPlaceControllerPrivate * priv;
};

struct _UnityPlaceControllerClass {
	GObjectClass parent_class;
};

struct _UnityPlaceActivationIface {
	GTypeInterface parent_iface;
	void (*activate) (UnityPlaceActivation* self, const char* uri, GAsyncReadyCallback _callback_, gpointer _user_data_);
	guint32 (*activate_finish) (UnityPlaceActivation* self, GAsyncResult* _res_, GError** error);
};

typedef enum  {
	UNITY_PLACE_ACTIVATION_STATUS_NOT_ACTIVATED,
	UNITY_PLACE_ACTIVATION_STATUS_ACTIVATED_SHOW_DASH,
	UNITY_PLACE_ACTIVATION_STATUS_ACTIVATED_HIDE_DASH
} UnityPlaceActivationStatus;

struct _UnityPlaceBrowser {
	GObject parent_instance;
	UnityPlaceBrowserPrivate * priv;
};

struct _UnityPlaceBrowserClass {
	GObjectClass parent_class;
};

struct _UnityPlaceStack {
	GTypeInstance parent_instance;
	volatile int ref_count;
	UnityPlaceStackPrivate * priv;
};

struct _UnityPlaceStackClass {
	GTypeClass parent_class;
	void (*finalize) (UnityPlaceStack *self);
};

struct _UnityPlaceRendererIface {
	GTypeInterface parent_iface;
	void (*set_models) (UnityPlaceRenderer* self, DeeModel* groups, DeeModel* results, GeeHashMap* hints);
};

typedef void (*UnityStripeTextureStripeTextureOutlineFunc) (cairo_t* cr, gint width, gint height, void* user_data);
struct _UnityStripeTexture {
	UnityCairoCanvas parent_instance;
	UnityStripeTexturePrivate * priv;
	UnityStripeTextureStripeTextureOutlineFunc outline_paint_func;
	gpointer outline_paint_func_target;
	GDestroyNotify outline_paint_func_target_destroy_notify;
};

struct _UnityStripeTextureClass {
	UnityCairoCanvasClass parent_class;
};

struct _UnityWebappFetchFile {
	GObject parent_instance;
	UnityWebappFetchFilePrivate * priv;
};

struct _UnityWebappFetchFileClass {
	GObjectClass parent_class;
};

struct _UnityWebappWebiconFetcher {
	GObject parent_instance;
	UnityWebappWebiconFetcherPrivate * priv;
};

struct _UnityWebappWebiconFetcherClass {
	GObjectClass parent_class;
};


GType unity_webapp_chromium_web_app_get_type (void) G_GNUC_CONST;
UnityWebappChromiumWebApp* unity_webapp_chromium_web_app_new (const char* address, const char* icon);
UnityWebappChromiumWebApp* unity_webapp_chromium_web_app_construct (GType object_type, const char* address, const char* icon);
char* unity_webapp_chromium_web_app_desktop_file_path (UnityWebappChromiumWebApp* self);
void unity_webapp_chromium_web_app_add_to_favorites (UnityWebappChromiumWebApp* self);
const char* unity_webapp_chromium_web_app_get_url (UnityWebappChromiumWebApp* self);
const char* unity_webapp_chromium_web_app_get_icon (UnityWebappChromiumWebApp* self);
GType unity_drag_model_get_type (void) G_GNUC_CONST;
ClutterActor* unity_drag_model_get_icon (UnityDragModel* self);
char* unity_drag_model_get_drag_data (UnityDragModel* self);
GType unity_drag_controller_get_type (void) G_GNUC_CONST;
extern UnityDragController* unity_drag_controller_singleton;
UnityDragController* unity_drag_controller_get_default (void);
void unity_drag_controller_start_drag (UnityDragController* self, UnityDragModel* model, float offset_x, float offset_y);
UnityDragModel* unity_drag_controller_get_drag_model (UnityDragController* self);
UnityDragController* unity_drag_controller_new (void);
UnityDragController* unity_drag_controller_construct (GType object_type);
gboolean unity_drag_controller_get_is_dragging (UnityDragController* self);
GType unity_entry_get_type (void) G_GNUC_CONST;
UnityEntry* unity_entry_new (const char* static_text);
UnityEntry* unity_entry_construct (GType object_type, const char* static_text);
const char* unity_entry_get_static_text (UnityEntry* self);
void unity_entry_set_static_text (UnityEntry* self, const char* value);
void unity_rgb_to_hsv (float r, float g, float b, float* hue, float* sat, float* val);
void unity_hsv_to_rgb (float hue, float sat, float val, float* r, float* g, float* b);
gboolean unity_pixbuf_is_tile (GdkPixbuf* source);
void unity_get_average_color (GdkPixbuf* source, guint* red, guint* green, guint* blue);
GType unity_unity_icon_get_type (void) G_GNUC_CONST;
UnityUnityIcon* unity_unity_icon_new (ClutterTexture* icon, ClutterTexture* bg_tex);
UnityUnityIcon* unity_unity_icon_construct (GType object_type, ClutterTexture* icon, ClutterTexture* bg_tex);
void unity_unity_icon_paint_real (ClutterActor* actor);
ClutterTexture* unity_unity_icon_get_icon (UnityUnityIcon* self);
ClutterTexture* unity_unity_icon_get_bg_color (UnityUnityIcon* self);
float unity_unity_icon_get_rotation (UnityUnityIcon* self);
void unity_unity_icon_set_rotation (UnityUnityIcon* self, float value);
GType unity_webapp_prism_get_type (void) G_GNUC_CONST;
UnityWebappPrism* unity_webapp_prism_new (const char* address, const char* icon);
UnityWebappPrism* unity_webapp_prism_construct (GType object_type, const char* address, const char* icon);
char* unity_webapp_prism_desktop_file_path (UnityWebappPrism* self);
void unity_webapp_prism_add_to_favorites (UnityWebappPrism* self);
const char* unity_webapp_prism_get_url (UnityWebappPrism* self);
const char* unity_webapp_prism_get_icon (UnityWebappPrism* self);
void unity_quicklist_rendering_get_text_extents (const char* font, const char* text, gint* width, gint* height);
GType unity_quicklist_rendering_seperator_get_type (void) G_GNUC_CONST;
void unity_quicklist_rendering_seperator_fill_mask (cairo_t* cr);
void unity_quicklist_rendering_seperator_image_background (cairo_t* cr, gint w, gint h);
UnityQuicklistRenderingSeperator* unity_quicklist_rendering_seperator_new (void);
UnityQuicklistRenderingSeperator* unity_quicklist_rendering_seperator_construct (GType object_type);
GType unity_quicklist_rendering_checkmark_item_get_type (void) G_GNUC_CONST;
void unity_quicklist_rendering_checkmark_item_normal_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text, gboolean enabled);
void unity_quicklist_rendering_checkmark_item_selected_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text, gboolean enabled);
UnityQuicklistRenderingCheckmarkItem* unity_quicklist_rendering_checkmark_item_new (void);
UnityQuicklistRenderingCheckmarkItem* unity_quicklist_rendering_checkmark_item_construct (GType object_type);
GType unity_quicklist_rendering_radio_item_get_type (void) G_GNUC_CONST;
void unity_quicklist_rendering_radio_item_normal_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text, gboolean enabled);
void unity_quicklist_rendering_radio_item_selected_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text, gboolean enabled);
UnityQuicklistRenderingRadioItem* unity_quicklist_rendering_radio_item_new (void);
UnityQuicklistRenderingRadioItem* unity_quicklist_rendering_radio_item_construct (GType object_type);
GType unity_quicklist_rendering_item_get_type (void) G_GNUC_CONST;
void unity_quicklist_rendering_item_normal_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text);
void unity_quicklist_rendering_item_selected_mask (cairo_t* cr, gint w, gint h, const char* font, const char* text);
UnityQuicklistRenderingItem* unity_quicklist_rendering_item_new (void);
UnityQuicklistRenderingItem* unity_quicklist_rendering_item_construct (GType object_type);
GType unity_quicklist_rendering_menu_get_type (void) G_GNUC_CONST;
void unity_quicklist_rendering_menu_outline_shadow_top (cairo_surface_t** surf, gint width, gint height, float anchor_width, float corner_radius, guint shadow_radius, float* rgba_shadow, int rgba_shadow_length1, float line_width, float* rgba_line, int rgba_line_length1);
void unity_quicklist_rendering_menu_outline_shadow_dyn (cairo_surface_t** surf, gint width, gint height, float anchor_width, guint shadow_radius, float* rgba_shadow, int rgba_shadow_length1, float line_width, float* rgba_line, int rgba_line_length1);
void unity_quicklist_rendering_menu_outline_shadow_anchor (cairo_surface_t** surf, gint width, gint height, float anchor_width, float anchor_height, guint shadow_radius, float* rgba_shadow, int rgba_shadow_length1, float line_width, float* rgba_line, int rgba_line_length1);
void unity_quicklist_rendering_menu_outline_shadow_bottom (cairo_surface_t** surf, gint width, gint height, float anchor_width, float corner_radius, guint shadow_radius, float* rgba_shadow, int rgba_shadow_length1, float line_width, float* rgba_line, int rgba_line_length1);
void unity_quicklist_rendering_menu_tint_dot_hl (cairo_surface_t** surf, gint width, gint height, float hl_x, float hl_y, float hl_size, float* rgba_tint, int rgba_tint_length1, float* rgba_hl, int rgba_hl_length1);
void unity_quicklist_rendering_menu_top_mask (cairo_surface_t** surf, gint width, gint height, float radius, float anchor_width, gboolean negative, gboolean outline, float line_width, float* rgba, int rgba_length1);
void unity_quicklist_rendering_menu_dyn_mask (cairo_surface_t** surf, gint width, gint height, float anchor_width, gboolean negative, gboolean outline, float line_width, float* rgba, int rgba_length1);
void unity_quicklist_rendering_menu_anchor_mask (cairo_surface_t** surf, gint width, gint height, float anchor_width, float anchor_height, gboolean negative, gboolean outline, float line_width, float* rgba, int rgba_length1);
void unity_quicklist_rendering_menu_bottom_mask (cairo_surface_t** surf, gint width, gint height, float radius, float anchor_width, gboolean negative, gboolean outline, float line_width, float* rgba, int rgba_length1);
void unity_quicklist_rendering_menu_full_mask (cairo_t* cr, gint w, gint h, float anchor_y);
void unity_quicklist_rendering_menu_fill_mask (cairo_t* cr, gint w, gint h, float anchor_y);
void unity_quicklist_rendering_menu_background (cairo_t* cr, gint w, gint h, float anchor_y);
UnityQuicklistRenderingMenu* unity_quicklist_rendering_menu_new (void);
UnityQuicklistRenderingMenu* unity_quicklist_rendering_menu_construct (GType object_type);
GType unity_shell_mode_get_type (void) G_GNUC_CONST;
GType unity_dnd_targets_get_type (void) G_GNUC_CONST;
GType unity_window_action_get_type (void) G_GNUC_CONST;
GType unity_shell_get_type (void) G_GNUC_CONST;
guint32 unity_shell_get_current_time (UnityShell* self);
UnityShellMode unity_shell_get_mode (UnityShell* self);
ClutterStage* unity_shell_get_stage (UnityShell* self);
void unity_shell_show_unity (UnityShell* self);
void unity_shell_hide_unity (UnityShell* self);
gint unity_shell_get_indicators_width (UnityShell* self);
gint unity_shell_get_launcher_width_foobar (UnityShell* self);
gint unity_shell_get_panel_height_foobar (UnityShell* self);
void unity_shell_ensure_input_region (UnityShell* self);
void unity_shell_add_fullscreen_request (UnityShell* self, GObject* o);
gboolean unity_shell_remove_fullscreen_request (UnityShell* self, GObject* o);
void unity_shell_grab_keyboard (UnityShell* self, gboolean grab, guint32 timestamp);
void unity_shell_about_to_show_places (UnityShell* self);
void unity_shell_close_xids (UnityShell* self, GArray* xids);
void unity_shell_show_window (UnityShell* self, guint32 xid);
void unity_shell_expose_xids (UnityShell* self, GArray* xids);
void unity_shell_stop_expose (UnityShell* self);
void unity_shell_get_window_details (UnityShell* self, guint32 xid, gboolean* allows_resize, gboolean* is_maximised);
void unity_shell_do_window_action (UnityShell* self, guint32 xid, UnityWindowAction action);
gboolean unity_shell_get_menus_swallow_events (UnityShell* self);
gboolean unity_shell_get_super_key_active (UnityShell* self);
void unity_shell_set_super_key_active (UnityShell* self, gboolean value);
gboolean unity_shell_get_is_starting (UnityShell* self);
void unity_shell_set_is_starting (UnityShell* self, gboolean value);
extern UnityShell* unity_global_shell;
GType unity_theme_file_path_get_type (void) G_GNUC_CONST;
void unity_theme_file_path_add_icon_theme (UnityThemeFilePath* self, GtkIconTheme* theme);
void unity_theme_file_path_get_icon_filepath (UnityThemeFilePath* self, const char* icon_name, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_theme_file_path_get_icon_filepath_finish (UnityThemeFilePath* self, GAsyncResult* _res_);
UnityThemeFilePath* unity_theme_file_path_new (void);
UnityThemeFilePath* unity_theme_file_path_construct (GType object_type);
gboolean unity_icon_name_exists_in_theme (const char* icon_name, const char* theme);
GType unity_theme_image_get_type (void) G_GNUC_CONST;
UnityThemeImage* unity_theme_image_new (const char* icon_name);
UnityThemeImage* unity_theme_image_construct (GType object_type, const char* icon_name);
const char* unity_theme_image_get_icon_name (UnityThemeImage* self);
void unity_theme_image_set_icon_name (UnityThemeImage* self, const char* value);
GType unity_app_info_manager_get_type (void) G_GNUC_CONST;
UnityAppInfoManager* unity_app_info_manager_get_instance (void);
GAppInfo* unity_app_info_manager_lookup (UnityAppInfoManager* self, const char* id);
GeeList* unity_app_info_manager_get_categories (UnityAppInfoManager* self, const char* id);
void unity_app_info_manager_lookup_async (UnityAppInfoManager* self, const char* id, GAsyncReadyCallback _callback_, gpointer _user_data_);
GAppInfo* unity_app_info_manager_lookup_finish (UnityAppInfoManager* self, GAsyncResult* _res_, GError** error);
void unity_app_info_manager_clear (UnityAppInfoManager* self);
GType unity_cairo_canvas_get_type (void) G_GNUC_CONST;
UnityCairoCanvas* unity_cairo_canvas_new (UnityCairoCanvasCairoCanvasPaint _func, void* _func_target);
UnityCairoCanvas* unity_cairo_canvas_construct (GType object_type, UnityCairoCanvasCairoCanvasPaint _func, void* _func_target);
void unity_cairo_canvas_update (UnityCairoCanvas* self);
GType unity_expanding_bin_state_get_type (void) G_GNUC_CONST;
GType unity_expanding_bin_get_type (void) G_GNUC_CONST;
#define UNITY_EXPANDING_BIN_ANIMATION_TIME 500
UnityExpandingBin* unity_expanding_bin_new (void);
UnityExpandingBin* unity_expanding_bin_construct (GType object_type);
float unity_expanding_bin_get_size_factor (UnityExpandingBin* self);
void unity_expanding_bin_set_size_factor (UnityExpandingBin* self, float value);
UnityExpandingBinState unity_expanding_bin_get_bin_state (UnityExpandingBin* self);
void unity_expanding_bin_set_bin_state (UnityExpandingBin* self, UnityExpandingBinState value);
float unity_expanding_bin_get_unexpanded_height (UnityExpandingBin* self);
void unity_expanding_bin_set_unexpanded_height (UnityExpandingBin* self, float value);
GType unity_favorites_get_type (void) G_GNUC_CONST;
extern UnityFavorites* unity_favorites_singleton;
UnityFavorites* unity_favorites_get_default (void);
GeeArrayList* unity_favorites_get_favorites (UnityFavorites* self);
void unity_favorites_add_favorite (UnityFavorites* self, const char* uid);
void unity_favorites_remove_favorite (UnityFavorites* self, const char* uid);
gboolean unity_favorites_is_favorite (UnityFavorites* self, const char* uid);
char* unity_favorites_find_uid_for_desktop_file (UnityFavorites* self, const char* desktop_file);
char* unity_favorites_get_string (UnityFavorites* self, const char* uid, const char* name);
void unity_favorites_set_string (UnityFavorites* self, const char* uid, const char* name, const char* value);
gint* unity_favorites_get_int (UnityFavorites* self, const char* uid, const char* name);
void unity_favorites_set_int (UnityFavorites* self, const char* uid, const char* name, gint value);
float* unity_favorites_get_float (UnityFavorites* self, const char* uid, const char* name);
void unity_favorites_set_float (UnityFavorites* self, const char* uid, const char* name, float value);
gboolean* unity_favorites_get_bool (UnityFavorites* self, const char* uid, const char* name);
void unity_favorites_set_bool (UnityFavorites* self, const char* uid, const char* name, gboolean value);
UnityFavorites* unity_favorites_construct (GType object_type);
GType unity_gconf_favorites_get_type (void) G_GNUC_CONST;
UnityGConfFavorites* unity_gconf_favorites_new (void);
UnityGConfFavorites* unity_gconf_favorites_construct (GType object_type);
void unity_io_read_stream_async (GInputStream* input, guchar* buffer, int buffer_length1, gsize buffer_lenght, gint io_priority, GCancellable* cancellable, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_io_read_stream_finish (GAsyncResult* _res_, void** data, gsize* size, GError** error);
void unity_io_open_from_dirs (const char* filename, char** dirs, int dirs_length1, GAsyncReadyCallback _callback_, gpointer _user_data_);
GFileInputStream* unity_io_open_from_dirs_finish (GAsyncResult* _res_, GError** error);
void unity_io_open_from_data_dirs (const char* filename, GAsyncReadyCallback _callback_, gpointer _user_data_);
GFileInputStream* unity_io_open_from_data_dirs_finish (GAsyncResult* _res_, GError** error);
char** unity_io_get_system_data_dirs (int* result_length1);
GType unity_layered_bin_get_type (void) G_GNUC_CONST;
UnityLayeredBin* unity_layered_bin_new (void);
UnityLayeredBin* unity_layered_bin_construct (GType object_type);
GList* unity_layered_bin_get_children (UnityLayeredBin* self);
GType unity_pixbuf_cache_get_type (void) G_GNUC_CONST;
UnityPixbufCache* unity_pixbuf_cache_new (gboolean _autodispose);
UnityPixbufCache* unity_pixbuf_cache_construct (GType object_type, gboolean _autodispose);
UnityPixbufCache* unity_pixbuf_cache_get_default (void);
void unity_pixbuf_cache_set (UnityPixbufCache* self, const char* icon_id, GdkPixbuf* pixbuf, gint size);
GdkPixbuf* unity_pixbuf_cache_get (UnityPixbufCache* self, const char* icon_id, gint size);
void unity_pixbuf_cache_clear (UnityPixbufCache* self);
void unity_pixbuf_cache_set_image_from_icon_name (UnityPixbufCache* self, CtkImage* image, const char* icon_name, gint size, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_pixbuf_cache_set_image_from_icon_name_finish (UnityPixbufCache* self, GAsyncResult* _res_);
void unity_pixbuf_cache_set_image_from_gicon_string (UnityPixbufCache* self, CtkImage* image, const char* gicon_as_string, gint size, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_pixbuf_cache_set_image_from_gicon_string_finish (UnityPixbufCache* self, GAsyncResult* _res_);
void unity_pixbuf_cache_set_image_from_gicon (UnityPixbufCache* self, CtkImage* image, GIcon* icon, gint size, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_pixbuf_cache_set_image_from_gicon_finish (UnityPixbufCache* self, GAsyncResult* _res_);
guint unity_pixbuf_cache_get_size (UnityPixbufCache* self);
GType unity_place_renderer_info_get_type (void) G_GNUC_CONST;
void unity_place_renderer_info_set_hint (UnityPlaceRendererInfo* self, const char* hint, const char* val);
char* unity_place_renderer_info_get_hint (UnityPlaceRendererInfo* self, const char* hint);
void unity_place_renderer_info_clear_hint (UnityPlaceRendererInfo* self, const char* hint);
void unity_place_renderer_info_clear_hints (UnityPlaceRendererInfo* self);
guint unity_place_renderer_info_num_hints (UnityPlaceRendererInfo* self);
const char* unity_place_renderer_info_get_default_renderer (UnityPlaceRendererInfo* self);
void unity_place_renderer_info_set_default_renderer (UnityPlaceRendererInfo* self, const char* value);
DeeModel* unity_place_renderer_info_get_groups_model (UnityPlaceRendererInfo* self);
void unity_place_renderer_info_set_groups_model (UnityPlaceRendererInfo* self, DeeModel* value);
DeeModel* unity_place_renderer_info_get_results_model (UnityPlaceRendererInfo* self);
void unity_place_renderer_info_set_results_model (UnityPlaceRendererInfo* self, DeeModel* value);
GType unity_place_search_get_type (void) G_GNUC_CONST;
UnityPlaceSearch* unity_place_search_new (const char* search, GHashTable* hints);
UnityPlaceSearch* unity_place_search_construct (GType object_type, const char* search, GHashTable* hints);
char* unity_place_search_get_search_string (UnityPlaceSearch* self);
GList* unity_place_search_get_hints (UnityPlaceSearch* self);
void unity_place_search_set_hint (UnityPlaceSearch* self, const char* hint, const char* val);
char* unity_place_search_get_hint (UnityPlaceSearch* self, const char* hint);
void unity_place_search_clear_hint (UnityPlaceSearch* self, const char* hint);
void unity_place_search_clear_hints (UnityPlaceSearch* self);
guint unity_place_search_num_hints (UnityPlaceSearch* self);
gboolean unity_place_search_equals (UnityPlaceSearch* self, UnityPlaceSearch* other);
GType unity_place_entry_info_get_type (void) G_GNUC_CONST;
UnityPlaceEntryInfo* unity_place_entry_info_new (const char* dbus_path);
UnityPlaceEntryInfo* unity_place_entry_info_construct (GType object_type, const char* dbus_path);
void unity_place_entry_info_set_hint (UnityPlaceEntryInfo* self, const char* hint, const char* val);
char* unity_place_entry_info_get_hint (UnityPlaceEntryInfo* self, const char* hint);
void unity_place_entry_info_clear_hint (UnityPlaceEntryInfo* self, const char* hint);
void unity_place_entry_info_clear_hints (UnityPlaceEntryInfo* self);
guint unity_place_entry_info_num_hints (UnityPlaceEntryInfo* self);
UnityPlaceRendererInfo* unity_place_entry_info_get_entry_renderer_info (UnityPlaceEntryInfo* self);
UnityPlaceRendererInfo* unity_place_entry_info_get_global_renderer_info (UnityPlaceEntryInfo* self);
const char* unity_place_entry_info_get_dbus_path (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_dbus_path (UnityPlaceEntryInfo* self, const char* value);
const char* unity_place_entry_info_get_display_name (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_display_name (UnityPlaceEntryInfo* self, const char* value);
const char* unity_place_entry_info_get_icon (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_icon (UnityPlaceEntryInfo* self, const char* value);
guint unity_place_entry_info_get_position (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_position (UnityPlaceEntryInfo* self, guint value);
char** unity_place_entry_info_get_mimetypes (UnityPlaceEntryInfo* self, int* result_length1);
void unity_place_entry_info_set_mimetypes (UnityPlaceEntryInfo* self, char** value, int value_length1);
gboolean unity_place_entry_info_get_sensitive (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_sensitive (UnityPlaceEntryInfo* self, gboolean value);
DeeModel* unity_place_entry_info_get_sections_model (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_sections_model (UnityPlaceEntryInfo* self, DeeModel* value);
gboolean unity_place_entry_info_get_active (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_active (UnityPlaceEntryInfo* self, gboolean value);
guint unity_place_entry_info_get_active_section (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_active_section (UnityPlaceEntryInfo* self, guint value);
UnityPlaceSearch* unity_place_entry_info_get_active_search (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_active_search (UnityPlaceEntryInfo* self, UnityPlaceSearch* value);
UnityPlaceSearch* unity_place_entry_info_get_active_global_search (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_active_global_search (UnityPlaceEntryInfo* self, UnityPlaceSearch* value);
GType unity_place_browser_get_type (void) G_GNUC_CONST;
UnityPlaceBrowser* unity_place_entry_info_get_browser (UnityPlaceEntryInfo* self);
void unity_place_entry_info_set_browser (UnityPlaceEntryInfo* self, UnityPlaceBrowser* value);
GType unity_place_controller_get_type (void) G_GNUC_CONST;
UnityPlaceController* unity_place_controller_new (const char* dbus_path);
UnityPlaceController* unity_place_controller_construct (GType object_type, const char* dbus_path);
void unity_place_controller_add_entry (UnityPlaceController* self, UnityPlaceEntryInfo* entry);
UnityPlaceEntryInfo* unity_place_controller_get_entry (UnityPlaceController* self, const char* dbus_path);
void unity_place_controller_remove_entry (UnityPlaceController* self, const char* dbus_path);
guint unity_place_controller_num_entries (UnityPlaceController* self);
char** unity_place_controller_get_entry_paths (UnityPlaceController* self, int* result_length1);
UnityPlaceEntryInfo** unity_place_controller_get_entries (UnityPlaceController* self, int* result_length1);
void unity_place_controller_export (UnityPlaceController* self, GError** error);
void unity_place_controller_unexport (UnityPlaceController* self, GError** error);
const char* unity_place_controller_get_dbus_path (UnityPlaceController* self);
gboolean unity_place_controller_get_exported (UnityPlaceController* self);
UnityPlaceActivation* unity_place_activation_dbus_proxy_new (DBusGConnection* connection, const char* name, const char* path);
GType unity_place_activation_get_type (void) G_GNUC_CONST;
UnityPlaceActivation* unity_place_controller_get_activation (UnityPlaceController* self);
void unity_place_controller_set_activation (UnityPlaceController* self, UnityPlaceActivation* value);
void unity_place_activation_activate (UnityPlaceActivation* self, const char* uri, GAsyncReadyCallback _callback_, gpointer _user_data_);
guint32 unity_place_activation_activate_finish (UnityPlaceActivation* self, GAsyncResult* _res_, GError** error);
GType unity_place_activation_status_get_type (void) G_GNUC_CONST;
UnityPlaceBrowser* unity_place_browser_new (GType e_type, GBoxedCopyFunc e_dup_func, GDestroyNotify e_destroy_func, const char* dbus_path);
UnityPlaceBrowser* unity_place_browser_construct (GType object_type, GType e_type, GBoxedCopyFunc e_dup_func, GDestroyNotify e_destroy_func, const char* dbus_path);
void unity_place_browser_record_state (UnityPlaceBrowser* self, gconstpointer state, const char* comment);
void unity_place_browser_clear (UnityPlaceBrowser* self);
void unity_place_browser_go_back (UnityPlaceBrowser* self);
void unity_place_browser_go_forward (UnityPlaceBrowser* self);
const char* unity_place_browser_get_dbus_path (UnityPlaceBrowser* self);
gpointer unity_place_stack_ref (gpointer instance);
void unity_place_stack_unref (gpointer instance);
GParamSpec* unity_place_param_spec_stack (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void unity_place_value_set_stack (GValue* value, gpointer v_object);
void unity_place_value_take_stack (GValue* value, gpointer v_object);
gpointer unity_place_value_get_stack (const GValue* value);
GType unity_place_stack_get_type (void) G_GNUC_CONST;
UnityPlaceStack* unity_place_stack_new (GType e_type, GBoxedCopyFunc e_dup_func, GDestroyNotify e_destroy_func);
UnityPlaceStack* unity_place_stack_construct (GType object_type, GType e_type, GBoxedCopyFunc e_dup_func, GDestroyNotify e_destroy_func);
UnityPlaceStack* unity_place_stack_push (UnityPlaceStack* self, gconstpointer element);
gpointer unity_place_stack_pop (UnityPlaceStack* self);
gpointer unity_place_stack_peek (UnityPlaceStack* self);
gint unity_place_stack_size (UnityPlaceStack* self);
void unity_place_stack_clear (UnityPlaceStack* self);
gboolean unity_place_stack_is_empty (UnityPlaceStack* self);
GType unity_place_renderer_get_type (void) G_GNUC_CONST;
void unity_place_renderer_set_models (UnityPlaceRenderer* self, DeeModel* groups, DeeModel* results, GeeHashMap* hints);
GType unity_stripe_texture_get_type (void) G_GNUC_CONST;
UnityStripeTexture* unity_stripe_texture_new (UnityStripeTextureStripeTextureOutlineFunc func, void* func_target);
UnityStripeTexture* unity_stripe_texture_construct (GType object_type, UnityStripeTextureStripeTextureOutlineFunc func, void* func_target);
void unity_stripe_texture_rounded_outline (UnityStripeTexture* self, cairo_t* cr, gint width, gint height);
float unity_stripe_texture_get_radius (UnityStripeTexture* self);
void unity_stripe_texture_set_radius (UnityStripeTexture* self, float value);
char* unity_webapp_urlify (const char* uri);
GType unity_webapp_fetch_file_get_type (void) G_GNUC_CONST;
UnityWebappFetchFile* unity_webapp_fetch_file_new (const char* uri);
UnityWebappFetchFile* unity_webapp_fetch_file_construct (GType object_type, const char* uri);
void unity_webapp_fetch_file_fetch_data (UnityWebappFetchFile* self, GAsyncReadyCallback _callback_, gpointer _user_data_);
void unity_webapp_fetch_file_fetch_data_finish (UnityWebappFetchFile* self, GAsyncResult* _res_);
const char* unity_webapp_fetch_file_get_uri (UnityWebappFetchFile* self);
char* unity_webapp_get_hostname (const char* uri);
GType unity_webapp_webicon_fetcher_get_type (void) G_GNUC_CONST;
UnityWebappWebiconFetcher* unity_webapp_webicon_fetcher_new (const char* uri, const char* destination, const char* desktop_file);
UnityWebappWebiconFetcher* unity_webapp_webicon_fetcher_construct (GType object_type, const char* uri, const char* destination, const char* desktop_file);
void unity_webapp_webicon_fetcher_fetch_webapp_data (UnityWebappWebiconFetcher* self);
const char* unity_webapp_webicon_fetcher_get_uri (UnityWebappWebiconFetcher* self);
const char* unity_webapp_webicon_fetcher_get_destination (UnityWebappWebiconFetcher* self);
const char* unity_webapp_webicon_fetcher_get_desktop_location (UnityWebappWebiconFetcher* self);


G_END_DECLS

#endif
