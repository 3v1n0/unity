=== added file 'manual-tests/AltCombos.txt'
--- a/manual-tests/AltCombos.txt	1970-01-01 00:00:00 +0000
+++ b/manual-tests/AltCombos.txt	2012-03-14 09:20:23 +0000
@@ -0,0 +1,10 @@
+Alt+Arrow keys not passed to application
+----------------------------------------
+Tests that Alt+ArrowKey events are correctly passed to the active window
+when Unity is not responding to them.
+
+#. Open gnome-terminal
+#. While holding Alt, tap arrow keys: Up, Down, Right, Left
+
+Outcome
+  The terminal should show the keycodes were received as text "ABCD".

=== modified file 'plugins/unityshell/src/unityshell.cpp'
--- a/plugins/unityshell/src/unityshell.cpp	2012-03-13 20:44:08 +0000
+++ b/plugins/unityshell/src/unityshell.cpp	2012-03-14 09:20:23 +0000
@@ -1767,33 +1767,45 @@
 bool UnityScreen::altTabPrevAllInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
 {
   if (switcher_controller_->Visible())
+  {
     switcher_controller_->Prev();
+    return true;
+  }
 
-  return true;
+  return false;
 }
 
 bool UnityScreen::altTabPrevInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
 {
   if (switcher_controller_->Visible())
+  {
     switcher_controller_->Prev();
+    return true;
+  }
 
-  return true;
+  return false;
 }
 
 bool UnityScreen::altTabDetailStartInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
 {
   if (switcher_controller_->Visible())
+  {
     switcher_controller_->SetDetail(true);
+    return true;
+  }
 
-  return true;
+  return false;
 }
 
 bool UnityScreen::altTabDetailStopInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
 {
   if (switcher_controller_->Visible())
+  {
     switcher_controller_->SetDetail(false);
+    return true;
+  }
 
-  return true;
+  return false;
 }
 
 bool UnityScreen::altTabNextWindowInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
@@ -1813,9 +1825,12 @@
 bool UnityScreen::altTabPrevWindowInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)
 {
   if (switcher_controller_->Visible())
+  {
     switcher_controller_->PrevDetail();
+    return true;
+  }
 
-  return true;
+  return false;
 }
 
 bool UnityScreen::launcherSwitcherForwardInitiate(CompAction* action, CompAction::State state, CompOption::Vector& options)

