/* dbusmodel.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "Dbus", lower_case_cprefix = "dbus_")]
namespace Dbus {
	[CCode (cheader_filename = "dbusmodel/dbusmodel.h")]
	public class Model : GLib.Object {
		[CCode (has_construct_function = false)]
		public Model (string name, uint n_columns, ...);
		public void append (...);
		public void clear ();
		public void connect ();
		public void @get (Dbus.ModelIter iter, ...);
		public bool get_bool (Dbus.ModelIter iter, uint column);
		public GLib.Type get_column_type (uint column);
		public double get_double (Dbus.ModelIter iter, uint column);
		public unowned Dbus.ModelIter get_first_iter ();
		public int get_int (Dbus.ModelIter iter, uint column);
		public int64 get_int64 (Dbus.ModelIter iter, uint column);
		public unowned Dbus.ModelIter get_iter_at_row (uint row);
		public unowned Dbus.ModelIter get_last_iter ();
		public uint get_n_columns ();
		public uint get_n_rows ();
		public int get_position (Dbus.ModelIter iter);
		public unowned string get_string (Dbus.ModelIter iter, uint column);
		public uchar get_uchar (Dbus.ModelIter iter, uint column);
		public uint64 get_uid (Dbus.ModelIter iter);
		public uint get_uint (Dbus.ModelIter iter, uint column);
		public uint64 get_uint64 (Dbus.ModelIter iter, uint column);
		public void get_valist (Dbus.ModelIter iter, void* args);
		public void get_value (Dbus.ModelIter iter, uint column, GLib.Value value);
		public void insert (int pos, ...);
		public void insert_before (Dbus.ModelIter iter);
		public void insert_before_valist (Dbus.ModelIter iter, void* args);
		public void insert_valist (int pos, void* args);
		public bool is_first (Dbus.ModelIter iter);
		public bool is_last (Dbus.ModelIter iter);
		public unowned Dbus.ModelIter next (Dbus.ModelIter iter);
		public void prepend (...);
		public unowned Dbus.ModelIter prev (Dbus.ModelIter iter);
		public void remove (Dbus.ModelIter iter);
		public void @set (Dbus.ModelIter iter, ...);
		public void set_valist (Dbus.ModelIter iter, void* args);
		public void set_value (Dbus.ModelIter iter, uint column, GLib.Value value);
		[CCode (has_construct_function = false)]
		public Model.with_name (string name);
		public virtual signal void ready ();
		public virtual signal void row_added (Dbus.ModelIter iter);
		public virtual signal void row_changed (Dbus.ModelIter iter);
		public virtual signal void row_removed (Dbus.ModelIter iter);
	}
	[Compact]
	[CCode (cheader_filename = "dbusmodel/dbusmodel.h")]
	public class ModelIter {
	}
	[CCode (cheader_filename = "dbusmodel/dbusmodel.h")]
	public class Peer : GLib.Object {
		public void connect ();
		public unowned string get_swarm_leader ();
		public unowned string get_swarm_name ();
		public bool is_swarm_leader ();
		public string swarm_leader { get; }
		[NoAccessorMethod]
		public string swarm_name { owned get; set construct; }
		public virtual signal void connected (string peer_name);
		public virtual signal void peer_found (string name);
		public virtual signal void peer_lost (string name);
	}
	[CCode (cprefix = "DBUS_MODEL_ERROR_LEADER_", has_type_id = false, cheader_filename = "dbusmodel/dbusmodel.h")]
	public enum ModelError {
		INVALIDATED
	}
	[CCode (cheader_filename = "dbusmodel/dbusmodel.h")]
	public const string MODEL_IFACE;
	[CCode (cheader_filename = "dbusmodel/dbusmodel.h")]
	public const string SWARM_IFACE;
}
